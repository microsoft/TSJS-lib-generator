[
    {
        "kind": "interface",
        "name": "ErrorEventInit",
        "properties": [
            {
                "name": "message?",
                "type": "string"
            },
            {
                "name": "filename?",
                "type": "string"
            },
            {
                "name": "lineno?",
                "type": "number"
            },
            {
                "name": "conlno?",
                "type": "number"
            },
            {
                "name": "error?",
                "type": "any"
            }
        ]
    },
    {
        "kind": "property",
        "interface": "CSSStyleDeclaration",
        "name": "resize",
        "type": "string | null"
    },
    {
        "kind": "interface",
        "name": "StorageEventInit",
        "flavor":  "Web",
        "extends": "EventInit",
        "properties": [
            {
                "name": "key?",
                "type": "string"
            },
            {
                "name": "oldValue?",
                "type": "string"
            },
            {
                "name": "newValue?",
                "type": "string"
            },
            {
                "name": "url",
                "type": "string"
            },
            {
                "name": "storageArea?",
                "type": "Storage"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "Canvas2DContextAttributes",
        "flavor": "Web",
        "properties": [
            {
                "name": "alpha?",
                "type": "boolean"
            },
            {
                "name": "willReadFrequently?",
                "type": "boolean"
            },
            {
                "name": "storage?",
                "type": "boolean"
            },
            {
                "name": "[attribute: string]",
                "type": "boolean | string | undefined"
            }
        ]
    },
    {
        "kind": "property",
        "interface": "IDBObjectStoreParameters",
        "name": "autoIncrement?",
        "type": "boolean"
    },
    {
        "kind": "property",
        "interface": "IDBIndexParameters",
        "name": "multiEntry?",
        "type": "boolean"
    },
    {
        "kind": "property",
        "interface": "IDBIndex",
        "name": "multiEntry",
        "type": "boolean"
    },
    {
        "kind": "interface",
        "name": "URLSearchParams",
        "flavor": "Web",
        "constructorSignatures": [
            "new (init?: string | URLSearchParams): URLSearchParams"
        ],
        "methods": [
            {
                "name": "append",
                "signatures": ["append(name: string, value: string): void"]
            },
            {
                "name": "delete",
                "signatures": ["delete(name: string): void"]
            },
            {
                "name": "get",
                "signatures": ["get(name: string): string | null"]
            },
            {
                "name": "getAll",
                "signatures": ["getAll(name: string): string[]"]
            },
            {
                "name": "has",
                "signatures": ["has(name: string): boolean"]
            },
            {
                "name": "set",
                "signatures": ["set(name: string, value: string): void"]
            }
        ]
    },
    {
        "kind": "property",
        "interface": "URL",
        "name": "searchparams",
        "readonly": true,
        "type": "URLSearchParams"
    },
    {
        "kind": "property",
        "interface": "Window",
        "exposeGlobally": false,
        "name": "URL",
        "type": "typeof URL"
    },
    {
        "kind": "property",
        "interface": "Window",
        "exposeGlobally": false,
        "name": "Blob",
        "type": "typeof Blob"
    },
    {
        "kind": "property",
        "interface": "Element",
        "name": "innerHTML",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "SVGElement",
        "name": "className",
        "type": "any"
    },
    {
        "kind": "interface",
        "name": "NodeListOf<TNode extends Node>",
        "flavor": "Web",
        "extends": "NodeList",
        "properties": [
            {
                "name": "length",
                "type": "number"
            }
        ],
        "methods": [
            {
                "name": "item",
                "signatures": ["item(index: number): TNode"]
            }
        ],
        "indexer": [
            {
                "signatures": ["[index: number]: TNode"]
            }
        ]
    },
    {
        "kind": "interface",
        "name": "HTMLCollectionOf<T extends Element>",
        "flavor": "Web",
        "extends": "HTMLCollection",
        "methods": [
            {
                "name": "item",
                "signatures": ["item(index: number): T"]
            },
            {
                "name": "namedItem",
                "signatures": ["namedItem(name: string): T"]
            }
        ],
        "indexer": [
            {
                "signatures": [
                    "[index: number]: T"
                ]
            }
        ]
    },
    {
        "kind": "interface",
        "name": "BlobPropertyBag",
        "properties": [
            {
                "name": "type?",
                "type": "string"
            },
            {
                "name": "endings?",
                "type": "string"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "FilePropertyBag",
        "properties": [
            {
                "name": "type?",
                "type": "string"
            },
            {
                "name": "lastModified?",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "EventListenerObject",
        "methods": [
            {
                "name": "handleEvent",
                "signatures": ["handleEvent(evt: Event): void"]
            }
        ]
    },
    {
        "kind": "interface",
        "name": "EventListenerObjectFor<T extends Event>",
        "methods": [
            {
                "name": "handleEvent",
                "signatures": ["handleEvent(evt: T): void"]
            }
        ]
    },
    {
        "kind": "interface",
        "name": "EventListenerFor<T extends Event>",
        "methods": [
            {
                "signatures": ["(evt: T): void"]
            }
        ]
    },
    {
        "kind": "interface",
        "name": "MessageEventInit",
        "extends": "EventInit",
        "properties": [
            {
                "name": "data?",
                "type": "any"
            },
            {
                "name": "origin?",
                "type": "string"
            },
            {
                "name": "lastEventId?",
                "type": "string"
            },
            {
                "name": "channel?",
                "type": "string"
            },
            {
                "name": "source?",
                "type": "any"
            },
            {
                "name": "ports?",
                "type": "MessagePort[]"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "ProgressEventInit",
        "extends": "EventInit",
        "properties": [
            {
                "name": "lengthComputable?",
                "type": "boolean"
            },
            {
                "name": "loaded?",
                "type": "number"
            },
            {
                "name": "total?",
                "type": "number"
            }
        ]
    },
    {
        "kind": "method",
        "interface": "Element",
        "signatures": ["getElementsByClassName(classNames: string): NodeListOf<Element>"]
    },
    {
        "kind": "method",
        "interface": "Element",
        "signatures": ["matches(selector: string): boolean"]
    },
    {
        "kind": "method",
        "interface": "Element",
        "signatures": [ "closest(selector: string): Element | null" ]
    },
    {
        "kind": "typedef",
        "flavor": "Web",
        "name": "ScrollBehavior",
        "type": "\"auto\" | \"instant\" | \"smooth\""
    },
    {
        "kind": "interface",
        "flavor": "Web",
        "name": "ScrollOptions",
        "properties": [
            {
                "name": "behavior?",
                "type": "ScrollBehavior"
            }
        ]
    },
    {
        "kind": "interface",
        "flavor": "Web",
        "name": "ScrollToOptions",
        "extends": "ScrollOptions",
        "properties": [
            {
                "name": "left?",
                "type": "number"
            },
            {
                "name": "top?",
                "type": "number"
            }
        ]
    },
    {
        "kind": "method",
        "interface": "Window",
        "signatures": [ "scroll(options?: ScrollToOptions): void" ]
    },
    {
        "kind": "method",
        "interface": "Window",
        "signatures": [ "scrollTo(options?: ScrollToOptions): void" ]
    },
    {
        "kind": "method",
        "interface": "Window",
        "signatures": [ "scrollBy(options?: ScrollToOptions): void" ]
    },
    {
        "kind": "typedef",
        "flavor": "Web",
        "name": "ScrollLogicalPosition",
        "type": "\"start\" | \"center\" | \"end\" | \"nearest\""
    },
    {
        "kind": "interface",
        "flavor": "Web",
        "name": "ScrollIntoViewOptions",
        "extends": "ScrollOptions",
        "properties": [
            {
                "name": "block?",
                "type": "ScrollLogicalPosition"
            },
            {
                "name": "inline?",
                "type": "ScrollLogicalPosition"
            }
        ]
    },
    {
        "kind": "method",
        "interface": "Element",
        "signatures": [ "scrollIntoView(arg?: boolean | ScrollIntoViewOptions): void" ]
    },
    {
        "kind": "method",
        "interface": "Element",
        "signatures": [
            "scroll(options?: ScrollToOptions): void",
            "scroll(x: number, y: number): void"
        ]
    },
    {
        "kind": "method",
        "interface": "Element",
        "signatures": [
            "scrollTo(options?: ScrollToOptions): void",
            "scrollTo(x: number, y: number): void"
        ]
    },
    {
        "kind": "method",
        "interface": "Element",
        "signatures": [
            "scrollBy(options?: ScrollToOptions): void",
            "scrollBy(x: number, y: number): void"
        ]
    },
    {
        "kind": "indexer",
        "interface": "HTMLCollection",
        "signatures": [
            "[index: number]: Element"
        ]
    },
    {
        "kind": "signatureoverload",
        "name": "createElementNS",
        "interface": "Document",
        "signatures": [
            "createElementNS(namespaceURI: \"http://www.w3.org/1999/xhtml\", qualifiedName: string): HTMLElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"a\"): SVGAElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"circle\"): SVGCircleElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"clipPath\"): SVGClipPathElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"componentTransferFunction\"): SVGComponentTransferFunctionElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"defs\"): SVGDefsElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"desc\"): SVGDescElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"ellipse\"): SVGEllipseElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feBlend\"): SVGFEBlendElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feColorMatrix\"): SVGFEColorMatrixElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feComponentTransfer\"): SVGFEComponentTransferElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feComposite\"): SVGFECompositeElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feConvolveMatrix\"): SVGFEConvolveMatrixElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feDiffuseLighting\"): SVGFEDiffuseLightingElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feDisplacementMap\"): SVGFEDisplacementMapElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feDistantLight\"): SVGFEDistantLightElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feFlood\"): SVGFEFloodElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feFuncA\"): SVGFEFuncAElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feFuncB\"): SVGFEFuncBElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feFuncG\"): SVGFEFuncGElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feFuncR\"): SVGFEFuncRElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feGaussianBlur\"): SVGFEGaussianBlurElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feImage\"): SVGFEImageElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feMerge\"): SVGFEMergeElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feMergeNode\"): SVGFEMergeNodeElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feMorphology\"): SVGFEMorphologyElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feOffset\"): SVGFEOffsetElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"fePointLight\"): SVGFEPointLightElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feSpecularLighting\"): SVGFESpecularLightingElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feSpotLight\"): SVGFESpotLightElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feTile\"): SVGFETileElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feTurbulence\"): SVGFETurbulenceElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"filter\"): SVGFilterElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"foreignObject\"): SVGForeignObjectElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"g\"): SVGGElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"image\"): SVGImageElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"gradient\"): SVGGradientElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"line\"): SVGLineElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"linearGradient\"): SVGLinearGradientElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"marker\"): SVGMarkerElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"mask\"): SVGMaskElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"path\"): SVGPathElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"metadata\"): SVGMetadataElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"pattern\"): SVGPatternElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"polygon\"): SVGPolygonElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"polyline\"): SVGPolylineElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"radialGradient\"): SVGRadialGradientElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"rect\"): SVGRectElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"svg\"): SVGSVGElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"script\"): SVGScriptElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"stop\"): SVGStopElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"style\"): SVGStyleElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"switch\"): SVGSwitchElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"symbol\"): SVGSymbolElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"tspan\"): SVGTSpanElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"textContent\"): SVGTextContentElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"text\"): SVGTextElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"textPath\"): SVGTextPathElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"textPositioning\"): SVGTextPositioningElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"title\"): SVGTitleElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"use\"): SVGUseElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"view\"): SVGViewElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: string): SVGElement"
        ]
    },
    {
        "kind": "method",
        "interface": "Navigator",
        "signatures": [
            "vibrate(pattern: number | number[]): boolean"
        ]
    },
    {
        "kind": "property",
        "interface": "Navigator",
        "name": "hardwareConcurrency",
        "readonly": true,
        "type": "number"
    },
    {
        "kind": "property",
        "interface": "WorkerNavigator",
        "name": "hardwareConcurrency",
        "readonly": true,
        "type": "number"
    },
    {
        "kind": "property",
        "interface": "HTMLLinkElement",
        "name": "import?",
        "type": "Document"
    },
    {
        "kind": "property",
        "interface": "AudioContext",
        "name": "state",
        "type": "string"
    },
    {
        "kind": "method",
        "interface": "HTMLCanvasElement",
        "name": "toBlob",
        "signatures": ["toBlob(callback: (result: Blob | null) => void, type?: string, ...arguments: any[]): void"]
    },
    {
        "kind": "property",
        "interface": "StorageEvent",
        "name": "key?",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "StorageEvent",
        "name": "oldValue?",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "StorageEvent",
        "name": "newValue?",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "StorageEvent",
        "name": "storageArea?",
        "type": "Storage"
    },
    {
        "kind": "property",
        "interface": "IDBObjectStore",
        "name": "autoIncrement",
        "type": "boolean"
    },
    {
        "kind": "interface",
        "flavor": "Web",
        "name": "ClipboardEventInit",
        "extends": "EventInit",
        "properties": [
            {
                "name": "data?",
                "type": "string"
            },
            {
                "name": "dataType?",
                "type": "string"
            }
        ]
    },
    {
        "kind": "typedef",
        "name": "IDBValidKey",
        "type": "number | string | Date | IDBArrayKey"
    },
    {
        "kind": "interface",
        "name": "IDBArrayKey",
        "extends": "Array<IDBValidKey>"
    },
    {
        "kind": "property",
        "interface": "HTMLInputElement",
        "name": "minLength",
        "type": "number"
    },
    {
        "kind": "property",
        "interface": "HTMLTextAreaElement",
        "name": "minLength",
        "type": "number"
    },
    {
        "kind": "property",
        "interface": "IDBDatabase",
        "name": "onversionchange",
        "type": "(ev: IDBVersionChangeEvent) => any"
    },
    {
        "kind": "method",
        "interface": "IDBDatabase",
        "name": "addEventListener",
        "signatures": ["addEventListener(type: \"versionchange\", listener: (ev: IDBVersionChangeEvent) => any, useCapture?: boolean): void"]
    },
    {
        "kind": "property",
        "interface": "CanvasRenderingContext2D",
        "name": "mozImageSmoothingEnabled",
        "type": "boolean"
    },
    {
        "kind": "property",
        "interface": "CanvasRenderingContext2D",
        "name": "webkitImageSmoothingEnabled",
        "type": "boolean"
    },
    {
        "kind": "property",
        "interface": "CanvasRenderingContext2D",
        "name": "oImageSmoothingEnabled",
        "type": "boolean"
    },
    {
        "kind": "property",
        "interface": "WebGLContextAttributes",
        "name": "failIfMajorPerformanceCaveat?",
        "type": "boolean"
    },
    {
        "kind": "typedef",
        "name": "BufferSource",
        "type": "ArrayBuffer | ArrayBufferView"
    },
    {
        "kind": "interface",
        "name": "RsaKeyGenParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "modulusLength",
                "type": "number"
            },
            {
                "name": "publicExponent",
                "type": "Uint8Array"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "RsaHashedKeyGenParams",
        "extends": "RsaKeyGenParams",
        "properties": [
            {
                "name": "hash",
                "type": "AlgorithmIdentifier"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "RsaKeyAlgorithm",
        "extends": "KeyAlgorithm",
        "properties": [
            {
                "name": "modulusLength",
                "type": "number"
            },
            {
                "name": "publicExponent",
                "type": "Uint8Array"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "RsaHashedKeyAlgorithm",
        "extends": "RsaKeyAlgorithm",
        "properties": [
            {
                "name": "hash",
                "type": "AlgorithmIdentifier"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "RsaHashedImportParams",
        "properties": [
            {
                "name": "hash",
                "type": "AlgorithmIdentifier"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "RsaPssParams",
        "properties": [
            {
                "name": "saltLength",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "RsaOaepParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "label?",
                "type": "BufferSource"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "EcdsaParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "hash",
                "type": "AlgorithmIdentifier"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "EcKeyGenParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "namedCurve",
                "type": "string"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "EcKeyAlgorithm",
        "extends": "KeyAlgorithm",
        "properties": [
            {
                "name": "typedCurve",
                "type": "string"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "EcKeyImportParams",
        "properties": [
            {
                "name": "namedCurve",
                "type": "string"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "EcdhKeyDeriveParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "public",
                "type": "CryptoKey"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "AesCtrParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "counter",
                "type": "BufferSource"
            },
            {
                "name": "length",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "AesKeyAlgorithm",
        "extends": "KeyAlgorithm",
        "properties": [
            {
                "name": "length",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "AesKeyGenParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "length",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "AesDerivedKeyParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "length",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "AesCbcParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "iv",
                "type": "BufferSource"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "AesCmacParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "length",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "AesGcmParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "iv",
                "type": "BufferSource"
            },
            {
                "name": "additionalData?",
                "type": "BufferSource"
            },
            {
                "name": "tagLength?",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "AesCfbParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "iv",
                "type": "BufferSource"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "HmacImportParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "hash?",
                "type": "AlgorithmIdentifier"
            },
            {
                "name": "length?",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "HmacKeyAlgorithm",
        "extends": "KeyAlgorithm",
        "properties": [
            {
                "name": "hash",
                "type": "AlgorithmIdentifier"
            },
            {
                "name": "length",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "HmacKeyGenParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "hash",
                "type": "AlgorithmIdentifier"
            },
            {
                "name": "length?",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "DhKeyGenParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "prime",
                "type": "Uint8Array"
            },
            {
                "name": "generator",
                "type": "Uint8Array"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "DhKeyAlgorithm",
        "extends": "KeyAlgorithm",
        "properties": [
            {
                "name": "prime",
                "type": "Uint8Array"
            },
            {
                "name": "generator",
                "type": "Uint8Array"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "DhKeyDeriveParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "public",
                "type": "CryptoKey"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "DhImportKeyParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "prime",
                "type": "Uint8Array"
            },
            {
                "name": "generator",
                "type": "Uint8Array"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "ConcatParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "hash?",
                "type": "AlgorithmIdentifier"
            },
            {
                "name": "algorithmId",
                "type": "Uint8Array"
            },
            {
                "name": "partyUInfo",
                "type": "Uint8Array"
            },
            {
                "name": "partyVInfo",
                "type": "Uint8Array"
            },
            {
                "name": "publicInfo?",
                "type": "Uint8Array"
            },
            {
                "name": "privateInfo?",
                "type": "Uint8Array"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "HkdfCtrParams",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "hash",
                "type": "AlgorithmIdentifier"
            },
            {
                "name": "label",
                "type": "BufferSource"
            },
            {
                "name": "context",
                "type": "BufferSource"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "Pbkdf2Params",
        "extends": "Algorithm",
        "properties": [
            {
                "name": "salt",
                "type": "BufferSource"
            },
            {
                "name": "iterations",
                "type": "number"
            },
            {
                "name": "hash",
                "type": "AlgorithmIdentifier"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "RsaOtherPrimesInfo",
        "properties": [
            {
                "name": "r",
                "type": "string"
            },
            {
                "name": "d",
                "type": "string"
            },
            {
                "name": "t",
                "type": "string"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "JsonWebKey",
        "properties": [
            {
                "name": "kty",
                "type": "string"
            },
            {
                "name": "use?",
                "type": "string"
            },
            {
                "name": "key_ops?",
                "type": "string[]"
            },
            {
                "name": "alg?",
                "type": "string"
            },
            {
                "name": "kid?",
                "type": "string"
            },
            {
                "name": "x5u?",
                "type": "string"
            },
            {
                "name": "x5c?",
                "type": "string"
            },
            {
                "name": "x5t?",
                "type": "string"
            },
            {
                "name": "ext?",
                "type": "boolean"
            },
            {
                "name": "crv?",
                "type": "string"
            },
            {
                "name": "x?",
                "type": "string"
            },
            {
                "name": "y?",
                "type": "string"
            },
            {
                "name": "d?",
                "type": "string"
            },
            {
                "name": "n?",
                "type": "string"
            },
            {
                "name": "e?",
                "type": "string"
            },
            {
                "name": "p?",
                "type": "string"
            },
            {
                "name": "q?",
                "type": "string"
            },
            {
                "name": "dp?",
                "type": "string"
            },
            {
                "name": "dq?",
                "type": "string"
            },
            {
                "name": "qi?",
                "type": "string"
            },
            {
                "name": "oth?",
                "type": "RsaOtherPrimesInfo[]"
            },
            {
                "name": "k?",
                "type": "string"
            }
        ]
    },
    {
        "kind": "property",
        "name": "msCaching?",
        "interface": "XMLHttpRequest",
        "type": "string"
    },
    {
        "kind": "typedef",
        "name": "MouseWheelEvent",
        "flavor": "Web",
        "type": "WheelEvent"
    },
    {
        "kind": "method",
        "interface": "Element",
        "name": "insertAdjacentElement",
        "signatures": ["insertAdjacentElement(position: string, insertedElement: Element): Element | null"]
    },
    {
        "kind": "method",
        "interface": "Element",
        "name": "insertAdjacentHTML",
        "signatures": ["insertAdjacentHTML(where: string, html: string): void"]
    },
    {
        "kind": "method",
        "interface": "Element",
        "name": "insertAdjacentText",
        "signatures": ["insertAdjacentText(where: string, text: string): void"]
    },
    {
        "kind": "property",
        "name": "secureConnectionStart",
        "interface": "PerformanceTiming",
        "readonly": true,
        "type": "number"
    },
    {
        "kind": "property",
        "interface": "HTMLLinkElement",
        "name": "integrity",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "HTMLScriptElement",
        "name": "integrity",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "KeyboardEvent",
        "readonly": true,
        "name": "code",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "KeyboardEventInit",
        "name": "code?",
        "type": "string"
    },
    {
        "kind": "interface",
        "name": "ParentNode",
        "flavor": "DOM",
        "properties": [
            {
                "name": "children",
                "readonly": true,
                "type": "HTMLCollection"
            },
            {
                "name": "firstElementChild",
                "readonly": true,
                "type": "Element | null"
            },
            {
                "name": "lastElementChild",
                "readonly": true,
                "type": "Element | null"
            },
            {
                "name": "childElementCount",
                "readonly": true,
                "type": "number"
            }
        ]
    },
    {
        "kind": "extends",
        "baseInterface": "ParentNode",
        "interface": "Element"
    },
    {
        "kind": "extends",
        "baseInterface": "ParentNode",
        "interface": "Document"
    },
    {
        "kind": "extends",
        "baseInterface": "ParentNode",
        "interface": "DocumentFragment"
    },
    {
        "kind": "typedef",
        "name": "ScrollRestoration",
        "flavor": "DOM",
        "type": "\"auto\" | \"manual\""
    },
    {
        "kind": "property",
        "interface": "History",
        "name": "scrollRestoration",
        "type": "ScrollRestoration"
    },
    {
        "kind": "property",
        "interface": "XMLHttpRequest",
        "readonly": true,
        "name": "responseURL",
        "type": "string"
    },
    {
        "kind": "method",
        "interface": "CanvasPattern",
        "name": "setTransform",
        "signatures": ["setTransform(matrix: SVGMatrix): void"]
    },
    {
        "kind": "interface",
        "name": "DocumentOrShadowRoot",
        "flavor": "DOM",
        "methods": [
            {
                "name": "getSelection",
                "signatures": ["getSelection(): Selection | null"]
            },
            {
                "name": "elementFromPoint",
                "signatures": ["elementFromPoint(x: number, y: number): Element | null"]
            },
            {
                "name": "elementsFromPoint",
                "signatures": ["elementsFromPoint(x: number, y: number): Element[]"]
            }
        ],
        "properties": [
            {
                "name": "activeElement",
                "type": "Element | null",
                "readonly": true
            },
            {
                "name": "stylesheets",
                "type": "StyleSheetList",
                "readonly": true
            }
        ]
    },
    {
        "kind": "interface",
        "name": "ShadowRoot",
        "extends": "DocumentOrShadowRoot, DocumentFragment",
        "flavor": "DOM",
        "properties": [
            {
                "name": "host",
                "type": "Element",
                "readonly": true
            },
            {
                "name": "innerHTML",
                "type": "string"
            }
        ]
    },
    {
        "kind": "method",
        "interface": "Element",
        "name": "attachShadow",
        "signatures": ["attachShadow(shadowRootInitDict: ShadowRootInit): ShadowRoot"]
    },
    {
        "kind": "property",
        "interface": "Element",
        "name": "assignedSlot",
        "type": "HTMLSlotElement | null",
        "readonly": true
    },
    {
        "kind": "property",
        "interface": "Element",
        "name": "slot",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "Element",
        "name": "shadowRoot",
        "type": "ShadowRoot | null",
        "readonly": true
    },
    {
        "kind": "interface",
        "name": "ShadowRootInit",
        "flavor": "DOM",
        "properties": [
            {
                "name": "mode",
                "type": "'open'|'closed'"
            },
            {
                "name": "delegatesFocus?",
                "type": "boolean"
            }
        ]
    },
    {
        "kind": "property",
        "interface": "Text",
        "name": "assignedSlot",
        "type": "HTMLSlotElement | null",
        "readonly": true
    },
    {
        "kind": "interface",
        "name": "HTMLSlotElement",
        "extends": "HTMLElement",
        "flavor": "DOM",
        "properties": [
            {
                "name": "name",
                "type": "string"
            }
        ],
        "methods": [
            {
                "name": "assignedNodes",
                "signatures": ["assignedNodes(options?: AssignedNodesOptions): Node[]"]
            }
        ]
    },
    {
        "kind": "interface",
        "name": "AssignedNodesOptions",
        "flavor": "DOM",
        "properties": [
            {
                "name": "flatten?",
                "type": "boolean"
            }
        ]
    },
    {
        "kind": "property",
        "interface": "EventInit",
        "name": "scoped?",
        "type": "boolean"
    },
    {
        "kind": "property",
        "interface": "Event",
        "name": "scoped",
        "type": "boolean",
        "readonly": true
    },
    {
        "kind": "method",
        "interface": "Event",
        "name": "deepPath",
        "signatures": ["deepPath(): EventTarget[]"]
    },
    {
        "kind": "interface",
        "name": "ElementDefinitionOptions",
        "flavor": "DOM",
        "properties": [{
            "name": "extends",
            "type": "string"
        }]
    },
    {
        "kind": "interface",
        "name": "CustomElementRegistry",
        "flavor": "DOM",
        "methods": [{
           "name": "define",
           "signatures": ["define(name: string, constructor: Function, options?: ElementDefinitionOptions): void"]
        }, {
            "name": "get",
            "signatures": ["get(name: string): any"]
        }, {
            "name": "whenDefined",
            "signatures": ["whenDefined(name: string): PromiseLike<void>"]
        }]
    },
    {
        "kind": "property",
        "interface": "Window",
        "name": "customElements",
        "type": "CustomElementRegistry"
    }
]
