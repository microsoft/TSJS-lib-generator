[
    {
        "kind": "interface",
        "name": "StorageEventInit",
        "flavor":  "Web",
        "extends": "EventInit",
        "properties": [
            {
                "name": "key?",
                "type": "string"
            },
            {
                "name": "oldValue?",
                "type": "string"
            },
            {
                "name": "newValue?",
                "type": "string"
            },
            {
                "name": "url",
                "type": "string"
            },
            {
                "name": "storageArea?",
                "type": "Storage"
            }
        ]
    },
    {
        "kind": "property",
        "interface": "IDBObjectStoreParameters",
        "name": "autoIncrement?",
        "type": "boolean"
    },
    {
        "kind": "property",
        "interface": "IDBIndexParameters",
        "name": "multiEntry?",
        "type": "boolean"
    },
    {
        "kind": "property",
        "interface": "IDBIndex",
        "name": "multiEntry",
        "type": "boolean"
    },
    {
        "kind": "property",
        "interface": "Window",
        "exposeGlobally": false,
        "name": "URL",
        "type": "typeof URL"
    },
    {
        "kind": "property",
        "interface": "Element",
        "name": "innerHTML",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "SVGElement",
        "name": "className",
        "type": "any"
    },
    {
        "kind": "interface",
        "name": "NodeListOf<TNode extends Node>",
        "flavor": "Web",
        "extends": "NodeList",
        "properties": [
            {
                "name": "length",
                "type": "number"
            }
        ],
        "methods": [
            {
                "name": "item",
                "signatures": ["item(index: number): TNode"]
            }
        ],
        "indexer": [
            {
                "signatures": ["[index: number]: TNode"]
            }
        ]
    },
    {
        "kind": "interface",
        "name": "BlobPropertyBag",
        "properties": [
            {
                "name": "type?",
                "type": "string"
            },
            {
                "name": "endings?",
                "type": "string"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "FilePropertyBag",
        "properties": [
            {
                "name": "type?",
                "type": "string"
            },
            {
                "name": "lastModified?",
                "type": "number"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "EventListenerObject",
        "methods": [
            {
                "name": "handleEvent",
                "signatures": ["handleEvent(evt: Event): void"]
            }
        ]
    },
    {
        "kind": "interface",
        "name": "MessageEventInit",
        "extends": "EventInit",
        "properties": [
            {
                "name": "data?",
                "type": "any"
            },
            {
                "name": "origin?",
                "type": "string"
            },
            {
                "name": "lastEventId?",
                "type": "string"
            },
            {
                "name": "channel?",
                "type": "string"
            },
            {
                "name": "source?",
                "type": "any"
            },
            {
                "name": "ports?",
                "type": "MessagePort[]"
            }
        ]
    },
    {
        "kind": "interface",
        "name": "ProgressEventInit",
        "extends": "EventInit",
        "properties": [
            {
                "name": "lengthComputable?",
                "type": "boolean"
            },
            {
                "name": "loaded?",
                "type": "number"
            },
            {
                "name": "total?",
                "type": "number"
            }
        ]
    },
    {
        "kind": "method",
        "interface": "Element",
        "signatures": ["getElementsByClassName(classNames: string): NodeListOf<Element>"]
    },
    {
        "kind": "method",
        "interface": "Element",
        "signatures": ["matches(selector: string): boolean"]
    },
    {
        "kind": "indexer",
        "interface": "HTMLCollection",
        "signatures": ["[index: number]: Element"]
    },
    {
        "kind": "signatureoverload",
        "name": "createElementNS",
        "interface": "Document",
        "signatures": [
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"a\"): SVGAElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"circle\"): SVGCircleElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"clipPath\"): SVGClipPathElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"componentTransferFunction\"): SVGComponentTransferFunctionElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"defs\"): SVGDefsElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"desc\"): SVGDescElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"ellipse\"): SVGEllipseElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feBlend\"): SVGFEBlendElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feColorMatrix\"): SVGFEColorMatrixElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feComponentTransfer\"): SVGFEComponentTransferElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feComposite\"): SVGFECompositeElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feConvolveMatrix\"): SVGFEConvolveMatrixElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feDiffuseLighting\"): SVGFEDiffuseLightingElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feDisplacementMap\"): SVGFEDisplacementMapElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feDistantLight\"): SVGFEDistantLightElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feFlood\"): SVGFEFloodElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feFuncA\"): SVGFEFuncAElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feFuncB\"): SVGFEFuncBElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feFuncG\"): SVGFEFuncGElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feFuncR\"): SVGFEFuncRElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feGaussianBlur\"): SVGFEGaussianBlurElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feImage\"): SVGFEImageElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feMerge\"): SVGFEMergeElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feMergeNode\"): SVGFEMergeNodeElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feMorphology\"): SVGFEMorphologyElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feOffset\"): SVGFEOffsetElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"fePointLight\"): SVGFEPointLightElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feSpecularLighting\"): SVGFESpecularLightingElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feSpotLight\"): SVGFESpotLightElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feTile\"): SVGFETileElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"feTurbulence\"): SVGFETurbulenceElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"filter\"): SVGFilterElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"foreignObject\"): SVGForeignObjectElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"g\"): SVGGElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"image\"): SVGImageElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"gradient\"): SVGGradientElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"line\"): SVGLineElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"linearGradient\"): SVGLinearGradientElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"marker\"): SVGMarkerElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"mask\"): SVGMaskElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"path\"): SVGPathElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"metadata\"): SVGMetadataElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"pattern\"): SVGPatternElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"polygon\"): SVGPolygonElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"polyline\"): SVGPolylineElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"radialGradient\"): SVGRadialGradientElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"rect\"): SVGRectElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"svg\"): SVGSVGElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"script\"): SVGScriptElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"stop\"): SVGStopElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"style\"): SVGStyleElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"switch\"): SVGSwitchElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"symbol\"): SVGSymbolElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"tspan\"): SVGTSpanElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"textContent\"): SVGTextContentElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"text\"): SVGTextElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"textPath\"): SVGTextPathElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"textPositioning\"): SVGTextPositioningElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"title\"): SVGTitleElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"use\"): SVGUseElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: \"view\"): SVGViewElement",
            "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: string): SVGElement"
        ]
    },
    {
        "kind": "method",
        "interface": "Node",
        "signatures":["contains(node: Node): boolean"]
    },
    {
        "kind": "method",
        "interface": "Navigator",
        "signatures": [
            "vibrate(pattern: number | number[]): boolean"
        ]
    },
    {
        "kind": "property",
        "interface": "HTMLLinkElement",
        "name": "import?",
        "type": "Document"
    },
    {
        "kind": "property",
        "interface": "AudioContext",
        "name": "state",
        "type": "string"
    },
    {
        "kind": "method",
        "interface": "HTMLCanvasElement",
        "name": "toBlob",
        "signatures": ["toBlob(): Blob"]
    },
    {
        "kind": "property",
        "interface": "StorageEvent",
        "name": "key?",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "StorageEvent",
        "name": "oldValue?",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "StorageEvent",
        "name": "newValue?",
        "type": "string"
    },
    {
        "kind": "property",
        "interface": "StorageEvent",
        "name": "storageArea?",
        "type": "Storage"
    },
    {
        "kind": "property",
        "interface": "IDBObjectStore",
        "name": "autoIncrement",
        "type": "boolean"
    },
    {
        "kind": "interface",
        "name": "HTMLPictureElement",
        "flavor":  "Web",
        "extends": "HTMLElement",
        "constructorSignatures": [
            "new(): HTMLPictureElement"
        ],
        "properties": []
    },
    {
        "kind": "method",
        "interface": "Document",
        "name": "createElement",
        "signatures": ["createElement(tagName: \"picture\"): HTMLPictureElement"]
    },
    {
        "kind": "method",
        "interface": "Document",
        "name": "getElementsByTagName",
        "signatures": ["getElementsByTagName(tagname: \"picture\"): NodeListOf<HTMLPictureElement>"]
    },
    {
        "kind": "method",
        "interface": "Element",
        "name": "getElementsByTagName",
        "signatures": ["getElementsByTagName(tagname: \"picture\"): NodeListOf<HTMLPictureElement>"]
    },
    {
        "kind": "interface",
        "flavor": "Web",
        "name": "ClipboardEventInit",
        "extends": "EventInit",
        "properties": [
            {
                "name": "data?",
                "type": "string"
            },
            {
                "name": "dataType?",
                "type": "string"
            }
        ]
    },
    {
        "kind": "typedef",
        "name": "IDBValidKey",
        "type": "number | string | Date | IDBArrayKey"
    },
    {
        "kind": "interface",
        "name": "IDBArrayKey",
        "extends": "Array<IDBValidKey>"
    },
    {
        "kind": "property",
        "interface": "HTMLInputElement",
        "name": "minLength",
        "type": "number"
    },
    {
        "kind": "property",
        "interface": "HTMLTextAreaElement",
        "name": "minLength",
        "type": "number"
    },
    {
        "kind": "interface",
        "name": "HTMLFileInputElement",
        "flavor":  "Web",
        "extends": "HTMLInputElement",
        "constructorSignatures": [
            "new(): HTMLFileInputElement"
        ],
        "properties": [
            {
                "name": "files",
                "type": "FileList"
            }
        ]
    }
]
