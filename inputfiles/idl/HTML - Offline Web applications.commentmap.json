{
    "applicationcache": "Returns the ApplicationCache object that applies to the active document of that Window.",
    "appcache-status": "Returns the current status of the application cache, as given by the constants defined below.",
    "appcache-update": "Invokes the application cache download process.\n\nThrows an \"InvalidStateError\" DOMException if there is no application cache to update.\n\nCalling this method is not usually necessary, as user agents will generally take care of updating application caches automatically.\n\nThe method can be useful in situations such as long-lived applications. For example, a Web mail application might stay open in a browser tab for weeks at a time. Such an application could want to test for updates each day.",
    "appcache-abort": "Cancels the application cache download process.\n\nThis method is intended to be used by Web application showing their own caching progress UI, in case the user wants to stop the update (e.g. because bandwidth is limited).",
    "appcache-swapcache": "Switches to the most recent application cache, if there is a newer one. If there isn't, throws an \"InvalidStateError\" DOMException.\n\nThis does not cause previously-loaded resources to be reloaded; for example, images do not suddenly get reloaded and style sheets and scripts do not get reparsed or reevaluated. The only change is that subsequent requests for cached resources will obtain the newer copies.\n\nThe updateready event will fire before this method can be called. Once it fires, the Web application can, at its leisure, call this method to switch the underlying cache to the one with the more recent updates. To make proper use of this, applications have to be able to bring the new features into play; for example, reloading scripts to enable new features.\n\nAn easier alternative to swapCache() is just to reload the entire page at a time suitable for the user, using location.reload().",
    "navigator": "Returns false if the user agent is definitely offline (disconnected from the network). Returns true if the user agent might be online.\n\nThe events online and offline are fired when the value of this attribute changes."
}
