{
    "document-open": "Causes the Document to be replaced in-place, as if it was a new Document object, but reusing the previous object, which is then returned.\n\nThe resulting Document has an HTML parser associated with it, which can be given data to parse using document.write().\n\nThe method has no effect if the Document is still being parsed.\n\nThrows an \"InvalidStateError\" DOMException if the Document is an XML document.\n\nThrows an \"InvalidStateError\" DOMException if the parser is currently executing a custom element constructor.",
    "document-close": "Closes the input stream that was opened by the document.open() method.\n\nThrows an \"InvalidStateError\" DOMException if the Document is an XML document.\n\nThrows an \"InvalidStateError\" DOMException if the parser is currently executing a custom element constructor.",
    "document-write": "In general, adds the given string(s) to the Document's input stream.\n\nThis method has very idiosyncratic behavior. In some cases, this method can affect the state of the HTML parser while the parser is running, resulting in a DOM that does not correspond to the source of the document (e.g. if the string written is the string \"<plaintext>\" or \"<!--\"). In other cases, the call can clear the current page first, as if document.open() had been called. In yet more cases, the method is simply ignored, or throws an exception. Users agents are explicitly allowed to avoid executing script elements inserted via this method. And to make matters even worse, the exact behavior of this method can in some cases be dependent on network latency, which can lead to failures that are very hard to debug. For all these reasons, use of this method is strongly discouraged.\n\nThrows an \"InvalidStateError\" DOMException when invoked on XML documents.\n\nThrows an \"InvalidStateError\" DOMException if the parser is currently executing a custom element constructor.",
    "document-writeln": "Adds the given string(s) to the Document's input stream, followed by a newline character. If necessary, calls the open() method implicitly first.\n\nThrows an \"InvalidStateError\" DOMException when invoked on XML documents.\n\nThrows an \"InvalidStateError\" DOMException if the parser is currently executing a custom element constructor.",
    "domparser-constructor": "Constructs a new DOMParser object.",
    "domparser-parsefromstring": "Parses string using either the HTML or XML parser, according to type, and returns the resulting Document. type can be \"text/html\" (which will invoke the HTML parser), or any of \"text/xml\", \"application/xml\", \"application/xhtml+xml\", or \"image/svg+xml\" (which will invoke the XML parser).\n\nFor the XML parser, if string can be parsed, then the returned Document will contain elements describing the resulting error.\n\nNote that script elements are not evaluated during parsing, and the resulting document's encoding will always be UTF-8.\n\nValues other than the above for type will cause a TypeError exception to be thrown."
}
