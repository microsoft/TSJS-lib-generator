{
    "workerglobalscope-self": "Returns workerGlobal.",
    "workerglobalscope-location": "Returns workerGlobal's WorkerLocation object.",
    "workerglobalscope-navigator": "Returns workerGlobal's WorkerNavigator object.",
    "workerglobalscope-importscripts": "Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss).",
    "dedicatedworkerglobalscope-name": "Returns dedicatedWorkerGlobal's name, i.e. the value given to the Worker constructor. Primarily useful for debugging.",
    "dedicatedworkerglobalscope-postmessage": "Clones message and transmits it to the Worker object associated with dedicatedWorkerGlobal. transfer can be passed as a list of objects that are to be transferred rather than cloned.",
    "dedicatedworkerglobalscope-close": "Aborts dedicatedWorkerGlobal.",
    "sharedworkerglobalscope-name": "Returns sharedWorkerGlobal's name, i.e. the value given to the SharedWorker constructor. Multiple SharedWorker objects can correspond to the same shared worker (and SharedWorkerGlobalScope), by reusing the same name.",
    "sharedworkerglobalscope-close": "Aborts sharedWorkerGlobal.",
    "worker": "Returns a new Worker object. scriptURL will be fetched and executed in the background, creating a new global environment for which worker represents the communication channel. options can be used to define the name of that global environment via the name option, primarily for debugging purposes. It can also ensure this new global environment supports JavaScript modules (specify type: \"module\"), and if that is specified, can also be used to specify how scriptURL is fetched through the credentials option.",
    "worker-terminate": "Aborts worker's associated global environment.",
    "worker-postmessage": "Clones message and transmits it to worker's global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned.",
    "sharedworker": "Returns a new SharedWorker object. scriptURL will be fetched and executed in the background, creating a new global environment for which sharedWorker represents the communication channel. name can be used to define the name of that global environment.",
    "sharedworker-port": "Returns sharedWorker's MessagePort object which can be used to communicate with the global environment.",
    "navigator": "Returns the number of logical processors potentially available to the user agent."
}
