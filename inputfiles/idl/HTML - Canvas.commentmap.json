{
    "canvas-getcontext": "Returns an object that exposes an API for drawing on the canvas. contextId specifies the desired API: \"2d\", \"bitmaprenderer\", \"webgl\", or \"webgl2\". options is handled by that API.\n\nThis specification defines the \"2d\" and \"bitmaprenderer\" contexts below. The WebGL specifications define the \"webgl\" and \"webgl2\" contexts. [WEBGL]\n\nReturns null if contextId is not supported, or if the canvas has already been initialized with another context type (e.g., trying to get a \"2d\" context after getting a \"webgl\" context).",
    "canvas-todataurl": "Returns a data: URL for the image in the canvas.\n\nThe first argument, if provided, controls the type of the image to be returned (e.g. PNG or JPEG). The default is \"image/png\"; that type is also used if the given type isn't supported. The second argument applies if the type is an image format that supports variable quality (such as \"image/jpeg\"), and is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.\n\nWhen trying to use types other than \"image/png\", authors can check if the image was really returned in the requested format by checking to see if the returned string starts with one of the exact strings \"data:image/png,\" or \"data:image/png;\". If it does, the image is PNG, and thus the requested type was not supported. (The one exception to this is if the canvas has either no height or no width, in which case the result might simply be \"data:,\".)",
    "canvas-toblob": "Creates a Blob object representing a file containing the image in the canvas, and invokes a callback with a handle to that object.\n\nThe second argument, if provided, controls the type of the image to be returned (e.g. PNG or JPEG). The default is \"image/png\"; that type is also used if the given type isn't supported. The third argument applies if the type is an image format that supports variable quality (such as \"image/jpeg\"), and is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.",
    "canvas-transfercontroltooffscreen": "Returns a newly created OffscreenCanvas object that uses the canvas element as a placeholder. Once the canvas element has become a placeholder for an OffscreenCanvas object, its intrinsic size can no longer be changed, and it cannot have a rendering context. The content of the placeholder canvas is updated by calling the commit() method of the OffscreenCanvas object's rendering context.",
    "canvasrenderingcontext2d-2d": "Returns the canvas element.",
    "context-2d": "Returns an object whose:\n\nalpha member is true if the context has an alpha channel, or false if it was forced to be opaque.\ndesynchronized member is true if the context can be desynchronized.",
    "canvasstate-2d": "Pushes the current state onto the stack.",
    "canvastextdrawingstyles-2d": "Returns the current font settings.\n\nCan be set, to change the font. The syntax is the same as for the CSS 'font' property; values that cannot be parsed as CSS font values are ignored.\n\nRelative keywords and lengths are computed relative to the font of the canvas element.",
    "canvaspath-2d": "Adds points to the subpath such that the arc described by the circumference of the circle described by the arguments, starting at the given start angle and ending at the given end angle, going in the given direction (defaulting to clockwise), is added to the path, connected to the previous point by a straight line.\n\nThrows an \"IndexSizeError\" DOMException if the given radius is negative.",
    "path2d": "Creates a new empty Path2D object.",
    "path2d-addpath": "Adds to the path the path given by the argument.",
    "canvastransform-2d": "Changes the current transformation matrix to apply a scaling transformation with the given characteristics.",
    "canvasgradient-addcolorstop": "Adds a color stop with the given color to the gradient at the given offset. 0.0 is the offset at one end of the gradient, 1.0 is the offset at the other end.\n\nThrows an \"IndexSizeError\" DOMException if the offset is out of range. Throws a \"SyntaxError\" DOMException if the color cannot be parsed.",
    "canvaspattern-settransform": "Sets the transformation matrix that will be used when rendering the pattern during a fill or stroke painting operation.",
    "textmetrics-width": "Returns the measurement described below.",
    "textmetrics-actualboundingboxleft": "Returns the measurement described below.",
    "textmetrics-actualboundingboxright": "Returns the measurement described below.",
    "textmetrics-fontboundingboxascent": "Returns the measurement described below.",
    "textmetrics-fontboundingboxdescent": "Returns the measurement described below.",
    "textmetrics-actualboundingboxascent": "Returns the measurement described below.",
    "textmetrics-actualboundingboxdescent": "Returns the measurement described below.",
    "textmetrics-emheightascent": "Returns the measurement described below.",
    "textmetrics-emheightdescent": "Returns the measurement described below.",
    "textmetrics-hangingbaseline": "Returns the measurement described below.",
    "textmetrics-alphabeticbaseline": "Returns the measurement described below.",
    "textmetrics-ideographicbaseline": "Returns the measurement described below.",
    "canvasdrawpath-2d": "Fills the subpaths of the current default path or the given path with the current fill style, obeying the given fill rule.",
    "imagedata": "Returns an ImageData object with the given dimensions. All the pixels in the returned object are transparent black.\n\nThrows an \"IndexSizeError\" DOMException if either of the width or height arguments are zero.",
    "imagedata-width": "Returns the actual dimensions of the data in the ImageData object, in pixels.",
    "imagedata-height": "Returns the actual dimensions of the data in the ImageData object, in pixels.",
    "imagedata-data": "Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.",
    "canvasfilters-2d": "Returns the current filter.\n\nCan be set, to change the filter. Values that cannot be parsed as a <filter-function-list> value are ignored.",
    "imagebitmaprenderingcontext-canvas": "Returns the canvas element that the context is bound to.",
    "imagebitmaprenderingcontext-transferfromimagebitmap": "Transfers the underlying bitmap data from imageBitmap to context, and the bitmap becomes the contents of the canvas element to which context is bound.",
    "offscreencanvas": "Returns a new OffscreenCanvas object that is not linked to a placeholder canvas element, and whose bitmap's size is determined by the width and height arguments.",
    "offscreencanvas-getcontext": "Returns an object that exposes an API for drawing on the OffscreenCanvas object. contextId specifies the desired API: \"2d\", \"bitmaprenderer\", \"webgl\", or \"webgl2\". options is handled by that API.\n\nThis specification defines the \"2d\" context below, which is similar but distinct from the \"2d\" context that is created from a canvas element. The WebGL specifications define the \"webgl\" and \"webgl2\" contexts. [WEBGL]\n\nReturns null if the canvas has already been initialized with another context type (e.g., trying to get a \"2d\" context after getting a \"webgl\" context).",
    "offscreencanvas-width": "These attributes return the dimensions of the OffscreenCanvas object's bitmap.\n\nThey can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).",
    "offscreencanvas-height": "These attributes return the dimensions of the OffscreenCanvas object's bitmap.\n\nThey can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).",
    "offscreencanvas-converttoblob": "Returns a promise that will fulfill with a new Blob object representing a file containing the image in the OffscreenCanvas object.\n\nThe argument, if provided, is a dictionary that controls the encoding options of the image file to be created. The type field specifies the file format and has a default value of \"image/png\"; that type is also used if the requested type isn't supported. If the image format supports variable quality (such as \"image/jpeg\"), then the quality field is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.",
    "offscreencanvas-transfertoimagebitmap": "Returns a newly created ImageBitmap object with the image in the OffscreenCanvas object. The image in the OffscreenCanvas object is replaced with a new blank image."
}
