{
    "htmlselectelement-type": "Returns \"select-multiple\" if the element has a multiple attribute, and \"select-one\" otherwise.",
    "htmlselectelement-options": "Returns an HTMLOptionsCollection of the list of options.",
    "htmlselectelement-length": "Returns the number of elements in the list of options.\n\nWhen set to a smaller number, truncates the number of option elements in the select.\n\nWhen set to a greater number, adds new blank option elements to the select.",
    "htmlselectelement-item": "Returns the item with index index from the list of options. The items are sorted in tree order.",
    "select-nameditem": "Returns the first item with ID or name name from the list of options.\n\nReturns null if no element with that ID could be found.",
    "htmlselectelement-add": "Inserts element before the node given by before.\n\nThe before argument can be a number, in which case element is inserted before the item with that number, or an element from the list of options, in which case element is inserted before that element.\n\nIf before is omitted, null, or a number out of range, then element will be added at the end of the list.\n\nThis method will throw a \"HierarchyRequestError\" DOMException if element is an ancestor of the element into which it is to be inserted.",
    "select-selectedoptions": "Returns an HTMLCollection of the list of options that are selected.",
    "select-selectedindex": "Returns the index of the first selected item, if any, or −1 if there is no selected item.\n\nCan be set, to change the selection.",
    "htmlselectelement-value": "Returns the value of the first selected item, if any, or the empty string if there is no selected item.\n\nCan be set, to change the selection.",
    "htmldatalistelement-options": "Returns an HTMLCollection of the option elements of the datalist element.",
    "htmloptionelement-selected": "Returns true if the element is selected, and false otherwise.\n\nCan be set, to override the current state of the element.",
    "htmloptionelement-index": "Returns the index of the element in its select element's options list.",
    "htmloptionelement-form": "Returns the element's form element, if any, or null otherwise.",
    "htmloptionelement-text": "Same as textContent, except that spaces are collapsed and script elements are skipped.",
    "option": "Returns a new option element.\n\nThe text argument sets the contents of the element.\n\nThe value argument sets the value attribute.\n\nThe defaultSelected argument sets the selected attribute.\n\nThe selected argument sets whether or not the element is selected. If it is omitted, even if the defaultSelected argument is true, the element is not selected.",
    "htmltextareaelement-type": "Returns the string \"textarea\".",
    "htmltextareaelement-value": "Returns the current value of the element.\n\nCan be set, to change the value.",
    "htmloutputelement-value": "Returns the element's current value.\n\nCan be set, to change the value.",
    "output-defaultvalue": "Returns the element's current default value.\n\nCan be set, to change the default value.",
    "htmloutputelement-type": "Returns the string \"output\".",
    "progress-position": "For a determinate progress bar (one with known current and maximum values), returns the result of dividing the current value by the maximum value.\n\nFor an indeterminate progress bar, returns −1.",
    "htmlfieldsetelement-type": "Returns the string \"fieldset\".",
    "htmlfieldsetelement-elements": "Returns an HTMLCollection of the form controls in the element.",
    "htmllegendelement-form": "Returns the element's form element, if any, or null otherwise."
}
