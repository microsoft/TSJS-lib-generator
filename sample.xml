<webidl-xml name="Internet Explorer Platform" original-file="browser.webidl" xmlns="http://schemas.microsoft.com/ie/webidl-xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://schemas.microsoft.com/ie/webidl-xml webidl-xml-schema.xsd">
  <callback-functions>
    <callback-function callback="1" name="ErrorEventHandler" specs="HTML5" type="void">
      <param name="event" type="(Event or DOMString)"/>
      <param name="source" optional="1" type="DOMString"/>
      <param name="fileno" optional="1" type="unsigned long"/>
      <param name="columnNumber" optional="1" type="unsigned long"/>
    </callback-function>
    <callback-function callback="1" name="PositionCallback" type="void">
      <param name="position" type="Position"/>
    </callback-function>
    <callback-function callback="1" name="PositionErrorCallback" type="void">
      <param name="error" type="PositionError"/>
    </callback-function>
    <callback-function callback="1" name="MediaQueryListListener" type="void">
      <param name="mql" type="MediaQueryList"/>
    </callback-function>
    <callback-function callback="1" name="MSLaunchUriCallback" type="void"/>
    <callback-function callback="1" name="FrameRequestCallback" type="void">
      <param name="time" type="DOMHighResTimeStamp"/>
    </callback-function>
    <callback-function callback="1" name="MSUnsafeFunctionCallback" tags="MSAppOnly" type="any"/>
    <callback-function callback="1" name="MSExecAtPriorityFunctionCallback" tags="MSAppOnly" type="any">
      <param name="args" type="any" variadic="1"/>
    </callback-function>
    <callback-function callback="1" name="MutationCallback" type="void">
      <param name="mutations" type="sequence&lt;MutationRecord&gt;"/>
      <param name="observer" type="MutationObserver"/>
    </callback-function>
    <callback-function callback="1" name="DecodeSuccessCallback" type="void">
      <param name="decodedData" type="AudioBuffer"/>
    </callback-function>
    <callback-function callback="1" name="DecodeErrorCallback" type="void"/>
    <callback-function callback="1" name="FunctionStringCallback" type="void">
      <param name="data" type="DOMString"/>
    </callback-function>
  </callback-functions>
  <callback-interfaces>
    <interface extends="Object" name="EventListener" specs="DOM3E DOM4">
      <methods>
        <method name="handleEvent" specs="DOM3E DOM4" type="void">
          <param name="evt" type="Event"/>
        </method>
      </methods>
    </interface>
  </callback-interfaces>
  <dictionaries>
    <dictionary extends="Object" name="Algorithm">
      <members>
        <member name="name" type="DOMString"/>
      </members>
    </dictionary>
    <dictionary extends="EventInit" name="AriaRequestEventInit">
      <members>
        <member default="&quot;&quot;" name="attributeName" type="DOMString"/>
        <member default="null" name="attributeValue" nullable="1" type="DOMString"/>
      </members>
    </dictionary>
    <dictionary extends="EventInit" name="ClipboardEventInit">
      <members>
        <member default="&quot;&quot;" name="data" type="DOMString"/>
        <member default="&quot;&quot;" name="dataType" type="DOMString"/>
      </members>
    </dictionary>
    <dictionary extends="EventInit" name="CommandEventInit">
      <members>
        <member default="&quot;&quot;" name="commandName" type="DOMString"/>
        <member default="null" name="detail" nullable="1" type="DOMString"/>
      </members>
    </dictionary>
    <dictionary extends="UIEventInit" name="CompositionEventInit">
      <members>
        <member default="&quot;&quot;" name="data" type="DOMString"/>
      </members>
    </dictionary>
    <dictionary extends="ExceptionInformation" name="ConfirmSiteSpecificExceptionsInformation">
      <members>
        <member name="arrayOfDomainStrings" type="sequence&lt;DOMString&gt;"/>
      </members>
    </dictionary>
    <dictionary extends="EventInit" name="CustomEventInit">
      <members>
        <member default="null" name="detail" type="any"/>
      </members>
    </dictionary>
    <dictionary extends="Object" name="DeviceAccelerationDict">
      <members>
        <member default="null" name="x" nullable="1" type="double"/>
        <member default="null" name="y" nullable="1" type="double"/>
        <member default="null" name="z" nullable="1" type="double"/>
      </members>
    </dictionary>
    <dictionary extends="Object" name="DeviceRotationRateDict">
      <members>
        <member default="null" name="alpha" nullable="1" type="double"/>
        <member default="null" name="beta" nullable="1" type="double"/>
        <member default="null" name="gamma" nullable="1" type="double"/>
      </members>
    </dictionary>
    <dictionary extends="Object" name="EventInit">
      <members>
        <member default="false" name="bubbles" type="boolean"/>
        <member default="false" name="cancelable" type="boolean"/>
      </members>
    </dictionary>
    <dictionary extends="Object" name="ExceptionInformation">
      <members>
        <member name="domain" nullable="1" type="DOMString"/>
      </members>
    </dictionary>
    <dictionary extends="UIEventInit" name="FocusEventInit">
      <members>
        <member default="null" name="relatedTarget" nullable="1" type="EventTarget"/>
      </members>
    </dictionary>
    <dictionary extends="Object" name="KeyAlgorithm">
      <members>
        <member name="name" type="DOMString"/>
      </members>
    </dictionary>
    <dictionary extends="SharedKeyboardAndMouseEventInit" name="KeyboardEventInit">
      <members>
        <member default="&quot;&quot;" name="key" type="DOMString"/>
        <member default="0" name="location" type="unsigned long"/>
        <member default="false" name="repeat" type="boolean"/>
      </members>
    </dictionary>
    <dictionary extends="SharedKeyboardAndMouseEventInit" name="MouseEventInit">
      <members>
        <member default="0" name="screenX" type="long"/>
        <member default="0" name="screenY" type="long"/>
        <member default="0" name="clientX" type="long"/>
        <member default="0" name="clientY" type="long"/>
        <member default="0" name="button" type="short"/>
        <member default="0" name="buttons" type="unsigned short"/>
        <member default="null" name="relatedTarget" nullable="1" type="EventTarget"/>
      </members>
    </dictionary>
    <dictionary extends="Object" name="MsZoomToOptions">
      <members>
        <member name="contentX" type="long"/>
        <member name="contentY" type="long"/>
        <member name="viewportX" nullable="1" type="DOMString"/>
        <member name="viewportY" nullable="1" type="DOMString"/>
        <member name="scaleFactor" type="float"/>
        <member name="animate" type="DOMString"/>
      </members>
    </dictionary>
    <dictionary extends="Object" name="MutationObserverInit">
      <members>
        <member default="false" name="childList" type="boolean"/>
        <member default="false" name="attributes" type="boolean"/>
        <member default="false" name="characterData" type="boolean"/>
        <member default="false" name="subtree" type="boolean"/>
        <member default="false" name="attributeOldValue" type="boolean"/>
        <member default="false" name="characterDataOldValue" type="boolean"/>
        <member name="attributeFilter" type="sequence&lt;DOMString&gt;"/>
      </members>
    </dictionary>
    <dictionary extends="Object" name="ObjectURLOptions">
      <members>
        <member name="oneTimeOnly" type="boolean"/>
      </members>
    </dictionary>
    <dictionary extends="MouseEventInit" name="PointerEventInit">
      <members>
        <member default="0" name="pointerId" type="long"/>
        <member default="0" name="width" type="long"/>
        <member default="0" name="height" type="long"/>
        <member default="0" name="pressure" type="float"/>
        <member default="0" name="tiltX" type="long"/>
        <member default="0" name="tiltY" type="long"/>
        <member default="&quot;&quot;" name="pointerType" type="DOMString"/>
        <member default="false" name="isPrimary" type="boolean"/>
      </members>
    </dictionary>
    <dictionary extends="Object" name="PositionOptions">
      <members>
        <member default="false" name="enableHighAccuracy" type="boolean"/>
        <member name="timeout" type="long"/>
        <member default="0" name="maximumAge" type="long"/>
      </members>
    </dictionary>
    <dictionary extends="UIEventInit" name="SharedKeyboardAndMouseEventInit">
      <members>
        <member default="false" name="ctrlKey" type="boolean"/>
        <member default="false" name="shiftKey" type="boolean"/>
        <member default="false" name="altKey" type="boolean"/>
        <member default="false" name="metaKey" type="boolean"/>
        <member default="false" name="keyModifierStateAltGraph" type="boolean"/>
        <member default="false" name="keyModifierStateCapsLock" type="boolean"/>
        <member default="false" name="keyModifierStateFn" type="boolean"/>
        <member default="false" name="keyModifierStateFnLock" type="boolean"/>
        <member default="false" name="keyModifierStateHyper" type="boolean"/>
        <member default="false" name="keyModifierStateNumLock" type="boolean"/>
        <member default="false" name="keyModifierStateOS" type="boolean"/>
        <member default="false" name="keyModifierStateScrollLock" type="boolean"/>
        <member default="false" name="keyModifierStateSuper" type="boolean"/>
        <member default="false" name="keyModifierStateSymbol" type="boolean"/>
        <member default="false" name="keyModifierStateSymbolLock" type="boolean"/>
      </members>
    </dictionary>
    <dictionary extends="ExceptionInformation" name="StoreExceptionsInformation">
      <members>
        <member name="siteName" nullable="1" type="DOMString"/>
        <member name="explanationString" nullable="1" type="DOMString"/>
        <member name="detailURI" nullable="1" type="DOMString"/>
      </members>
    </dictionary>
    <dictionary extends="StoreExceptionsInformation" name="StoreSiteSpecificExceptionsInformation">
      <members>
        <member name="arrayOfDomainStrings" type="sequence&lt;DOMString&gt;"/>
      </members>
    </dictionary>
    <dictionary extends="EventInit" name="UIEventInit">
      <members>
        <member default="null" name="view" nullable="1" type="Window"/>
        <member default="0" name="detail" type="long"/>
      </members>
    </dictionary>
    <dictionary extends="Object" name="WebGLContextAttributes">
      <members>
        <member default="true" name="alpha" type="boolean"/>
        <member default="true" name="depth" type="boolean"/>
        <member default="false" name="stencil" type="boolean"/>
        <member default="true" name="antialias" type="boolean"/>
        <member default="true" name="premultipliedAlpha" type="boolean"/>
        <member default="false" name="preserveDrawingBuffer" type="boolean"/>
      </members>
    </dictionary>
    <dictionary extends="EventInit" name="WebGLContextEventInit">
      <members>
        <member default="&quot;&quot;" name="statusMessage" type="DOMString"/>
      </members>
    </dictionary>
    <dictionary extends="MouseEventInit" name="WheelEventInit">
      <members>
        <member default="0.0" name="deltaX" type="double"/>
        <member default="0.0" name="deltaY" type="double"/>
        <member default="0.0" name="deltaZ" type="double"/>
        <member default="0" name="deltaMode" type="unsigned long"/>
      </members>
    </dictionary>
  </dictionaries>
  <enums>
    <enum name="AppendMode">
      <value>segments</value>
      <value>sequence</value>
    </enum>
    <enum name="BiquadFilterType">
      <value>lowpass</value>
      <value>highpass</value>
      <value>bandpass</value>
      <value>lowshelf</value>
      <value>highshelf</value>
      <value>peaking</value>
      <value>notch</value>
      <value>allpass</value>
    </enum>
    <enum name="ChannelCountMode">
      <value>max</value>
      <value>clamped-max</value>
      <value>explicit</value>
    </enum>
    <enum name="ChannelInterpretation">
      <value>speakers</value>
      <value>discrete</value>
    </enum>
    <enum name="DistanceModelType">
      <value>linear</value>
      <value>inverse</value>
      <value>exponential</value>
    </enum>
    <enum name="ExpandGranularity">
      <value>character</value>
      <value>word</value>
      <value>sentence</value>
      <value>textedit</value>
    </enum>
    <enum name="MSWebViewPermissionState">
      <value>unknown</value>
      <value>defer</value>
      <value>allow</value>
      <value>deny</value>
    </enum>
    <enum name="MSWebViewPermissionType">
      <value>geolocation</value>
      <value>unlimitedIndexedDBQuota</value>
    </enum>
    <enum name="OscillatorType">
      <value>sine</value>
      <value>square</value>
      <value>sawtooth</value>
      <value>triangle</value>
      <value>custom</value>
    </enum>
    <enum name="OverSampleType">
      <value>none</value>
      <value>2x</value>
      <value>4x</value>
    </enum>
    <enum name="PanningModelType">
      <value>equalpower</value>
    </enum>
  </enums>
  <interfaces>
    <interface extends="Object" name="ANGLE_instanced_arrays">
      <constants>
        <constant name="VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE" type="unsigned long" type-original="GLenum" value="0x88FE"/>
      </constants>
      <methods>
        <method name="drawArraysInstancedANGLE" type="void">
          <param name="mode" type="unsigned long" type-original="GLenum"/>
          <param name="first" type="long" type-original="GLint"/>
          <param name="count" type="long" type-original="GLsizei"/>
          <param name="primcount" type="long" type-original="GLsizei"/>
        </method>
        <method name="drawElementsInstancedANGLE" type="void">
          <param name="mode" type="unsigned long" type-original="GLenum"/>
          <param name="count" type="long" type-original="GLsizei"/>
          <param name="type" type="unsigned long" type-original="GLenum"/>
          <param name="offset" type="signed long long" type-original="GLintptr"/>
          <param name="primcount" type="long" type-original="GLsizei"/>
        </method>
        <method name="vertexAttribDivisorANGLE" type="void">
          <param name="index" type="unsigned long" type-original="GLuint"/>
          <param name="divisor" type="unsigned long" type-original="GLuint"/>
        </method>
      </methods>
    </interface>
    <interface extends="AudioNode" name="AnalyserNode">
      <methods>
        <method name="getByteFrequencyData" type="void">
          <param name="array" type="Uint8Array"/>
        </method>
        <method name="getByteTimeDomainData" type="void">
          <param name="array" type="Uint8Array"/>
        </method>
        <method name="getFloatFrequencyData" type="void">
          <param name="array" type="Float32Array"/>
        </method>
        <method name="getFloatTimeDomainData" type="void">
          <param name="array" type="Float32Array"/>
        </method>
      </methods>
      <properties>
        <property name="fftSize" type="unsigned long"/>
        <property name="frequencyBinCount" read-only="1" type="unsigned long"/>
        <property name="maxDecibels" type="double"/>
        <property name="minDecibels" type="double"/>
        <property name="smoothingTimeConstant" type="double"/>
      </properties>
    </interface>
    <interface extends="Event" name="AnimationEvent">
      <methods>
        <method name="initAnimationEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="animationNameArg" type="DOMString"/>
          <param name="elapsedTimeArg" type="float"/>
        </method>
      </methods>
      <properties>
        <property name="animationName" read-only="1" tags="Events" type="DOMString"/>
        <property name="elapsedTime" read-only="1" tags="Events" type="float"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="ApplicationCache">
      <constants>
        <constant name="CHECKING" type="unsigned short" value="2"/>
        <constant name="DOWNLOADING" type="unsigned short" value="3"/>
        <constant name="IDLE" type="unsigned short" value="1"/>
        <constant name="OBSOLETE" type="unsigned short" value="5"/>
        <constant name="UNCACHED" type="unsigned short" value="0"/>
        <constant name="UPDATEREADY" type="unsigned short" value="4"/>
      </constants>
      <events>
        <event dispatch="sync" follows="downloading" name="progress" precedes="updateready" skips-window="1" specs="HTML5" type="ProgressEvent"/>
        <event dispatch="sync" follows="downloading" name="obsolete" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="downloading" name="error" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="downloading" name="cached" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="progress" name="updateready" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="checking" name="downloading" precedes="noupdate progress obsolete cached" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="downloading" name="noupdate" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="checking" precedes="downloading" skips-window="1" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="abort" tags="Offline" type="void"/>
        <method name="swapCache" tags="Offline" type="void"/>
        <method name="update" tags="Offline" type="void"/>
      </methods>
      <properties>
        <property event-handler="cached" name="oncached" type="EventHandler"/>
        <property event-handler="checking" name="onchecking" type="EventHandler"/>
        <property event-handler="downloading" name="ondownloading" type="EventHandler"/>
        <property event-handler="error" name="onerror" type="EventHandler"/>
        <property event-handler="noupdate" name="onnoupdate" type="EventHandler"/>
        <property event-handler="obsolete" name="onobsolete" type="EventHandler"/>
        <property event-handler="progress" name="onprogress" type="EventHandler"/>
        <property event-handler="updateready" name="onupdateready" type="EventHandler"/>
        <property name="status" read-only="1" tags="Offline" type="unsigned short"/>
      </properties>
    </interface>
    <interface extends="Event" name="AriaRequestEvent">
      <constructor>
        <param name="type" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="AriaRequestEventInit"/>
      </constructor>
      <properties>
        <property name="attributeName" read-only="1" type="DOMString"/>
        <property name="attributeValue" nullable="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Node" name="Attr">
      <properties>
        <property name="expando" read-only="1" tags="TreeIdentity" type="boolean"/>
        <property name="name" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property name="ownerElement" read-only="1" tags="TreeNavigation" type="Element"/>
        <property name="specified" read-only="1" tags="TreeIdentity" type="boolean"/>
        <property name="value" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="AudioBuffer">
      <methods>
        <method name="getChannelData" type="Float32Array">
          <param name="channel" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="duration" read-only="1" type="double"/>
        <property name="length" read-only="1" type="long"/>
        <property name="numberOfChannels" read-only="1" type="long"/>
        <property name="sampleRate" read-only="1" type="float"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="AudioBufferSourceNode">
      <events>
        <event dispatch="sync" name="end" skips-window="1" specs="Audio" type="Event"/>
      </events>
      <methods>
        <method name="start" type="void">
          <param default="0" name="when" optional="1" type="double"/>
          <param default="0" name="offset" optional="1" type="double"/>
          <param name="duration" optional="1" type="double"/>
        </method>
        <method name="stop" type="void">
          <param default="0" name="when" optional="1" type="double"/>
        </method>
      </methods>
      <properties>
        <property name="buffer" nullable="1" type="AudioBuffer"/>
        <property name="loop" type="boolean"/>
        <property name="loopEnd" type="double"/>
        <property name="loopStart" type="double"/>
        <property event-handler="ended" name="onended" type="EventHandler"/>
        <property name="playbackRate" read-only="1" type="AudioParam"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="AudioContext">
      <constructor/>
      <methods>
        <method name="createAnalyser" type="AnalyserNode"/>
        <method name="createBiquadFilter" type="BiquadFilterNode"/>
        <method name="createBuffer" type="AudioBuffer">
          <param name="numberOfChannels" type="unsigned long"/>
          <param name="length" type="unsigned long"/>
          <param name="sampleRate" type="float"/>
        </method>
        <method name="createBufferSource" type="AudioBufferSourceNode"/>
        <method name="createChannelMerger" type="ChannelMergerNode">
          <param default="6" name="numberOfInputs" optional="1" type="unsigned long"/>
        </method>
        <method name="createChannelSplitter" type="ChannelSplitterNode">
          <param default="6" name="numberOfOutputs" optional="1" type="unsigned long"/>
        </method>
        <method name="createConvolver" type="ConvolverNode"/>
        <method name="createDelay" type="DelayNode">
          <param default="1.0" name="maxDelayTime" optional="1" type="double"/>
        </method>
        <method name="createDynamicsCompressor" type="DynamicsCompressorNode"/>
        <method name="createGain" type="GainNode"/>
        <method name="createMediaElementSource" type="MediaElementAudioSourceNode">
          <param name="mediaElement" type="HTMLMediaElement"/>
        </method>
        <method name="createOscillator" type="OscillatorNode"/>
        <method name="createPanner" type="PannerNode"/>
        <method name="createPeriodicWave" type="PeriodicWave">
          <param name="real" type="Float32Array"/>
          <param name="imag" type="Float32Array"/>
        </method>
        <method name="createScriptProcessor" type="ScriptProcessorNode">
          <param default="0" name="bufferSize" optional="1" type="unsigned long"/>
          <param default="2" name="numberOfInputChannels" optional="1" type="unsigned long"/>
          <param default="2" name="numberOfOutputChannels" optional="1" type="unsigned long"/>
        </method>
        <method name="createStereoPanner" type="StereoPannerNode"/>
        <method name="createWaveShaper" type="WaveShaperNode"/>
        <method name="decodeAudioData" type="void">
          <param name="audioData" type="ArrayBuffer"/>
          <param name="successCallback" type="DecodeSuccessCallback"/>
          <param name="errorCallback" optional="1" type="DecodeErrorCallback"/>
        </method>
      </methods>
      <properties>
        <property name="currentTime" read-only="1" type="double"/>
        <property name="destination" read-only="1" type="AudioDestinationNode"/>
        <property name="listener" read-only="1" type="AudioListener"/>
        <property name="sampleRate" read-only="1" type="float"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="AudioDestinationNode">
      <properties>
        <property name="maxChannelCount" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="AudioListener">
      <methods>
        <method name="setOrientation" type="void">
          <param name="x" type="double"/>
          <param name="y" type="double"/>
          <param name="z" type="double"/>
          <param name="xUp" type="double"/>
          <param name="yUp" type="double"/>
          <param name="zUp" type="double"/>
        </method>
        <method name="setPosition" type="void">
          <param name="x" type="double"/>
          <param name="y" type="double"/>
          <param name="z" type="double"/>
        </method>
        <method name="setVelocity" type="void">
          <param name="x" type="double"/>
          <param name="y" type="double"/>
          <param name="z" type="double"/>
        </method>
      </methods>
      <properties>
        <property name="dopplerFactor" type="double"/>
        <property name="speedOfSound" type="double"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="AudioNode">
      <methods>
        <method name="connect" type="void">
          <param name="destination" type="AudioNode"/>
          <param default="0" name="output" optional="1" type="unsigned long"/>
          <param default="0" name="input" optional="1" type="unsigned long"/>
        </method>
        <method name="disconnect" type="void">
          <param default="0" name="output" optional="1" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="channelCount" type="unsigned long"/>
        <property name="channelCountMode" type="ChannelCountMode"/>
        <property name="channelInterpretation" type="ChannelInterpretation"/>
        <property name="context" read-only="1" type="AudioContext"/>
        <property name="numberOfInputs" read-only="1" type="unsigned long"/>
        <property name="numberOfOutputs" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="AudioParam">
      <methods>
        <method name="cancelScheduledValues" type="void">
          <param name="startTime" type="double"/>
        </method>
        <method name="exponentialRampToValueAtTime" type="void">
          <param name="value" type="float"/>
          <param name="endTime" type="double"/>
        </method>
        <method name="linearRampToValueAtTime" type="void">
          <param name="value" type="float"/>
          <param name="endTime" type="double"/>
        </method>
        <method name="setTargetAtTime" type="void">
          <param name="target" type="float"/>
          <param name="startTime" type="double"/>
          <param name="timeConstant" type="double"/>
        </method>
        <method name="setValueAtTime" type="void">
          <param name="value" type="float"/>
          <param name="startTime" type="double"/>
        </method>
        <method name="setValueCurveAtTime" type="void">
          <param name="values" type="Float32Array"/>
          <param name="startTime" type="double"/>
          <param name="duration" type="double"/>
        </method>
      </methods>
      <properties>
        <property name="defaultValue" read-only="1" type="float"/>
        <property name="value" type="float"/>
      </properties>
    </interface>
    <interface extends="Event" name="AudioProcessingEvent">
      <properties>
        <property name="inputBuffer" read-only="1" type="AudioBuffer"/>
        <property name="outputBuffer" read-only="1" type="AudioBuffer"/>
        <property name="playbackTime" read-only="1" type="double"/>
      </properties>
    </interface>
    <interface extends="Object" name="AudioTrack">
      <properties>
        <property name="enabled" type="boolean"/>
        <property name="id" read-only="1" type="DOMString"/>
        <property name="kind" type="DOMString"/>
        <property name="label" read-only="1" type="DOMString"/>
        <property name="language" type="DOMString"/>
        <property name="sourceBuffer" read-only="1" specs="MSE" type="SourceBuffer"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="AudioTrackList">
      <events>
        <event dispatch="async" name="addtrack" skips-window="1" specs="HTML5" type="TrackEvent"/>
        <event dispatch="async" name="removetrack" skips-window="1" specs="HTML5" type="TrackEvent"/>
        <event dispatch="async" name="change" skips-window="1" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="getTrackById" nullable="1" type="AudioTrack">
          <param name="id" type="DOMString"/>
        </method>
        <method getter="1" name="item" type="AudioTrack">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" type="unsigned long"/>
        <property event-handler="addtrack" name="onaddtrack" type="EventHandler"/>
        <property event-handler="change" name="onchange" type="EventHandler"/>
        <property event-handler="removetrack" name="onremovetrack" type="EventHandler"/>
      </properties>
    </interface>
    <interface extends="Object" name="BarProp">
      <properties>
        <property name="visible" read-only="1" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Event" name="BeforeUnloadEvent">
      <properties>
        <property name="returnValue" nullable="1" tags="Events" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="BiquadFilterNode">
      <methods>
        <method name="getFrequencyResponse" type="void">
          <param name="frequencyHz" type="Float32Array"/>
          <param name="magResponse" type="Float32Array"/>
          <param name="phaseResponse" type="Float32Array"/>
        </method>
      </methods>
      <properties>
        <property name="Q" read-only="1" type="AudioParam"/>
        <property name="detune" read-only="1" type="AudioParam"/>
        <property name="frequency" read-only="1" type="AudioParam"/>
        <property name="gain" read-only="1" type="AudioParam"/>
        <property name="type" type="BiquadFilterType"/>
      </properties>
    </interface>
    <interface extends="Object" name="Blob">
      <constructor/>
      <methods>
        <method name="msClose" tags="FileAPI" type="void"/>
        <method name="msDetachStream" tags="FileAPI" type="any"/>
        <method name="slice" tags="FileAPI" type="Blob">
          <param default="0" name="start" optional="1" type="signed long long"/>
          <param default="0" name="end" optional="1" type="signed long long"/>
          <param name="contentType" optional="1" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="size" read-only="1" tags="FileAPI" type="unsigned long long"/>
        <property name="type" read-only="1" tags="FileAPI" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Text" name="CDATASection"/>
    <interface extends="Object" name="CSS" static="1">
      <methods>
        <method name="supports" static="1" type="boolean">
          <param name="property" type="DOMString"/>
          <param name="value" optional="1" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="CSSGroupingRule" name="CSSConditionRule">
      <properties>
        <property name="conditionText" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="CSSRule" name="CSSFontFaceRule">
      <properties>
        <property name="style" read-only="1" tags="CSSOM" type="CSSStyleDeclaration"/>
      </properties>
    </interface>
    <interface extends="CSSRule" name="CSSGroupingRule">
      <methods>
        <method name="deleteRule" tags="CSSOM" type="void">
          <param default="-1" name="index" optional="1" type="unsigned long"/>
        </method>
        <method name="insertRule" tags="CSSOM" type="unsigned long">
          <param name="rule" type="DOMString"/>
          <param default="-1" name="index" optional="1" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="cssRules" read-only="1" tags="CSSOM" type="CSSRuleList"/>
      </properties>
    </interface>
    <interface extends="CSSRule" name="CSSImportRule">
      <properties>
        <property name="href" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="media" put-forwards="mediaText" read-only="1" tags="CSSOM" type="MediaList"/>
        <property name="styleSheet" read-only="1" tags="CSSOM" type="CSSStyleSheet"/>
      </properties>
    </interface>
    <interface extends="CSSRule" name="CSSKeyframeRule">
      <properties>
        <property name="keyText" tags="CSSOM" type="DOMString"/>
        <property name="style" read-only="1" tags="CSSOM" type="CSSStyleDeclaration"/>
      </properties>
    </interface>
    <interface extends="CSSRule" name="CSSKeyframesRule">
      <methods>
        <method name="appendRule" tags="CSSOM" type="void">
          <param name="rule" type="DOMString"/>
        </method>
        <method name="deleteRule" tags="CSSOM" type="void">
          <param name="rule" type="DOMString"/>
        </method>
        <method name="findRule" tags="CSSOM" type="CSSKeyframeRule">
          <param name="rule" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="cssRules" read-only="1" tags="CSSOM" type="CSSRuleList"/>
        <property name="name" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="CSSConditionRule" name="CSSMediaRule">
      <properties>
        <property name="media" put-forwards="mediaText" read-only="1" tags="CSSOM" type="MediaList"/>
      </properties>
    </interface>
    <interface extends="CSSRule" name="CSSNamespaceRule">
      <properties>
        <property name="namespaceURI" read-only="1" tags="CSSOM" type="DOMString"/>
        <property name="prefix" read-only="1" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="CSSRule" name="CSSPageRule">
      <properties>
        <property name="pseudoClass" read-only="1" tags="CSSOM" type="DOMString"/>
        <property name="selector" read-only="1" tags="CSSOM" type="DOMString"/>
        <property name="selectorText" tags="CSSOM" type="DOMString"/>
        <property name="style" read-only="1" tags="CSSOM" type="CSSStyleDeclaration"/>
      </properties>
    </interface>
    <interface extends="Object" name="CSSRule">
      <constants>
        <constant name="CHARSET_RULE" tags="CSSOM" type="unsigned short" value="2"/>
        <constant name="FONT_FACE_RULE" tags="CSSOM" type="unsigned short" value="5"/>
        <constant name="IMPORT_RULE" tags="CSSOM" type="unsigned short" value="3"/>
        <constant name="KEYFRAMES_RULE" tags="CSSOM" type="unsigned short" value="7"/>
        <constant name="KEYFRAME_RULE" tags="CSSOM" type="unsigned short" value="8"/>
        <constant name="MEDIA_RULE" tags="CSSOM" type="unsigned short" value="4"/>
        <constant name="NAMESPACE_RULE" tags="CSSOM" type="unsigned short" value="10"/>
        <constant name="PAGE_RULE" tags="CSSOM" type="unsigned short" value="6"/>
        <constant name="STYLE_RULE" tags="CSSOM" type="unsigned short" value="1"/>
        <constant name="SUPPORTS_RULE" tags="CSSOM" type="unsigned short" value="12"/>
        <constant name="UNKNOWN_RULE" tags="CSSOM" type="unsigned short" value="0"/>
        <constant name="VIEWPORT_RULE" tags="CSSOM" type="unsigned short" value="15"/>
      </constants>
      <properties>
        <property name="cssText" tags="CSSOM" type="DOMString"/>
        <property name="parentRule" read-only="1" tags="CSSOM" type="CSSRule"/>
        <property name="parentStyleSheet" read-only="1" tags="CSSOM" type="CSSStyleSheet"/>
        <property name="type" read-only="1" tags="CSSOM" type="unsigned short"/>
      </properties>
    </interface>
    <interface extends="Object" name="CSSRuleList">
      <methods>
        <method getter="1" name="item" tags="CSSOM" type="CSSRule">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="CSSOM" type="long"/>
      </properties>
    </interface>
    <interface extends="Object" name="CSSStyleDeclaration" tags="CSSOM">
      <methods>
        <method name="getPropertyPriority" tags="CSSOM" type="DOMString">
          <param name="propertyName" type="DOMString"/>
        </method>
        <method name="getPropertyValue" tags="CSSOM" type="DOMString">
          <param name="propertyName" type="DOMString"/>
        </method>
        <method getter="1" name="item" tags="CSSOM" type="DOMString">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="removeProperty" tags="CSSOM" type="DOMString">
          <param name="propertyName" type="DOMString"/>
        </method>
        <method name="setProperty" tags="CSSOM" type="void">
          <param name="propertyName" type="DOMString"/>
          <param name="value" nullable="1" type="DOMString"/>
          <param name="priority" nullable="1" optional="1" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property css-property="align-content" name="alignContent" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="align-items" name="alignItems" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="align-self" name="alignSelf" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="alignment-baseline" css-property-enum-values="auto baseline before-edge text-before-edge middle central after-edge text-after-edge ideographic alphabetic hanging mathematical inherit" css-property-value-syntax="enum" name="alignmentBaseline" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="animation" name="animation" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="animation-delay" name="animationDelay" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="animation-direction" name="animationDirection" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="animation-duration" name="animationDuration" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="animation-fill-mode" name="animationFillMode" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="animation-iteration-count" name="animationIterationCount" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="animation-name" name="animationName" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="animation-play-state" name="animationPlayState" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="animation-timing-function" name="animationTimingFunction" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="backface-visibility" name="backfaceVisibility" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background" name="background" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background-attachment" name="backgroundAttachment" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background-clip" name="backgroundClip" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background-color" name="backgroundColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background-image" name="backgroundImage" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background-origin" name="backgroundOrigin" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background-position" name="backgroundPosition" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background-position-x" name="backgroundPositionX" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background-position-y" name="backgroundPositionY" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background-repeat" name="backgroundRepeat" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="background-size" name="backgroundSize" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="baseline-shift" css-property-enum-values="baseline sub super inherit" css-property-value-syntax="css_percentage_or_length" name="baselineShift" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border" name="border" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-bottom" name="borderBottom" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-bottom-color" name="borderBottomColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-bottom-left-radius" name="borderBottomLeftRadius" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-bottom-right-radius" name="borderBottomRightRadius" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-bottom-style" name="borderBottomStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-bottom-width" name="borderBottomWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-collapse" name="borderCollapse" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-color" name="borderColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-image" name="borderImage" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-image-outset" name="borderImageOutset" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-image-repeat" name="borderImageRepeat" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-image-slice" name="borderImageSlice" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-image-source" name="borderImageSource" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-image-width" name="borderImageWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-left" name="borderLeft" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-left-color" name="borderLeftColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-left-style" name="borderLeftStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-left-width" name="borderLeftWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-radius" name="borderRadius" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-right" name="borderRight" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-right-color" name="borderRightColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-right-style" name="borderRightStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-right-width" name="borderRightWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-spacing" name="borderSpacing" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-style" name="borderStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-top" name="borderTop" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-top-color" name="borderTopColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-top-left-radius" name="borderTopLeftRadius" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-top-right-radius" name="borderTopRightRadius" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-top-style" name="borderTopStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-top-width" name="borderTopWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="border-width" name="borderWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="bottom" name="bottom" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="box-shadow" name="boxShadow" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="box-sizing" name="boxSizing" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="break-after" name="breakAfter" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="break-before" name="breakBefore" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="break-inside" name="breakInside" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="caption-side" name="captionSide" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="clear" name="clear" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="clip" css-property-enum-values="auto inherit" css-property-value-syntax="css_shape_rect" name="clip" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="clip-path" css-property-enum-values="none inherit" css-property-value-syntax="css_url_of_local_id_ref" name="clipPath" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="clip-rule" css-property-enum-values="nonzero evenodd inherit" css-property-value-syntax="enum" name="clipRule" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="color" css-property-enum-values="inherit" css-property-value-syntax="css_color" name="color" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="color-interpolation-filters" css-property-enum-values="linearRGB auto sRGB inherit" css-property-value-syntax="enum" name="colorInterpolationFilters" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="column-count" name="columnCount" tags="CSSOM" type="any"/>
        <property css-property="column-fill" name="columnFill" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="column-gap" name="columnGap" tags="CSSOM" type="any"/>
        <property css-property="column-rule" name="columnRule" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="column-rule-color" name="columnRuleColor" tags="CSSOM" type="any"/>
        <property css-property="column-rule-style" name="columnRuleStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="column-rule-width" name="columnRuleWidth" tags="CSSOM" type="any"/>
        <property css-property="column-span" name="columnSpan" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="column-width" name="columnWidth" tags="CSSOM" type="any"/>
        <property css-property="columns" name="columns" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="content" name="content" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="counter-increment" name="counterIncrement" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="counter-reset" name="counterReset" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="float" name="cssFloat" nullable="1" tags="CSSOM" type="DOMString"/>
        <property name="cssText" tags="CSSOM" type="DOMString"/>
        <property css-property="cursor" css-property-enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" css-property-value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum" name="cursor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="direction" css-property-enum-values="ltr rtl inherit" css-property-value-syntax="enum" name="direction" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="display" css-property-enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" css-property-value-syntax="enum" name="display" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="dominant-baseline" css-property-enum-values="auto use-script no-change reset-size ideographic alphabetic hanging mathematical central middle text-after-edge text-before-edge inherit" css-property-value-syntax="enum" name="dominantBaseline" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="empty-cells" name="emptyCells" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="enable-background" css-property-enum-values="accumulate inherit" css-property-value-syntax="svg_enum_new_followed_by_svg_viewbox" name="enableBackground" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="fill" css-property-enum-values="none currentColor inherit" css-property-value-syntax="svg_paint_or_css_color" name="fill" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="fill-opacity" css-property-enum-values="inherit" css-property-value-syntax="0_to_1_floating_point_number" name="fillOpacity" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="fill-rule" css-property-enum-values="nonzero evenodd inherit" css-property-value-syntax="enum" name="fillRule" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="filter" css-property-enum-values="none inherit" css-property-value-syntax="css_url_of_local_id_ref" name="filter" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="flex" name="flex" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="flex-basis" name="flexBasis" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="flex-direction" name="flexDirection" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="flex-flow" name="flexFlow" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="flex-grow" name="flexGrow" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="flex-shrink" name="flexShrink" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="flex-wrap" name="flexWrap" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="flood-color" css-property-enum-values="currentColor inherit" css-property-value-syntax="css_color" name="floodColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="flood-opacity" css-property-enum-values="inherit" css-property-value-syntax="0_to_1_floating_point_number" name="floodOpacity" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="font" css-property-enum-values="caption icon menu message-box small-caption status-bar inherit" css-property-shorthand="1" css-property-value-syntax="css_font" name="font" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="font-family" css-property-enum-values="inherit" css-property-value-syntax="comma_separated_css_font_family_followed_by_generic_family" name="fontFamily" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="font-feature-settings" name="fontFeatureSettings" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="font-size" css-property-enum-values="smaller larger xx-small x-small small medium large x-large xx-large inherit" css-property-value-syntax="css_percentage_or_length" name="fontSize" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="font-size-adjust" css-property-enum-values="none inherit" css-property-value-syntax="floating_point_number" name="fontSizeAdjust" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="font-stretch" css-property-enum-values="normal wider narrower ultra-condensed extra-condensed condensed semi-condensed semi-expanded expanded extra-expanded ultra-expanded inherit" css-property-value-syntax="enum" name="fontStretch" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="font-style" css-property-enum-values="normal italic oblique inherit" css-property-value-syntax="enum" name="fontStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="font-variant" css-property-enum-values="normal small-caps inherit" css-property-value-syntax="enum" name="fontVariant" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="font-weight" css-property-enum-values="normal bold bolder lighter 100 200 300 400 500 600 700 800 900 inherit" css-property-value-syntax="enum" name="fontWeight" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="glyph-orientation-horizontal" css-property-enum-values="inherit" css-property-value-syntax="css_angle" name="glyphOrientationHorizontal" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="glyph-orientation-vertical" css-property-enum-values="auto inherit" css-property-value-syntax="css_angle" name="glyphOrientationVertical" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="height" name="height" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="ime-mode" name="imeMode" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="justify-content" name="justifyContent" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="kerning" css-property-enum-values="auto inherit" css-property-value-syntax="css_length" name="kerning" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="left" name="left" nullable="1" tags="CSSOM" type="DOMString"/>
        <property name="length" read-only="1" tags="CSSOM" type="unsigned long"/>
        <property css-property="letter-spacing" css-property-enum-values="normal inherit" css-property-value-syntax="css_length" name="letterSpacing" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="lighting-color" css-property-enum-values="currentColor inherit" css-property-value-syntax="css_color" name="lightingColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="line-height" name="lineHeight" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="list-style" name="listStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="list-style-image" name="listStyleImage" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="list-style-position" name="listStylePosition" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="list-style-type" name="listStyleType" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="margin" name="margin" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="margin-bottom" name="marginBottom" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="margin-left" name="marginLeft" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="margin-right" name="marginRight" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="margin-top" name="marginTop" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="marker" css-property-enum-values="none inherit" css-property-shorthand="1" css-property-value-syntax="css_url_of_local_id_ref" name="marker" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="marker-end" css-property-enum-values="none inherit" css-property-value-syntax="css_url_of_local_id_ref" name="markerEnd" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="marker-mid" css-property-enum-values="none inherit" css-property-value-syntax="css_url_of_local_id_ref" name="markerMid" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="marker-start" css-property-enum-values="none inherit" css-property-value-syntax="css_url_of_local_id_ref" name="markerStart" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="mask" css-property-enum-values="none inherit" css-property-value-syntax="css_url_of_local_id_ref" name="mask" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="max-height" name="maxHeight" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="max-width" name="maxWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="min-height" name="minHeight" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="min-width" name="minWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-animation" name="msAnimation" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-animation-delay" name="msAnimationDelay" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-animation-direction" name="msAnimationDirection" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-animation-duration" name="msAnimationDuration" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-animation-fill-mode" name="msAnimationFillMode" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-animation-iteration-count" name="msAnimationIterationCount" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-animation-name" name="msAnimationName" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-animation-play-state" name="msAnimationPlayState" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-animation-timing-function" name="msAnimationTimingFunction" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-content-zoom-chaining" name="msContentZoomChaining" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-content-zoom-limit" name="msContentZoomLimit" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-content-zoom-limit-max" name="msContentZoomLimitMax" tags="CSSOM" type="any"/>
        <property css-property="-ms-content-zoom-limit-min" name="msContentZoomLimitMin" tags="CSSOM" type="any"/>
        <property css-property="-ms-content-zoom-snap" name="msContentZoomSnap" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-content-zoom-snap-points" name="msContentZoomSnapPoints" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-content-zoom-snap-type" name="msContentZoomSnapType" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-content-zooming" name="msContentZooming" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-flow-from" name="msFlowFrom" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-flow-into" name="msFlowInto" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-font-feature-settings" name="msFontFeatureSettings" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-grid-column" name="msGridColumn" tags="CSSOM" type="any"/>
        <property css-property="-ms-grid-column-align" name="msGridColumnAlign" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-grid-column-span" name="msGridColumnSpan" tags="CSSOM" type="any"/>
        <property css-property="-ms-grid-columns" name="msGridColumns" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-grid-row" name="msGridRow" tags="CSSOM" type="any"/>
        <property css-property="-ms-grid-row-align" name="msGridRowAlign" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-grid-row-span" name="msGridRowSpan" tags="CSSOM" type="any"/>
        <property css-property="-ms-grid-rows" name="msGridRows" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-high-contrast-adjust" name="msHighContrastAdjust" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-hyphenate-limit-chars" name="msHyphenateLimitChars" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-hyphenate-limit-lines" name="msHyphenateLimitLines" tags="CSSOM" type="any"/>
        <property css-property="-ms-hyphenate-limit-zone" name="msHyphenateLimitZone" tags="CSSOM" type="any"/>
        <property css-property="-ms-hyphens" name="msHyphens" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-ime-align" name="msImeAlign" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-overflow-style" name="msOverflowStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-scroll-chaining" name="msScrollChaining" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-scroll-limit" name="msScrollLimit" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-scroll-limit-x-max" name="msScrollLimitXMax" tags="CSSOM" type="any"/>
        <property css-property="-ms-scroll-limit-x-min" name="msScrollLimitXMin" tags="CSSOM" type="any"/>
        <property css-property="-ms-scroll-limit-y-max" name="msScrollLimitYMax" tags="CSSOM" type="any"/>
        <property css-property="-ms-scroll-limit-y-min" name="msScrollLimitYMin" tags="CSSOM" type="any"/>
        <property css-property="-ms-scroll-rails" name="msScrollRails" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-scroll-snap-points-x" name="msScrollSnapPointsX" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-scroll-snap-points-y" name="msScrollSnapPointsY" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-scroll-snap-type" name="msScrollSnapType" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-scroll-snap-x" name="msScrollSnapX" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-scroll-snap-y" name="msScrollSnapY" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-scroll-translation" name="msScrollTranslation" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-text-combine-horizontal" name="msTextCombineHorizontal" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-text-size-adjust" name="msTextSizeAdjust" tags="CSSOM" type="any"/>
        <property css-property="-ms-touch-action" name="msTouchAction" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-touch-select" name="msTouchSelect" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-user-select" name="msUserSelect" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-wrap-flow" name="msWrapFlow" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-wrap-margin" name="msWrapMargin" tags="CSSOM" type="any"/>
        <property css-property="-ms-wrap-through" name="msWrapThrough" tags="CSSOM" type="DOMString"/>
        <property css-property="opacity" css-property-enum-values="inherit" css-property-value-syntax="0_to_1_floating_point_number" name="opacity" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="order" name="order" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="orphans" name="orphans" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="outline" name="outline" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="outline-color" name="outlineColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="outline-style" name="outlineStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="outline-width" name="outlineWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="overflow" css-property-enum-values="visible hidden scroll auto inherit" css-property-value-syntax="enum" name="overflow" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="overflow-x" name="overflowX" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="overflow-y" name="overflowY" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="padding" name="padding" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="padding-bottom" name="paddingBottom" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="padding-left" name="paddingLeft" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="padding-right" name="paddingRight" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="padding-top" name="paddingTop" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="page-break-after" name="pageBreakAfter" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="page-break-before" name="pageBreakBefore" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="page-break-inside" name="pageBreakInside" nullable="1" tags="CSSOM" type="DOMString"/>
        <property name="parentRule" read-only="1" tags="CSSOM" type="CSSRule"/>
        <property css-property="perspective" name="perspective" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="perspective-origin" name="perspectiveOrigin" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="pointer-events" css-property-enum-values="auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit" css-property-value-syntax="enum" name="pointerEvents" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="position" name="position" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="quotes" name="quotes" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="right" name="right" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="ruby-align" name="rubyAlign" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="ruby-overhang" name="rubyOverhang" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="ruby-position" name="rubyPosition" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="stop-color" css-property-enum-values="currentColor inherit" css-property-value-syntax="css_color" name="stopColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="stop-opacity" css-property-enum-values="inherit" css-property-value-syntax="0_to_1_floating_point_number" name="stopOpacity" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="stroke" css-property-enum-values="none currentColor inherit" css-property-value-syntax="svg_paint_or_css_color" name="stroke" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="stroke-dasharray" css-property-enum-values="none inherit" css-property-value-syntax="comma_or_space_separated_css_percentage_or_length" name="strokeDasharray" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="stroke-dashoffset" css-property-enum-values="inherit" css-property-value-syntax="css_percentage_or_length" name="strokeDashoffset" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="stroke-linecap" css-property-enum-values="butt round square inherit" css-property-value-syntax="enum" name="strokeLinecap" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="stroke-linejoin" css-property-enum-values="miter round bevel inherit" css-property-value-syntax="enum" name="strokeLinejoin" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="stroke-miterlimit" css-property-enum-values="inherit" css-property-value-syntax="0_to_1_floating_point_number" name="strokeMiterlimit" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="stroke-opacity" css-property-enum-values="inherit" css-property-value-syntax="0_to_1_floating_point_number" name="strokeOpacity" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="stroke-width" css-property-enum-values="inherit" css-property-value-syntax="css_percentage_or_length" name="strokeWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="table-layout" name="tableLayout" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-align" name="textAlign" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-align-last" name="textAlignLast" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-anchor" css-property-enum-values="start middle end inherit" css-property-value-syntax="enum" name="textAnchor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-decoration" css-property-enum-values="none inherit" css-property-value-syntax="space_separated_css_enum_underline_overline_line-through_blink" name="textDecoration" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-indent" name="textIndent" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-justify" name="textJustify" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-kashida" name="textKashida" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-kashida-space" name="textKashidaSpace" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-overflow" name="textOverflow" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-shadow" name="textShadow" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-transform" name="textTransform" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="text-underline-position" name="textUnderlinePosition" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="top" name="top" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="touch-action" name="touchAction" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-transform" name="transform" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-transform-origin" name="transformOrigin" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="transform-style" name="transformStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-transition" name="transition" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-transition-delay" name="transitionDelay" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-transition-duration" name="transitionDuration" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-transition-property" name="transitionProperty" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-ms-transition-timing-function" name="transitionTimingFunction" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="unicode-bidi" css-property-enum-values="normal embed bidi-override inherit" css-property-value-syntax="enum" name="unicodeBidi" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="vertical-align" name="verticalAlign" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="visibility" css-property-enum-values="visible hidden collapse inherit" css-property-value-syntax="enum" name="visibility" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-align-content" name="webkitAlignContent" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-align-items" name="webkitAlignItems" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-align-self" name="webkitAlignSelf" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-animation" name="webkitAnimation" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-animation-delay" name="webkitAnimationDelay" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-animation-direction" name="webkitAnimationDirection" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-animation-duration" name="webkitAnimationDuration" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-animation-fill-mode" name="webkitAnimationFillMode" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-animation-iteration-count" name="webkitAnimationIterationCount" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-animation-name" name="webkitAnimationName" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-animation-play-state" name="webkitAnimationPlayState" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-animation-timing-function" name="webkitAnimationTimingFunction" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-appearance" name="webkitAppearance" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-backface-visibility" name="webkitBackfaceVisibility" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background" name="webkitBackground" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background-attachment" name="webkitBackgroundAttachment" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background-clip" name="webkitBackgroundClip" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background-color" name="webkitBackgroundColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background-image" name="webkitBackgroundImage" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background-origin" name="webkitBackgroundOrigin" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background-position" name="webkitBackgroundPosition" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background-position-x" name="webkitBackgroundPositionX" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background-position-y" name="webkitBackgroundPositionY" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background-repeat" name="webkitBackgroundRepeat" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-background-size" name="webkitBackgroundSize" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-border-image" name="webkitBorderImage" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-border-image-outset" name="webkitBorderImageOutset" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-border-image-repeat" name="webkitBorderImageRepeat" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-border-image-slice" name="webkitBorderImageSlice" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-border-image-source" name="webkitBorderImageSource" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-border-image-width" name="webkitBorderImageWidth" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-box-align" name="webkitBoxAlign" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-box-direction" name="webkitBoxDirection" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-box-flex" name="webkitBoxFlex" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-box-ordinal-group" name="webkitBoxOrdinalGroup" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-box-orient" name="webkitBoxOrient" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-box-pack" name="webkitBoxPack" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-box-sizing" name="webkitBoxSizing" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-column-break-after" name="webkitColumnBreakAfter" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-column-break-before" name="webkitColumnBreakBefore" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-column-break-inside" name="webkitColumnBreakInside" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-column-count" name="webkitColumnCount" tags="CSSOM" type="any"/>
        <property css-property="-webkit-column-gap" name="webkitColumnGap" tags="CSSOM" type="any"/>
        <property css-property="-webkit-column-rule" name="webkitColumnRule" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-column-rule-color" name="webkitColumnRuleColor" tags="CSSOM" type="any"/>
        <property css-property="-webkit-column-rule-style" name="webkitColumnRuleStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-column-rule-width" name="webkitColumnRuleWidth" tags="CSSOM" type="any"/>
        <property css-property="-webkit-column-span" name="webkitColumnSpan" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-column-width" name="webkitColumnWidth" tags="CSSOM" type="any"/>
        <property css-property="-webkit-columns" name="webkitColumns" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-filter" name="webkitFilter" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-flex" name="webkitFlex" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-flex-basis" name="webkitFlexBasis" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-flex-direction" name="webkitFlexDirection" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-flex-flow" name="webkitFlexFlow" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-flex-grow" name="webkitFlexGrow" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-flex-shrink" name="webkitFlexShrink" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-flex-wrap" name="webkitFlexWrap" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-justify-content" name="webkitJustifyContent" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-order" name="webkitOrder" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-perspective" name="webkitPerspective" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-perspective-origin" name="webkitPerspectiveOrigin" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-tap-highlight-color" name="webkitTapHighlightColor" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-text-size-adjust" name="webkitTextSizeAdjust" tags="CSSOM" type="any"/>
        <property css-property="-webkit-transform" name="webkitTransform" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-transform-origin" name="webkitTransformOrigin" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-transform-style" name="webkitTransformStyle" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-transition" name="webkitTransition" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-transition-delay" name="webkitTransitionDelay" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-transition-duration" name="webkitTransitionDuration" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-transition-property" name="webkitTransitionProperty" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-transition-timing-function" name="webkitTransitionTimingFunction" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-user-select" name="webkitUserSelect" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="-webkit-writing-mode" css-property-enum-values="horizontal-tb vertical-lr vertical-rl inherit" css-property-value-syntax="enum" name="webkitWritingMode" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="white-space" name="whiteSpace" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="widows" name="widows" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="width" name="width" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="word-break" name="wordBreak" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="word-spacing" css-property-enum-values="normal inherit" css-property-value-syntax="css_length" name="wordSpacing" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="word-wrap" name="wordWrap" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="writing-mode" css-property-enum-values="lr-tb tb-rl rl-tb bt-rl tb-lr bt-lr lr-bt rl-bt lr rl tb horizontal-tb vertical-lr vertical-rl inherit" css-property-value-syntax="enum" name="writingMode" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="z-index" name="zIndex" nullable="1" tags="CSSOM" type="DOMString"/>
        <property css-property="zoom" name="zoom" nullable="1" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="CSSRule" name="CSSStyleRule">
      <properties>
        <property name="readOnly" read-only="1" tags="Editing" type="boolean"/>
        <property name="selectorText" tags="CSSOM" type="DOMString"/>
        <property name="style" read-only="1" tags="CSSOM" type="CSSStyleDeclaration"/>
      </properties>
    </interface>
    <interface extends="StyleSheet" name="CSSStyleSheet">
      <methods>
        <method deprecated="1" name="addImport" tags="CSSOM" type="long">
          <param name="bstrURL" type="DOMString"/>
          <param default="-1" name="lIndex" optional="1" type="long"/>
        </method>
        <method deprecated="1" name="addPageRule" tags="CSSOM" type="long">
          <param name="bstrSelector" type="DOMString"/>
          <param name="bstrStyle" type="DOMString"/>
          <param default="-1" name="lIndex" optional="1" type="long"/>
        </method>
        <method name="addRule" tags="CSSOM" type="long">
          <param name="bstrSelector" type="DOMString"/>
          <param name="bstrStyle" optional="1" type="DOMString"/>
          <param default="-1" name="lIndex" optional="1" type="long"/>
        </method>
        <method name="deleteRule" tags="CSSOM" type="void">
          <param default="-1" name="index" optional="1" type="unsigned long"/>
        </method>
        <method name="insertRule" tags="CSSOM" type="unsigned long">
          <param name="rule" type="DOMString"/>
          <param default="0" name="index" optional="1" type="unsigned long"/>
        </method>
        <method deprecated="1" name="removeImport" tags="CSSOM" type="void">
          <param name="lIndex" type="long"/>
        </method>
        <method name="removeRule" tags="CSSOM" type="void">
          <param name="lIndex" type="long"/>
        </method>
      </methods>
      <properties>
        <property name="cssRules" read-only="1" tags="CSSOM" type="CSSRuleList"/>
        <property deprecated="1" name="cssText" tags="CSSOM" type="DOMString"/>
        <property name="href" read-only="1" tags="CSSOM" type="DOMString"/>
        <property deprecated="1" name="id" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property deprecated="1" name="imports" read-only="1" tags="TreeNavigation" type="StyleSheetList"/>
        <property name="isAlternate" read-only="1" tags="CSSOM" type="boolean"/>
        <property name="isPrefAlternate" read-only="1" tags="CSSOM" type="boolean"/>
        <property name="ownerRule" read-only="1" tags="CSSOM" type="CSSRule"/>
        <property deprecated="1" name="owningElement" read-only="1" tags="TreeNavigation" type="Element"/>
        <property deprecated="1" name="pages" read-only="1" tags="TreeNavigation" type="StyleSheetPageList"/>
        <property name="readOnly" read-only="1" tags="Editing" type="boolean"/>
        <property name="rules" read-only="1" tags="CSSOM" type="CSSRuleList"/>
      </properties>
    </interface>
    <interface extends="CSSConditionRule" name="CSSSupportsRule"/>
    <interface extends="Object" name="CanvasGradient">
      <methods>
        <method name="addColorStop" type="void">
          <param name="offset" type="float"/>
          <param name="color" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="CanvasPattern"/>
    <interface extends="Object" name="CanvasRenderingContext2D">
      <methods>
        <method name="arc" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="radius" type="float"/>
          <param name="startAngle" type="float"/>
          <param name="endAngle" type="float"/>
          <param default="false" name="anticlockwise" optional="1" type="boolean"/>
        </method>
        <method name="arcTo" type="void">
          <param name="x1" type="float"/>
          <param name="y1" type="float"/>
          <param name="x2" type="float"/>
          <param name="y2" type="float"/>
          <param name="radius" type="float"/>
        </method>
        <method name="beginPath" type="void"/>
        <method name="bezierCurveTo" type="void">
          <param name="cp1x" type="float"/>
          <param name="cp1y" type="float"/>
          <param name="cp2x" type="float"/>
          <param name="cp2y" type="float"/>
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="clearRect" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="w" type="float"/>
          <param name="h" type="float"/>
        </method>
        <method name="clip" type="void">
          <param name="fillRule" optional="1" type="DOMString"/>
        </method>
        <method name="closePath" type="void"/>
        <method name="createImageData" type="ImageData">
          <param name="imageDataOrSw" type="(float or ImageData)"/>
          <param name="sh" optional="1" type="float"/>
        </method>
        <method name="createLinearGradient" type="CanvasGradient">
          <param name="x0" type="float"/>
          <param name="y0" type="float"/>
          <param name="x1" type="float"/>
          <param name="y1" type="float"/>
        </method>
        <method name="createPattern" type="CanvasPattern">
          <param name="image" type="(HTMLImageElement or HTMLCanvasElement or HTMLVideoElement)"/>
          <param name="repetition" type="DOMString"/>
        </method>
        <method name="createRadialGradient" type="CanvasGradient">
          <param name="x0" type="float"/>
          <param name="y0" type="float"/>
          <param name="r0" type="float"/>
          <param name="x1" type="float"/>
          <param name="y1" type="float"/>
          <param name="r1" type="float"/>
        </method>
        <method name="drawImage" type="void">
          <param name="image" type="(HTMLImageElement or HTMLCanvasElement or HTMLVideoElement)"/>
          <param name="offsetX" type="float"/>
          <param name="offsetY" type="float"/>
          <param name="width" optional="1" type="float"/>
          <param name="height" optional="1" type="float"/>
          <param name="canvasOffsetX" optional="1" type="float"/>
          <param name="canvasOffsetY" optional="1" type="float"/>
          <param name="canvasImageWidth" optional="1" type="float"/>
          <param name="canvasImageHeight" optional="1" type="float"/>
        </method>
        <method name="fill" type="void">
          <param name="fillRule" optional="1" type="DOMString"/>
        </method>
        <method name="fillRect" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="w" type="float"/>
          <param name="h" type="float"/>
        </method>
        <method name="fillText" type="void">
          <param name="text" type="DOMString"/>
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="maxWidth" optional="1" type="float"/>
        </method>
        <method name="getImageData" type="ImageData">
          <param name="sx" type="float"/>
          <param name="sy" type="float"/>
          <param name="sw" type="float"/>
          <param name="sh" type="float"/>
        </method>
        <method name="getLineDash" type="sequence&lt;UnrestrictedDouble&gt;"/>
        <method name="isPointInPath" type="boolean">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="fillRule" optional="1" type="DOMString"/>
        </method>
        <method name="lineTo" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="measureText" type="TextMetrics">
          <param name="text" type="DOMString"/>
        </method>
        <method name="moveTo" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="putImageData" type="void">
          <param name="imagedata" type="ImageData"/>
          <param name="dx" type="float"/>
          <param name="dy" type="float"/>
          <param name="dirtyX" optional="1" type="float"/>
          <param name="dirtyY" optional="1" type="float"/>
          <param name="dirtyWidth" optional="1" type="float"/>
          <param name="dirtyHeight" optional="1" type="float"/>
        </method>
        <method name="quadraticCurveTo" type="void">
          <param name="cpx" type="float"/>
          <param name="cpy" type="float"/>
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="rect" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="w" type="float"/>
          <param name="h" type="float"/>
        </method>
        <method name="restore" type="void"/>
        <method name="rotate" type="void">
          <param name="angle" type="float"/>
        </method>
        <method name="save" type="void"/>
        <method name="scale" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="setLineDash" type="void">
          <param name="segments" type="sequence&lt;UnrestrictedDouble&gt;"/>
        </method>
        <method name="setTransform" type="void">
          <param name="m11" type="float"/>
          <param name="m12" type="float"/>
          <param name="m21" type="float"/>
          <param name="m22" type="float"/>
          <param name="dx" type="float"/>
          <param name="dy" type="float"/>
        </method>
        <method name="stroke" type="void"/>
        <method name="strokeRect" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="w" type="float"/>
          <param name="h" type="float"/>
        </method>
        <method name="strokeText" type="void">
          <param name="text" type="DOMString"/>
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="maxWidth" optional="1" type="float"/>
        </method>
        <method name="transform" type="void">
          <param name="m11" type="float"/>
          <param name="m12" type="float"/>
          <param name="m21" type="float"/>
          <param name="m22" type="float"/>
          <param name="dx" type="float"/>
          <param name="dy" type="float"/>
        </method>
        <method name="translate" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
      </methods>
      <properties>
        <property name="canvas" read-only="1" type="HTMLCanvasElement"/>
        <property name="fillStyle" type="any"/>
        <property name="font" type="DOMString"/>
        <property name="globalAlpha" type="float"/>
        <property name="globalCompositeOperation" type="DOMString"/>
        <property name="lineCap" type="DOMString"/>
        <property name="lineDashOffset" type="UnrestrictedDouble"/>
        <property name="lineJoin" type="DOMString"/>
        <property name="lineWidth" type="float"/>
        <property name="miterLimit" type="float"/>
        <property name="msFillRule" type="DOMString"/>
        <property name="msImageSmoothingEnabled" type="bool"/>
        <property name="shadowBlur" type="float"/>
        <property name="shadowColor" type="DOMString"/>
        <property name="shadowOffsetX" type="float"/>
        <property name="shadowOffsetY" type="float"/>
        <property name="strokeStyle" type="any"/>
        <property name="textAlign" type="DOMString"/>
        <property name="textBaseline" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="ChannelMergerNode"/>
    <interface extends="AudioNode" name="ChannelSplitterNode"/>
    <interface extends="Node" name="CharacterData">
      <events>
        <event bubbles="1" dispatch="sync" name="DOMCharacterDataModified" type="MutationEvent"/>
        <event bubbles="1" dispatch="async-and-combine" name="DOMSubtreeModified" type="MutationEvent"/>
      </events>
      <implements>ChildNode</implements>
      <methods>
        <method name="appendData" tags="TreeMutation" type="void">
          <param name="arg" type="DOMString"/>
        </method>
        <method name="deleteData" tags="TreeMutation" type="void">
          <param name="offset" type="unsigned long"/>
          <param name="count" type="unsigned long"/>
        </method>
        <method name="insertData" tags="TreeMutation" type="void">
          <param name="offset" type="unsigned long"/>
          <param name="arg" type="DOMString"/>
        </method>
        <method name="replaceData" tags="TreeMutation" type="void">
          <param name="offset" type="unsigned long"/>
          <param name="count" type="unsigned long"/>
          <param name="arg" type="DOMString"/>
        </method>
        <method name="substringData" tags="TreeNavigation" type="DOMString">
          <param name="offset" type="unsigned long"/>
          <param name="count" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="data" tags="TreeIdentity" type="DOMString"/>
        <property name="length" read-only="1" tags="TreeNavigation" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="ClientRect">
      <properties>
        <property name="bottom" tags="CSSOM" type="long"/>
        <property name="height" read-only="1" tags="CSSOM" type="float"/>
        <property name="left" tags="CSSOM" type="long"/>
        <property name="right" tags="CSSOM" type="long"/>
        <property name="top" tags="CSSOM" type="long"/>
        <property name="width" read-only="1" tags="CSSOM" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="ClientRectList">
      <methods>
        <method getter="1" name="item" tags="CSSOM" type="ClientRect">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="CSSOM" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Event" name="ClipboardEvent">
      <constructor>
        <param name="type" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="ClipboardEventInit"/>
      </constructor>
      <properties>
        <property name="clipboardData" read-only="1" type="DataTransfer"/>
      </properties>
    </interface>
    <interface extends="Event" name="CloseEvent">
      <methods>
        <method name="initCloseEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="wasCleanArg" type="boolean"/>
          <param name="codeArg" type="unsigned short"/>
          <param name="reasonArg" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="code" read-only="1" tags="Events" type="unsigned short"/>
        <property name="reason" read-only="1" tags="Events" type="DOMString"/>
        <property name="wasClean" read-only="1" tags="Events" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Event" name="CommandEvent">
      <constructor>
        <param name="type" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="CommandEventInit"/>
      </constructor>
      <properties>
        <property name="commandName" read-only="1" type="DOMString"/>
        <property name="detail" nullable="1" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="CharacterData" name="Comment">
      <properties>
        <property deprecated="1" name="text" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="UIEvent" name="CompositionEvent">
      <constructor>
        <param name="typeArg" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="CompositionEventInit"/>
      </constructor>
      <methods>
        <method name="initCompositionEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="dataArg" type="DOMString"/>
          <param name="locale" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="data" read-only="1" tags="Events" type="DOMString"/>
        <property name="locale" read-only="1" tags="Events" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="Console">
      <methods>
        <method name="assert" tags="Console" type="void">
          <param name="test" optional="1" type="boolean"/>
          <param name="message" optional="1" type="DOMString"/>
          <param name="optionalParams" type="any" variadic="1"/>
        </method>
        <method name="clear" tags="Console" type="void"/>
        <method name="count" tags="Console" type="void">
          <param name="countTitle" optional="1" type="DOMString"/>
        </method>
        <method name="debug" tags="Console" type="void">
          <param name="message" optional="1" type="DOMString"/>
          <param name="optionalParams" type="any" variadic="1"/>
        </method>
        <method name="dir" tags="Console" type="void">
          <param name="value" optional="1" type="any"/>
          <param name="optionalParams" type="any" variadic="1"/>
        </method>
        <method name="dirxml" tags="Console" type="void">
          <param name="value" type="any"/>
        </method>
        <method name="error" tags="Console" type="void">
          <param name="message" optional="1" type="DOMString"/>
          <param name="optionalParams" type="any" variadic="1"/>
        </method>
        <method name="group" tags="Console" type="void">
          <param name="groupTitle" optional="1" type="DOMString"/>
        </method>
        <method name="groupCollapsed" tags="Console" type="void">
          <param name="groupTitle" optional="1" type="DOMString"/>
        </method>
        <method name="groupEnd" tags="Console" type="void"/>
        <method name="info" tags="Console" type="void">
          <param name="message" optional="1" type="DOMString"/>
          <param name="optionalParams" type="any" variadic="1"/>
        </method>
        <method name="log" tags="Console" type="void">
          <param name="message" optional="1" type="DOMString"/>
          <param name="optionalParams" type="any" variadic="1"/>
        </method>
        <method name="msIsIndependentlyComposed" tags="Console" type="boolean">
          <param name="element" type="Element"/>
        </method>
        <method name="profile" tags="Console" type="void">
          <param name="reportName" optional="1" type="DOMString"/>
        </method>
        <method name="profileEnd" tags="Console" type="void"/>
        <method name="select" tags="Console" type="void">
          <param name="element" type="Element"/>
        </method>
        <method name="time" tags="Console" type="void">
          <param name="timerName" optional="1" type="DOMString"/>
        </method>
        <method name="timeEnd" tags="Console" type="void">
          <param name="timerName" optional="1" type="DOMString"/>
        </method>
        <method name="trace" tags="Console" type="void"/>
        <method name="warn" tags="Console" type="void">
          <param name="message" optional="1" type="DOMString"/>
          <param name="optionalParams" type="any" variadic="1"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="ControlRangeCollection">
      <methods>
        <method name="add" tags="Editing" type="void">
          <param name="item" type="Element"/>
        </method>
        <method name="addElement" tags="Editing" type="void">
          <param name="item" type="Element"/>
        </method>
        <method name="execCommand" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
          <param default="false" name="showUI" optional="1" type="boolean"/>
          <param name="value" optional="1" type="any"/>
        </method>
        <method getter="1" name="item" tags="TreeNavigation" type="Element">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="queryCommandEnabled" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="queryCommandIndeterm" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="queryCommandState" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="queryCommandSupported" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="queryCommandText" tags="Editing" type="DOMString">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="queryCommandValue" tags="Editing" type="any">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="remove" tags="Editing" type="void">
          <param name="index" type="long"/>
        </method>
        <method name="scrollIntoView" tags="Editing" type="void">
          <param name="varargStart" optional="1" type="any"/>
        </method>
        <method name="select" tags="Editing" type="void"/>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="TreeNavigation" type="long"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="ConvolverNode">
      <properties>
        <property name="buffer" nullable="1" type="AudioBuffer"/>
        <property name="normalize" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Object" name="Coordinates">
      <properties>
        <property name="accuracy" read-only="1" tags="Geolocation" type="double"/>
        <property name="altitude" nullable="1" read-only="1" tags="Geolocation" type="double"/>
        <property name="altitudeAccuracy" nullable="1" read-only="1" tags="Geolocation" type="double"/>
        <property name="heading" nullable="1" read-only="1" tags="Geolocation" type="double"/>
        <property name="latitude" read-only="1" tags="Geolocation" type="double"/>
        <property name="longitude" read-only="1" tags="Geolocation" type="double"/>
        <property name="speed" nullable="1" read-only="1" tags="Geolocation" type="double"/>
      </properties>
    </interface>
    <interface extends="Object" name="Crypto">
      <implements>RandomSource</implements>
      <properties>
        <property name="subtle" read-only="1" type="SubtleCrypto"/>
      </properties>
    </interface>
    <interface extends="Event" name="CustomEvent">
      <constructor>
        <param name="typeArg" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="CustomEventInit"/>
      </constructor>
      <methods>
        <method name="initCustomEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="detailArg" type="object"/>
        </method>
      </methods>
      <properties>
        <property name="detail" read-only="1" tags="Events" type="object"/>
      </properties>
    </interface>
    <interface extends="Object" name="DOMError">
      <methods>
        <method name="toString" stringifier="1" type="DOMString"/>
      </methods>
      <properties>
        <property name="name" read-only="1" stringifier="1" tags="Exceptions" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="DOMException" specs="DOM4" tags="Exceptions">
      <constants>
        <constant name="ABORT_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="20"/>
        <constant name="DATA_CLONE_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="25"/>
        <constant name="DOMSTRING_SIZE_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="2"/>
        <constant name="HIERARCHY_REQUEST_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="3"/>
        <constant name="INDEX_SIZE_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="1"/>
        <constant name="INUSE_ATTRIBUTE_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="10"/>
        <constant name="INVALID_ACCESS_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="15"/>
        <constant name="INVALID_CHARACTER_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="5"/>
        <constant name="INVALID_MODIFICATION_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="13"/>
        <constant name="INVALID_NODE_TYPE_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="24"/>
        <constant name="INVALID_STATE_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="11"/>
        <constant name="NAMESPACE_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="14"/>
        <constant name="NETWORK_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="19"/>
        <constant name="NOT_FOUND_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="8"/>
        <constant name="NOT_SUPPORTED_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="9"/>
        <constant name="NO_DATA_ALLOWED_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="6"/>
        <constant name="NO_MODIFICATION_ALLOWED_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="7"/>
        <constant name="PARSE_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="81"/>
        <constant name="QUOTA_EXCEEDED_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="22"/>
        <constant name="SECURITY_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="18"/>
        <constant name="SERIALIZE_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="82"/>
        <constant name="SYNTAX_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="12"/>
        <constant name="TIMEOUT_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="23"/>
        <constant name="TYPE_MISMATCH_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="17"/>
        <constant name="URL_MISMATCH_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="21"/>
        <constant name="VALIDATION_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="16"/>
        <constant name="WRONG_DOCUMENT_ERR" specs="DOM4" tags="Exceptions" type="unsigned short" value="4"/>
      </constants>
      <methods>
        <method name="toString" stringifier="1" type="DOMString"/>
      </methods>
      <properties>
        <property name="code" read-only="1" specs="DOM4" tags="Exceptions" type="unsigned short"/>
        <property name="message" read-only="1" specs="DOM4" stringifier="1" tags="Exceptions" type="DOMString"/>
        <property name="name" read-only="1" specs="DOM4" tags="Exceptions" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="DOMImplementation">
      <methods>
        <method name="createDocument" tags="TreeMutation" type="Document">
          <param name="namespaceURI" nullable="1" type="DOMString"/>
          <param name="qualifiedName" nullable="1" type="DOMString"/>
          <param name="doctype" type="DocumentType"/>
        </method>
        <method name="createDocumentType" tags="TreeMutation" type="DocumentType">
          <param name="qualifiedName" type="DOMString"/>
          <param name="publicId" nullable="1" type="DOMString"/>
          <param name="systemId" nullable="1" type="DOMString"/>
        </method>
        <method name="createHTMLDocument" tags="TreeMutation" type="Document">
          <param name="title" type="DOMString"/>
        </method>
        <method name="hasFeature" type="boolean">
          <param name="feature" nullable="1" type="DOMString"/>
          <param name="version" nullable="1" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="DOMParser">
      <constructor/>
      <methods>
        <method name="parseFromString" tags="TreeMutation" type="Document">
          <param name="source" type="DOMString"/>
          <param name="mimeType" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="DOMTokenList" name="DOMSettableTokenList">
      <properties>
        <property name="value" tags="TreeNavigation" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="DOMStringList">
      <methods>
        <method name="contains" tags="TreeNavigation" type="boolean">
          <param name="str" type="DOMString"/>
        </method>
        <method getter="1" name="item" nullable="1" tags="TreeNavigation" type="DOMString">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="TreeNavigation" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="DOMStringMap">
      <anonymous-methods>
        <method getter="1" type="DOMString">
          <param name="name" type="DOMString"/>
        </method>
        <method creator="1" setter="1" type="void">
          <param name="name" type="DOMString"/>
          <param name="value" type="DOMString"/>
        </method>
        <method deleter="1" type="void">
          <param name="name" type="DOMString"/>
        </method>
      </anonymous-methods>
    </interface>
    <interface extends="Object" name="DOMTokenList">
      <methods>
        <method name="add" tags="TreeNavigation" type="void">
          <param name="token" type="DOMString" variadic="1"/>
        </method>
        <method name="contains" tags="TreeNavigation" type="boolean">
          <param name="token" type="DOMString"/>
        </method>
        <method getter="1" name="item" tags="TreeNavigation" type="DOMString">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="remove" tags="TreeNavigation" type="void">
          <param name="token" type="DOMString" variadic="1"/>
        </method>
        <method name="toString" stringifier="1" tags="TreeNavigation" type="DOMString"/>
        <method name="toggle" tags="TreeNavigation" type="boolean">
          <param name="token" type="DOMString"/>
          <param name="force" optional="1" type="boolean"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="TreeNavigation" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="TextTrackCue" name="DataCue">
      <properties>
        <property name="data" tags="Media" type="ArrayBuffer"/>
      </properties>
    </interface>
    <interface extends="Object" name="DataTransfer">
      <methods>
        <method name="clearData" type="boolean">
          <param default="&quot;null&quot;" name="format" optional="1" type="DOMString"/>
        </method>
        <method name="getData" type="DOMString">
          <param name="format" type="DOMString"/>
        </method>
        <method name="setData" tags="Editing" type="boolean">
          <param name="format" type="DOMString"/>
          <param name="data" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="dropEffect" type="DOMString"/>
        <property name="effectAllowed" type="DOMString"/>
        <property name="files" read-only="1" type="FileList"/>
        <property name="items" read-only="1" type="DataTransferItemList"/>
        <property name="types" read-only="1" type="DOMStringList"/>
      </properties>
    </interface>
    <interface extends="Object" name="DataTransferItem">
      <methods>
        <method name="getAsFile" nullable="1" type="File"/>
        <method name="getAsString" type="void">
          <param name="_callback" nullable="1" type="FunctionStringCallback"/>
        </method>
      </methods>
      <properties>
        <property name="kind" read-only="1" type="DOMString"/>
        <property name="type" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="DataTransferItemList">
      <methods>
        <method name="add" nullable="1" type="DataTransferItem">
          <param name="data" type="File"/>
        </method>
        <method name="clear" type="void"/>
        <method getter="1" name="item" type="File">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="remove" type="void">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="DeferredPermissionRequest">
      <methods>
        <method name="allow" type="void"/>
        <method name="deny" type="void"/>
      </methods>
      <properties>
        <property name="id" read-only="1" type="unsigned long"/>
        <property name="type" read-only="1" type="MSWebViewPermissionType"/>
        <property name="uri" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="DelayNode">
      <properties>
        <property name="delayTime" read-only="1" type="AudioParam"/>
      </properties>
    </interface>
    <interface extends="Object" name="DeviceAcceleration">
      <properties>
        <property name="x" nullable="1" read-only="1" type="double"/>
        <property name="y" nullable="1" read-only="1" type="double"/>
        <property name="z" nullable="1" read-only="1" type="double"/>
      </properties>
    </interface>
    <interface extends="Event" name="DeviceMotionEvent">
      <methods>
        <method name="initDeviceMotionEvent" type="void">
          <param name="type" type="DOMString"/>
          <param name="bubbles" type="boolean"/>
          <param name="cancelable" type="boolean"/>
          <param name="acceleration" nullable="1" type="DeviceAccelerationDict"/>
          <param name="accelerationIncludingGravity" nullable="1" type="DeviceAccelerationDict"/>
          <param name="rotationRate" nullable="1" type="DeviceRotationRateDict"/>
          <param name="interval" nullable="1" type="double"/>
        </method>
      </methods>
      <properties>
        <property name="acceleration" nullable="1" read-only="1" type="DeviceAcceleration"/>
        <property name="accelerationIncludingGravity" nullable="1" read-only="1" type="DeviceAcceleration"/>
        <property name="interval" nullable="1" read-only="1" type="double"/>
        <property name="rotationRate" nullable="1" read-only="1" type="DeviceRotationRate"/>
      </properties>
    </interface>
    <interface extends="Event" name="DeviceOrientationEvent">
      <methods>
        <method name="initDeviceOrientationEvent" type="void">
          <param name="type" type="DOMString"/>
          <param name="bubbles" type="boolean"/>
          <param name="cancelable" type="boolean"/>
          <param name="alpha" nullable="1" type="double"/>
          <param name="beta" nullable="1" type="double"/>
          <param name="gamma" nullable="1" type="double"/>
          <param name="absolute" type="boolean"/>
        </method>
      </methods>
      <properties>
        <property name="absolute" read-only="1" type="boolean"/>
        <property name="alpha" nullable="1" read-only="1" type="double"/>
        <property name="beta" nullable="1" read-only="1" type="double"/>
        <property name="gamma" nullable="1" read-only="1" type="double"/>
      </properties>
    </interface>
    <interface extends="Object" name="DeviceRotationRate">
      <properties>
        <property name="alpha" nullable="1" read-only="1" type="double"/>
        <property name="beta" nullable="1" read-only="1" type="double"/>
        <property name="gamma" nullable="1" read-only="1" type="double"/>
      </properties>
    </interface>
    <interface extends="Node" name="Document">
      <anonymous-methods>
        <method getter="1" type="(Window or Element or HTMLCollection)">
          <param name="name" type="DOMString"/>
        </method>
      </anonymous-methods>
      <events>
        <event bubbles="1" dispatch="sync" follows="readystatechange" name="DOMContentLoaded" precedes="load" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="readystatechange" precedes="load DOMContentLoaded" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="stop" specs="none" type="Event"/>
        <event dispatch="async" name="visibilitychanged" specs="PageVis" type="Event"/>
        <event dispatch="async" name="MSManipulationStateChanged" specs="none" tags="IEOnly NotOnWin7" type="MSManipulationEvent"/>
        <event dispatch="sync" name="MSContentZoom" specs="none" tags="IEOnly" type="UIEvent"/>
        <event aliases="webkitfullscreenchange" bubbles="1" dispatch="async" name="fullscreenchange" specs="FullScr" tags="IEOnly" type="Event"/>
        <event aliases="webkitfullscreenerror" bubbles="1" dispatch="async" name="fullscreenerror" specs="FullScr" tags="IEOnly" type="Event"/>
        <event dispatch="sync" name="mssitepinned" specs="PinSite" tags="IEOnly" type="Event"/>
        <event dispatch="sync" name="mssitemodejumplistitemremoved" specs="PinSite" tags="IEOnly" type="MSSiteModeEvent"/>
        <event dispatch="sync" name="msthumbnailclick" specs="PinSite" tags="IEOnly" type="MSSiteModeEvent"/>
        <event bubbles="1" dispatch="sync" follows="storage" name="storagecommit" specs="none" tags="IEOnly" type="StorageEvent"/>
      </events>
      <implements>GlobalEventHandlers</implements>
      <implements>NodeSelector</implements>
      <implements>DocumentEvent</implements>
      <methods>
        <method name="adoptNode" tags="TreeMutation" type="Node">
          <param name="source" type="Node"/>
        </method>
        <method name="captureEvents" type="void"/>
        <method name="clear" tags="TreeMutation" type="void"/>
        <method name="close" tags="Parsing" type="void"/>
        <method name="createAttribute" tags="TreeMutation" type="Attr">
          <param name="name" type="DOMString"/>
        </method>
        <method name="createAttributeNS" tags="Namespaces" type="Attr">
          <param name="namespaceURI" nullable="1" type="DOMString"/>
          <param name="qualifiedName" type="DOMString"/>
        </method>
        <method name="createCDATASection" tags="TreeMutation" type="CDATASection">
          <param name="data" type="DOMString"/>
        </method>
        <method name="createComment" tags="TreeMutation" type="Comment">
          <param name="data" type="DOMString"/>
        </method>
        <method name="createDocumentFragment" tags="TreeMutation" type="DocumentFragment"/>
        <method name="createElement" tags="TreeMutation" type="Element">
          <param name="tagName" type="DOMString"/>
        </method>
        <method name="createElementNS" tags="Namespaces" type="Element">
          <param name="namespaceURI" nullable="1" type="DOMString"/>
          <param name="qualifiedName" type="DOMString"/>
        </method>
        <method name="createExpression" type="XPathExpression">
          <param name="expression" type="DOMString"/>
          <param name="resolver" type="XPathNSResolver"/>
        </method>
        <method name="createNSResolver" type="XPathNSResolver">
          <param name="nodeResolver" type="Node"/>
        </method>
        <method name="createNodeIterator" tags="TreeNavigation" type="NodeIterator">
          <param name="root" type="Node"/>
          <param default="0xFFFFFFFF" name="whatToShow" optional="1" type="unsigned long"/>
          <param default="null" name="filter" optional="1" type="NodeFilter"/>
          <param default="false" name="entityReferenceExpansion" optional="1" type="boolean"/>
        </method>
        <method name="createProcessingInstruction" tags="TreeMutation" type="ProcessingInstruction">
          <param name="target" type="DOMString"/>
          <param name="data" type="DOMString"/>
        </method>
        <method name="createRange" tags="Editing" type="Range"/>
        <method name="createTextNode" tags="TreeMutation" type="Text">
          <param name="data" type="DOMString"/>
        </method>
        <method name="createTouch" type="Touch">
          <param name="view" type="WindowProxy"/>
          <param name="target" type="EventTarget"/>
          <param name="identifier" type="long"/>
          <param name="pageX" type="long"/>
          <param name="pageY" type="long"/>
          <param name="screenX" type="long"/>
          <param name="screenY" type="long"/>
        </method>
        <method name="createTouchList" type="TouchList">
          <param name="touches" type="Touch" variadic="1"/>
        </method>
        <method name="createTreeWalker" tags="TreeNavigation" type="TreeWalker">
          <param name="root" type="Node"/>
          <param default="0xFFFFFFFF" name="whatToShow" optional="1" type="unsigned long"/>
          <param default="null" name="filter" optional="1" type="NodeFilter"/>
          <param default="false" name="entityReferenceExpansion" optional="1" type="boolean"/>
        </method>
        <method name="elementFromPoint" tags="CSSOM" type="Element">
          <param name="x" type="long"/>
          <param name="y" type="long"/>
        </method>
        <method name="evaluate" type="XPathResult">
          <param name="expression" type="DOMString"/>
          <param name="contextNode" type="Node"/>
          <param name="resolver" type="XPathNSResolver"/>
          <param name="type" type="unsigned short"/>
          <param name="result" type="XPathResult"/>
        </method>
        <method name="execCommand" tags="Editing" type="boolean">
          <param name="commandId" type="DOMString"/>
          <param default="false" name="showUI" optional="1" type="boolean"/>
          <param name="value" optional="1" type="any"/>
        </method>
        <method name="execCommandShowHelp" tags="Editing" type="boolean">
          <param name="commandId" type="DOMString"/>
        </method>
        <method name="exitFullscreen" tags="Fullscreen" type="void"/>
        <method name="exitPointerLock" tags="PointerLock" type="void"/>
        <method deprecated="1" name="focus" tags="Editing" type="void"/>
        <method name="getElementById" tags="TreeNavigation" type="Element">
          <param name="elementId" type="DOMString"/>
        </method>
        <method name="getElementsByClassName" tags="TreeNavigation" type="NodeList">
          <param name="classNames" type="DOMString"/>
        </method>
        <method name="getElementsByName" tags="TreeNavigation" type="NodeList">
          <param name="elementName" type="DOMString"/>
        </method>
        <method name="getElementsByTagName" tags="TreeNavigation" type="NodeList">
          <param name="tagname" type="DOMString"/>
        </method>
        <method name="getElementsByTagNameNS" tags="Namespaces" type="NodeList">
          <param name="namespaceURI" nullable="1" type="DOMString"/>
          <param name="localName" type="DOMString"/>
        </method>
        <method name="getSelection" tags="Editing" type="Selection"/>
        <method name="hasFocus" tags="Editing" type="boolean"/>
        <method name="importNode" tags="TreeMutation" type="Node">
          <param name="importedNode" type="Node"/>
          <param name="deep" type="boolean"/>
        </method>
        <method name="msElementsFromPoint" tags="CSSOM" type="NodeList">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="msElementsFromRect" tags="CSSOM" type="NodeList">
          <param name="left" type="float"/>
          <param name="top" type="float"/>
          <param name="width" type="float"/>
          <param name="height" type="float"/>
        </method>
        <method name="msGetPrintDocumentForNamedFlow" tags="Printing" type="Document">
          <param name="flowName" type="DOMString"/>
        </method>
        <method name="msSetPrintDocumentUriForNamedFlow" tags="Printing" type="void">
          <param name="flowName" type="DOMString"/>
          <param name="uri" type="DOMString"/>
        </method>
        <method name="open" tags="Parsing" type="(Document or Window)">
          <param default="&quot;text/html&quot;" name="url" optional="1" type="DOMString"/>
          <param name="name" optional="1" type="DOMString"/>
          <param name="features" optional="1" type="DOMString"/>
          <param name="replace" optional="1" type="boolean"/>
        </method>
        <method name="queryCommandEnabled" tags="Editing" type="boolean">
          <param name="commandId" type="DOMString"/>
        </method>
        <method name="queryCommandIndeterm" tags="Editing" type="boolean">
          <param name="commandId" type="DOMString"/>
        </method>
        <method name="queryCommandState" tags="Editing" type="boolean">
          <param name="commandId" type="DOMString"/>
        </method>
        <method name="queryCommandSupported" tags="Editing" type="boolean">
          <param name="commandId" type="DOMString"/>
        </method>
        <method name="queryCommandText" tags="Editing" type="DOMString">
          <param name="commandId" type="DOMString"/>
        </method>
        <method name="queryCommandValue" tags="Editing" type="DOMString">
          <param name="commandId" type="DOMString"/>
        </method>
        <method name="releaseEvents" type="void"/>
        <method name="updateSettings" tags="Printing" type="void"/>
        <method name="webkitCancelFullScreen" tags="Fullscreen" type="void"/>
        <method name="webkitExitFullscreen" tags="Fullscreen" type="void"/>
        <method name="write" tags="TreeMutation" type="void">
          <param name="content" type="DOMString" variadic="1"/>
        </method>
        <method name="writeln" tags="TreeMutation" type="void">
          <param name="content" type="DOMString" variadic="1"/>
        </method>
      </methods>
      <properties>
        <property name="URL" property-descriptor-not-configurable="1" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="URLUnencoded" property-descriptor-not-configurable="1" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="activeElement" read-only="1" tags="Editing" type="Element"/>
        <property name="alinkColor" tags="CSSOM" type="DOMString"/>
        <property name="all" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property name="anchors" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property name="applets" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property name="bgColor" tags="CSSOM" type="DOMString"/>
        <property name="body" tags="TreeNavigation" type="HTMLElement"/>
        <property name="characterSet" read-only="1" tags="Parsing" type="DOMString"/>
        <property name="charset" tags="Parsing" type="DOMString"/>
        <property name="compatMode" read-only="1" tags="Versioning" type="DOMString"/>
        <property name="cookie" tags="NetworkAccess" type="DOMString"/>
        <property name="defaultCharset" read-only="1" tags="Parsing" type="DOMString"/>
        <property name="defaultView" read-only="1" tags="TreeNavigation" type="Window"/>
        <property name="designMode" tags="Editing" type="DOMString"/>
        <property name="dir" tags="CSSOM" type="DOMString"/>
        <property name="doctype" read-only="1" tags="TreeNavigation" type="DocumentType"/>
        <property name="documentElement" read-only="1" tags="TreeNavigation" type="Element"/>
        <property name="domain" property-descriptor-not-configurable="1" type="DOMString"/>
        <property name="embeds" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property name="fgColor" tags="CSSOM" type="DOMString"/>
        <property name="forms" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property name="fullscreenElement" nullable="1" read-only="1" tags="Fullscreen" type="Element"/>
        <property name="fullscreenEnabled" read-only="1" tags="Fullscreen" type="boolean"/>
        <property name="head" read-only="1" tags="TreeNavigation" type="HTMLHeadElement"/>
        <property name="hidden" read-only="1" tags="Performance" type="boolean"/>
        <property name="images" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property name="implementation" read-only="1" tags="TreeNavigation" type="DOMImplementation"/>
        <property name="inputEncoding" nullable="1" read-only="1" tags="Parsing" type="DOMString"/>
        <property name="lastModified" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="linkColor" tags="CSSOM" type="DOMString"/>
        <property name="links" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property name="location" put-forwards="href" read-only="1" tags="NetworkAccess" type="Location"/>
        <property deprecated="1" name="media" tags="Printing" type="DOMString"/>
        <property name="msCSSOMElementFloatMetrics" tags="CSSOM" type="boolean"/>
        <property name="msCapsLockWarningOff" tags="Editing" type="boolean"/>
        <property name="msHidden" read-only="1" tags="Performance" type="boolean"/>
        <property name="msVisibilityState" read-only="1" tags="Performance" type="DOMString"/>
        <property event-handler="abort" name="onabort" type="EventHandler"/>
        <property event-handler="activate" name="onactivate" type="EventHandler"/>
        <property event-handler="beforeactivate" name="onbeforeactivate" type="EventHandler"/>
        <property event-handler="beforedeactivate" name="onbeforedeactivate" type="EventHandler"/>
        <property event-handler="blur" name="onblur" type="EventHandler"/>
        <property event-handler="canplay" name="oncanplay" type="EventHandler"/>
        <property event-handler="canplaythrough" name="oncanplaythrough" type="EventHandler"/>
        <property event-handler="change" name="onchange" type="EventHandler"/>
        <property event-handler="click" name="onclick" type="EventHandler"/>
        <property event-handler="contextmenu" name="oncontextmenu" type="EventHandler"/>
        <property event-handler="dblclick" name="ondblclick" type="EventHandler"/>
        <property event-handler="deactivate" name="ondeactivate" type="EventHandler"/>
        <property event-handler="drag" name="ondrag" type="EventHandler"/>
        <property event-handler="dragend" name="ondragend" type="EventHandler"/>
        <property event-handler="dragenter" name="ondragenter" type="EventHandler"/>
        <property event-handler="dragleave" name="ondragleave" type="EventHandler"/>
        <property event-handler="dragover" name="ondragover" type="EventHandler"/>
        <property event-handler="dragstart" name="ondragstart" type="EventHandler"/>
        <property event-handler="drop" name="ondrop" type="EventHandler"/>
        <property event-handler="durationchange" name="ondurationchange" type="EventHandler"/>
        <property event-handler="emptied" name="onemptied" type="EventHandler"/>
        <property event-handler="ended" name="onended" type="EventHandler"/>
        <property event-handler="error" name="onerror" type="EventHandler"/>
        <property event-handler="focus" name="onfocus" type="EventHandler"/>
        <property event-handler="fullscreenchange" name="onfullscreenchange" type="EventHandler"/>
        <property event-handler="fullscreenerror" name="onfullscreenerror" type="EventHandler"/>
        <property event-handler="input" name="oninput" type="EventHandler"/>
        <property event-handler="keydown" name="onkeydown" type="EventHandler"/>
        <property event-handler="keypress" name="onkeypress" type="EventHandler"/>
        <property event-handler="keyup" name="onkeyup" type="EventHandler"/>
        <property event-handler="load" name="onload" type="EventHandler"/>
        <property event-handler="loadeddata" name="onloadeddata" type="EventHandler"/>
        <property event-handler="loadedmetadata" name="onloadedmetadata" type="EventHandler"/>
        <property event-handler="loadstart" name="onloadstart" type="EventHandler"/>
        <property event-handler="mousedown" name="onmousedown" type="EventHandler"/>
        <property event-handler="mousemove" name="onmousemove" type="EventHandler"/>
        <property event-handler="mouseout" name="onmouseout" type="EventHandler"/>
        <property event-handler="mouseover" name="onmouseover" type="EventHandler"/>
        <property event-handler="mouseup" name="onmouseup" type="EventHandler"/>
        <property event-handler="mousewheel" name="onmousewheel" type="EventHandler"/>
        <property event-handler="MSContentZoom" name="onmscontentzoom" type="EventHandler"/>
        <property event-handler="MSGestureChange" name="onmsgesturechange" type="EventHandler"/>
        <property event-handler="MSGestureDoubleTap" name="onmsgesturedoubletap" type="EventHandler"/>
        <property event-handler="MSGestureEnd" name="onmsgestureend" type="EventHandler"/>
        <property event-handler="MSGestureHold" name="onmsgesturehold" type="EventHandler"/>
        <property event-handler="MSGestureStart" name="onmsgesturestart" type="EventHandler"/>
        <property event-handler="MSGestureTap" name="onmsgesturetap" type="EventHandler"/>
        <property event-handler="MSInertiaStart" name="onmsinertiastart" type="EventHandler"/>
        <property event-handler="MSManipulationStateChanged" name="onmsmanipulationstatechanged" type="EventHandler"/>
        <property event-handler="MSPointerCancel" name="onmspointercancel" type="EventHandler"/>
        <property event-handler="MSPointerDown" name="onmspointerdown" type="EventHandler"/>
        <property content-attribute="onmspointerenter" content-attribute-value-syntax="javascript" event-handler="MSPointerEnter" name="onmspointerenter" type="EventHandler"/>
        <property content-attribute="onmspointerleave" content-attribute-value-syntax="javascript" event-handler="MSPointerLeave" name="onmspointerleave" type="EventHandler"/>
        <property event-handler="MSPointerMove" name="onmspointermove" type="EventHandler"/>
        <property event-handler="MSPointerOut" name="onmspointerout" type="EventHandler"/>
        <property event-handler="MSPointerOver" name="onmspointerover" type="EventHandler"/>
        <property event-handler="MSPointerUp" name="onmspointerup" type="EventHandler"/>
        <property event-handler="mssitemodejumplistitemremoved" name="onmssitemodejumplistitemremoved" type="EventHandler"/>
        <property event-handler="msthumbnailclick" name="onmsthumbnailclick" type="EventHandler"/>
        <property event-handler="pause" name="onpause" type="EventHandler"/>
        <property event-handler="play" name="onplay" type="EventHandler"/>
        <property event-handler="playing" name="onplaying" type="EventHandler"/>
        <property event-handler="pointerlockchange" name="onpointerlockchange" type="EventHandler"/>
        <property event-handler="pointerlockerror" name="onpointerlockerror" type="EventHandler"/>
        <property event-handler="progress" name="onprogress" type="EventHandler"/>
        <property event-handler="ratechange" name="onratechange" type="EventHandler"/>
        <property event-handler="readystatechange" lenient-this="1" name="onreadystatechange" tags="TreeIdentity" type="EventHandler"/>
        <property event-handler="reset" name="onreset" type="EventHandler"/>
        <property event-handler="scroll" name="onscroll" type="EventHandler"/>
        <property event-handler="seeked" name="onseeked" type="EventHandler"/>
        <property event-handler="seeking" name="onseeking" type="EventHandler"/>
        <property event-handler="select" name="onselect" type="EventHandler"/>
        <property event-handler="selectstart" name="onselectstart" type="EventHandler"/>
        <property event-handler="stalled" name="onstalled" type="EventHandler"/>
        <property event-handler="stop" name="onstop" type="EventHandler"/>
        <property event-handler="storagecommit" name="onstoragecommit" type="EventHandler"/>
        <property event-handler="submit" name="onsubmit" type="EventHandler"/>
        <property event-handler="suspend" name="onsuspend" type="EventHandler"/>
        <property event-handler="timeupdate" name="ontimeupdate" type="EventHandler"/>
        <property event-handler="touchcancel" name="ontouchcancel" type="EventHandler"/>
        <property event-handler="touchend" name="ontouchend" type="EventHandler"/>
        <property event-handler="touchmove" name="ontouchmove" type="EventHandler"/>
        <property event-handler="touchstart" name="ontouchstart" type="EventHandler"/>
        <property event-handler="volumechange" name="onvolumechange" type="EventHandler"/>
        <property event-handler="waiting" name="onwaiting" type="EventHandler"/>
        <property event-handler="webkitfullscreenchange" name="onwebkitfullscreenchange" type="EventHandler"/>
        <property event-handler="webkitfullscreenerror" name="onwebkitfullscreenerror" type="EventHandler"/>
        <property name="plugins" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property name="pointerLockElement" read-only="1" tags="PointerLock" type="Element"/>
        <property name="readyState" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property name="referrer" property-descriptor-not-configurable="1" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="rootElement" read-only="1" type="SVGSVGElement"/>
        <property name="scripts" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property deprecated="1" name="security" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property name="styleSheets" read-only="1" tags="CSSOM" type="StyleSheetList"/>
        <property name="title" tags="TreeIdentity" type="DOMString"/>
        <property name="uniqueID" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property name="visibilityState" read-only="1" tags="Performance" type="DOMString"/>
        <property name="vlinkColor" tags="CSSOM" type="DOMString"/>
        <property name="webkitCurrentFullScreenElement" nullable="1" read-only="1" tags="Fullscreen" type="Element"/>
        <property name="webkitFullscreenElement" nullable="1" read-only="1" tags="Fullscreen" type="Element"/>
        <property name="webkitFullscreenEnabled" read-only="1" tags="Fullscreen" type="boolean"/>
        <property name="webkitIsFullScreen" read-only="1" tags="Fullscreen" type="boolean"/>
        <property name="xmlEncoding" nullable="1" read-only="1" tags="Parsing" type="DOMString"/>
        <property name="xmlStandalone" tags="Parsing" type="boolean"/>
        <property name="xmlVersion" nullable="1" tags="Parsing" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Node" name="DocumentFragment">
      <implements>NodeSelector</implements>
    </interface>
    <interface extends="Node" name="DocumentType">
      <implements>ChildNode</implements>
      <properties>
        <property name="entities" read-only="1" tags="TreeNavigation" type="NamedNodeMap"/>
        <property name="internalSubset" nullable="1" read-only="1" tags="TreeNavigation" type="DOMString"/>
        <property name="name" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property name="notations" read-only="1" tags="TreeNavigation" type="NamedNodeMap"/>
        <property name="publicId" nullable="1" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property name="systemId" nullable="1" read-only="1" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="MouseEvent" name="DragEvent">
      <methods>
        <method name="initDragEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="detailArg" type="long"/>
          <param name="screenXArg" type="long"/>
          <param name="screenYArg" type="long"/>
          <param name="clientXArg" type="long"/>
          <param name="clientYArg" type="long"/>
          <param name="ctrlKeyArg" type="boolean"/>
          <param name="altKeyArg" type="boolean"/>
          <param name="shiftKeyArg" type="boolean"/>
          <param name="metaKeyArg" type="boolean"/>
          <param name="buttonArg" type="unsigned short"/>
          <param name="relatedTargetArg" type="EventTarget"/>
          <param name="dataTransferArg" type="DataTransfer"/>
        </method>
        <method name="msConvertURL" type="void">
          <param name="file" type="File"/>
          <param name="targetType" type="DOMString"/>
          <param name="targetURL" optional="1" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="dataTransfer" read-only="1" tags="Events" type="DataTransfer"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="DynamicsCompressorNode">
      <properties>
        <property name="attack" read-only="1" type="AudioParam"/>
        <property name="knee" read-only="1" type="AudioParam"/>
        <property name="ratio" read-only="1" type="AudioParam"/>
        <property name="reduction" read-only="1" type="AudioParam"/>
        <property name="release" read-only="1" type="AudioParam"/>
        <property name="threshold" read-only="1" type="AudioParam"/>
      </properties>
    </interface>
    <interface extends="Object" name="EXT_texture_filter_anisotropic">
      <constants>
        <constant name="MAX_TEXTURE_MAX_ANISOTROPY_EXT" type="unsigned long" type-original="GLenum" value="0x84FF"/>
        <constant name="TEXTURE_MAX_ANISOTROPY_EXT" type="unsigned long" type-original="GLenum" value="0x84FE"/>
      </constants>
    </interface>
    <interface extends="Node" name="Element">
      <anonymous-content-attributes>
        <parsedattribute name="title"/>
        <parsedattribute name="xml:id"/>
        <parsedattribute name="xml:base" value-syntax="url"/>
        <parsedattribute name="xml:lang"/>
        <parsedattribute name="aria-activedescendant" value-syntax="id_ref"/>
        <parsedattribute enum-values="false true" name="aria-atomic" value-syntax="enum"/>
        <parsedattribute enum-values="none inline list both" name="aria-autocomplete" value-syntax="enum"/>
        <parsedattribute enum-values="false true" name="aria-busy" value-syntax="enum"/>
        <parsedattribute enum-values="true false mixed" name="aria-checked" value-syntax="enum"/>
        <parsedattribute name="aria-controls" value-syntax="space_separated_id_refs"/>
        <parsedattribute name="aria-describedby" value-syntax="space_separated_id_refs"/>
        <parsedattribute enum-values="false true" name="aria-disabled" value-syntax="enum"/>
        <parsedattribute enum-values="none copy move link execute popup" name="aria-dropeffect" value-syntax="space_separated_enums"/>
        <parsedattribute enum-values="undefined true false" name="aria-expanded" value-syntax="enum"/>
        <parsedattribute name="aria-flowto" value-syntax="space_separated_id_refs"/>
        <parsedattribute enum-values="undefined true false" name="aria-grabbed" value-syntax="enum"/>
        <parsedattribute enum-values="false true" name="aria-haspopup" value-syntax="enum"/>
        <parsedattribute enum-values="false true" name="aria-hidden" value-syntax="enum"/>
        <parsedattribute enum-values="false grammar spelling true" name="aria-invalid" value-syntax="enum"/>
        <parsedattribute name="aria-label"/>
        <parsedattribute name="aria-labelledby" value-syntax="space_separated_id_refs"/>
        <parsedattribute name="aria-level" value-syntax="non_negative_integer"/>
        <parsedattribute enum-values="off polite assertive" name="aria-live" value-syntax="enum"/>
        <parsedattribute enum-values="false true" name="aria-multiline" value-syntax="enum"/>
        <parsedattribute enum-values="false true" name="aria-multiselectable" value-syntax="enum"/>
        <parsedattribute enum-values="horizontal vertical" name="aria-orientation" value-syntax="enum"/>
        <parsedattribute name="aria-owns" value-syntax="space_separated_id_refs"/>
        <parsedattribute name="aria-posinset" value-syntax="non_negative_integer"/>
        <parsedattribute enum-values="true false mixed" name="aria-pressed" value-syntax="enum"/>
        <parsedattribute enum-values="false true" name="aria-readonly" value-syntax="enum"/>
        <parsedattribute enum-values="additions removals text all" name="aria-relevant" value-syntax="space_separated_enums"/>
        <parsedattribute enum-values="false true" name="aria-required" value-syntax="enum"/>
        <parsedattribute enum-values="undefined true false" name="aria-selected" value-syntax="enum"/>
        <parsedattribute name="aria-setsize" value-syntax="non_negative_integer"/>
        <parsedattribute enum-values="none ascending descending other" name="aria-sort" value-syntax="enum"/>
        <parsedattribute name="aria-valuemax" value-syntax="floating_point_number"/>
        <parsedattribute name="aria-valuemin" value-syntax="floating_point_number"/>
        <parsedattribute name="aria-valuenow" value-syntax="floating_point_number"/>
        <parsedattribute name="x-ms-aria-flowfrom" value-syntax="space_separated_id_refs"/>
        <parsedattribute enum-values="alert alertdialog application article banner button checkbox columnheader combobox complementary contentinfo definition dialog directory document form grid gridcell group heading img link list listbox listitem log main marquee math menu menubar menuitem menuitemcheckbox menuitemradio navigation note option presentation progressbar radio radiogroup region row rowgroup rowheader scrollbar search separator slider spinbutton status tab tablist tabpanel textbox timer toolbar tooltip tree treegrid treeitem" name="role" value-syntax="enum"/>
      </anonymous-content-attributes>
      <events>
        <event bubbles="1" cancelable="1" dispatch="sync" name="command" specs="none" tags="IEOnly" type="CommandEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="ariarequest" specs="none" tags="IEOnly" type="AriaRequestEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="mouseup pointerup MSPointerUp" name="click" precedes="dblclick" specs="DOM3E" type="MouseEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="click" name="dblclick" specs="DOM3E" type="MouseEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="mousemove" specs="DOM3E" type="MouseEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="mouseover" precedes="mouseout" specs="DOM3E" type="MouseEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="mouseover" name="mouseout" specs="DOM3E" type="MouseEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="mousedown" precedes="mouseup" specs="DOM3E" type="MouseEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="mousedown" name="mouseup" precedes="click" specs="DOM3E" type="MouseEvent"/>
        <event dispatch="sync" name="mouseenter" precedes="mouseleave" specs="DOM3E" type="MouseEvent"/>
        <event dispatch="sync" follows="mouseenter" name="mouseleave" specs="DOM3E" type="MouseEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="MSHoldVisual" specs="none" tags="IEOnly" type="MouseEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="wheel" specs="DOM3E" type="WheelEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="mousewheel" specs="none" type="MouseWheelEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="MSPointerDown" precedes="MSPointerMove" specs="Pointer" tags="IEOnly" type="MSPointerEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="MSPointerDown" name="MSPointerMove" precedes="MSPointerUp MSPointerCancel" specs="Pointer" tags="IEOnly" type="MSPointerEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="MSPointerMove" name="MSPointerUp" precedes="click" specs="Pointer" tags="IEOnly" type="MSPointerEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="MSPointerOver" precedes="MSPointerOut" specs="Pointer" tags="IEOnly" type="MSPointerEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="MSPointerOver" name="MSPointerOut" specs="Pointer" tags="IEOnly" type="MSPointerEvent"/>
        <event bubbles="1" dispatch="sync" follows="MSPointerMove" name="MSPointerCancel" specs="Pointer" tags="IEOnly" type="MSPointerEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="MSPointerHover" specs="none" tags="IEOnly" type="MSPointerEvent"/>
        <event bubbles="1" dispatch="sync" name="MSGotPointerCapture" precedes="MSLostPointerCapture" specs="Pointer" tags="IEOnly" type="MSPointerEvent"/>
        <event bubbles="1" dispatch="sync" follows="MSGotPointerCapture" name="MSLostPointerCapture" specs="Pointer" tags="IEOnly" type="MSPointerEvent"/>
        <event dispatch="sync" name="MSPointerEnter" precedes="MSPointerLeave" specs="Pointer" tags="IEOnly" type="MSPointerEvent"/>
        <event dispatch="sync" follows="MSPointerEnter" name="MSPointerLeave" specs="Pointer" tags="IEOnly" type="MSPointerEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="MSGestureStart" precedes="MSGestureChange" specs="none" tags="IEOnly NotOnWin7" type="MSGestureEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="MSGestureStart" name="MSGestureChange" precedes="MSInertiaStart MSGestureEnd" specs="none" tags="IEOnly NotOnWin7" type="MSGestureEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="MSGestureChange" name="MSGestureEnd" specs="none" tags="IEOnly NotOnWin7" type="MSGestureEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="MSGestureHold" specs="none" tags="IEOnly NotOnWin7" type="MSGestureEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="MSGestureTap" specs="none" tags="IEOnly NotOnWin7" type="MSGestureEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="MSGestureDoubleTap" specs="none" tags="IEOnly NotOnWin7" type="MSGestureEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="MSGestureChange" name="MSInertiaStart" specs="none" tags="IEOnly NotOnWin7" type="MSGestureEvent"/>
        <event aliases="MSPointerEnter" dispatch="sync" name="pointerenter" precedes="pointerleave" specs="Pointer" type="PointerEvent"/>
        <event aliases="MSPointerLeave" dispatch="sync" follows="pointerenter" name="pointerleave" specs="Pointer" type="PointerEvent"/>
        <event aliases="MSPointerDown" bubbles="1" cancelable="1" dispatch="sync" name="pointerdown" precedes="pointermove" specs="Pointer" type="PointerEvent"/>
        <event aliases="MSPointerMove" bubbles="1" cancelable="1" dispatch="sync" follows="pointerdown" name="pointermove" precedes="pointerup pointercancel" specs="Pointer" type="PointerEvent"/>
        <event aliases="MSPointerUp" bubbles="1" cancelable="1" dispatch="sync" follows="pointermove" name="pointerup" precedes="click" specs="Pointer" type="PointerEvent"/>
        <event aliases="MSPointerOver" bubbles="1" cancelable="1" dispatch="sync" name="pointerover" precedes="pointerout" specs="Pointer" type="PointerEvent"/>
        <event aliases="MSPointerOut" bubbles="1" cancelable="1" dispatch="sync" follows="pointerover" name="pointerout" specs="Pointer" type="PointerEvent"/>
        <event aliases="MSPointerCancel" bubbles="1" dispatch="sync" follows="pointermove" name="pointercancel" specs="Pointer" type="PointerEvent"/>
        <event aliases="MSGotPointerCapture" bubbles="1" dispatch="sync" name="gotpointercapture" precedes="lostpointercapture" specs="Pointer" type="PointerEvent"/>
        <event aliases="MSLostPointerCapture" bubbles="1" dispatch="sync" follows="gotpointercapture" name="lostpointercapture" specs="Pointer" type="PointerEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="contextmenu" specs="HTML5" type="PointerEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="touchstart" precedes="touchmove" specs="Touch" tags="WinPhoneOnly" type="TouchEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="touchmove" name="touchend" specs="Touch" tags="WinPhoneOnly" type="TouchEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="touchstart" name="touchmove" precedes="touchend touchcancel" specs="Touch" tags="WinPhoneOnly" type="TouchEvent"/>
        <event bubbles="1" dispatch="sync" follows="touchmove" name="touchcancel" specs="Touch" tags="WinPhoneOnly" type="TouchEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="selectstart" precedes="select" specs="none" tags="IEOnly" type="Event"/>
        <event bubbles="1" dispatch="sync" follows="selectstart" name="select" specs="DOM3E" type="UIEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="mscontrolselect" specs="none" tags="IEOnly" type="UIEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="mscontrolresizestart" precedes="mscontrolresizeend" specs="none" tags="IEOnly" type="UIEvent"/>
        <event bubbles="1" dispatch="sync" follows="mscontrolresizestart" name="mscontrolresizeend" specs="none" tags="IEOnly" type="UIEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="msbeforeeditfocus" specs="none" tags="IEOnly" type="UIEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="keydown keypress" name="keyup" specs="DOM3E" type="KeyboardEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="keydown" precedes="keyup keypress" specs="DOM3E" type="KeyboardEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="keydown" name="keypress" precedes="keyup" specs="DOM3E" type="KeyboardEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="textInput" specs="none" type="TextEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="compositionstart" precedes="compositionupdate compositionend" specs="DOM3E" type="CompositionEvent"/>
        <event bubbles="1" dispatch="sync" follows="compositionstart" name="compositionupdate" precedes="compositionend" specs="DOM3E" type="CompositionEvent"/>
        <event bubbles="1" dispatch="sync" follows="compositionstart compositionupdate" name="compositionend" specs="DOM3E" type="CompositionEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="dragstart" name="drag" precedes="dragend" specs="HTML5.1" type="DragEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="dragstart" precedes="drag" specs="HTML5.1" type="DragEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="drag" name="dragenter" precedes="dragover drop" specs="HTML5.1" type="DragEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="dragenter" name="dragover" precedes="dragleave drop" specs="HTML5.1" type="DragEvent"/>
        <event bubbles="1" dispatch="sync" follows="dragover" name="dragleave" precedes="drag" specs="HTML5.1" type="DragEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="drag" name="dragend" specs="HTML5.1" type="DragEvent"/>
        <event bubbles="1" dispatch="sync" follows="dragenter dragover" name="drop" specs="HTML5.1" type="DragEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="beforecopy" name="copy" specs="none" type="DragEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="beforecut" name="cut" specs="none" type="DragEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="beforepaste" name="paste" specs="none" type="DragEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="beforecopy" precedes="copy" specs="none" tags="IEOnly" type="DragEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="beforecut" precedes="cut" specs="none" tags="IEOnly" type="DragEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="beforepaste" precedes="paste" specs="none" tags="IEOnly" type="DragEvent"/>
        <event dispatch="sync" name="focus" precedes="blur" specs="HTML5" type="FocusEvent"/>
        <event dispatch="sync" follows="focus" name="blur" specs="HTML5" type="FocusEvent"/>
        <event aliases="DOMFocusIn" bubbles="1" dispatch="sync" name="focusin" precedes="focusout" specs="DOM3E" type="FocusEvent"/>
        <event aliases="DOMFocusOut" bubbles="1" dispatch="sync" follows="focusin" name="focusout" specs="DOM3E" type="FocusEvent"/>
        <event bubbles="1" dispatch="sync" follows="beforeactivate" name="activate" precedes="beforedeactivate" specs="none" tags="IEOnly" type="UIEvent"/>
        <event bubbles="1" dispatch="sync" follows="beforedeactivate" name="deactivate" specs="none" tags="IEOnly" type="UIEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="beforeactivate" precedes="activate" specs="none" tags="IEOnly" type="UIEvent"/>
        <event bubbles="1" cancelable="1" dispatch="sync" follows="activate" name="beforedeactivate" precedes="deactivate" specs="none" tags="IEOnly" type="UIEvent"/>
        <event dispatch="sync" name="mselementresize" specs="none" tags="IEOnly" type="Event"/>
        <event dispatch="async" name="scroll" specs="DOM3E" type="UIEvent"/>
        <event dispatch="async" name="MSManipulationStateChanged" specs="none" tags="IEOnly" type="MSManipulationEvent"/>
        <event dispatch="async" name="MSContentZoom" specs="none" tags="IEOnly" type="UIEvent"/>
        <event bubbles="1" dispatch="async" name="MSRegionUpdate" specs="none" tags="IEOnly" type="Event"/>
        <event aliases="MSTransitionStart webkitTransitionStart" bubbles="1" cancelable="1" dispatch="async" name="transitionstart" precedes="transitionend" specs="CSSTran" type="TransitionEvent"/>
        <event aliases="MSTransitionEnd webkitTransitionEnd" bubbles="1" cancelable="1" dispatch="async" follows="transitionstart" name="transitionend" specs="CSSTran" type="TransitionEvent"/>
        <event aliases="MSAnimationStart webkitAnimationStart" bubbles="1" cancelable="1" dispatch="async" name="animationstart" precedes="animationend animationiteration" specs="CSSAnim" type="AnimationEvent"/>
        <event aliases="MSAnimationEnd webkitAnimationEnd" bubbles="1" cancelable="1" dispatch="async" follows="animationstart animationiteration" name="animationend" specs="CSSAnim" type="AnimationEvent"/>
        <event aliases="MSAnimationIteration webkitAnimationIteration" bubbles="1" cancelable="1" dispatch="async" follows="animationstart" name="animationiteration" precedes="animationend" specs="CSSAnim" type="AnimationEvent"/>
        <event bubbles="1" dispatch="sync" name="DOMAttrModified" specs="DOM3E" type="MutationEvent"/>
        <event bubbles="1" dispatch="sync" name="DOMNodeInserted" specs="DOM3E" type="MutationEvent"/>
        <event bubbles="1" dispatch="sync" name="DOMNodeRemoved" specs="DOM3E" type="MutationEvent"/>
        <event bubbles="1" dispatch="async-and-combine" name="DOMSubtreeModified" specs="DOM3E" type="MutationEvent"/>
      </events>
      <implements>GlobalEventHandlers</implements>
      <implements>ElementTraversal</implements>
      <implements>NodeSelector</implements>
      <implements>ChildNode</implements>
      <methods>
        <method name="getAttribute" nullable="1" tags="TreeNavigation" type="DOMString">
          <param default="&quot;null&quot;" name="name" optional="1" type="DOMString"/>
        </method>
        <method name="getAttributeNS" tags="TreeNavigation" type="DOMString">
          <param name="namespaceURI" treat-null-as="EmptyString" type="DOMString"/>
          <param name="localName" type="DOMString"/>
        </method>
        <method name="getAttributeNode" tags="TreeNavigation" type="Attr">
          <param name="name" type="DOMString"/>
        </method>
        <method name="getAttributeNodeNS" tags="TreeNavigation" type="Attr">
          <param name="namespaceURI" treat-null-as="EmptyString" type="DOMString"/>
          <param name="localName" type="DOMString"/>
        </method>
        <method name="getBoundingClientRect" tags="CSSOM" type="ClientRect"/>
        <method name="getClientRects" tags="CSSOM" type="ClientRectList"/>
        <method name="getElementsByTagName" tags="TreeNavigation" type="NodeList">
          <param name="name" type="DOMString"/>
        </method>
        <method name="getElementsByTagNameNS" tags="TreeNavigation" type="NodeList">
          <param name="namespaceURI" nullable="1" type="DOMString"/>
          <param name="localName" type="DOMString"/>
        </method>
        <method name="hasAttribute" tags="TreeNavigation" type="boolean">
          <param name="name" type="DOMString"/>
        </method>
        <method name="hasAttributeNS" tags="TreeNavigation" type="boolean">
          <param name="namespaceURI" treat-null-as="EmptyString" type="DOMString"/>
          <param name="localName" type="DOMString"/>
        </method>
        <method name="msGetRegionContent" tags="CSSOM" type="MSRangeCollection"/>
        <method name="msGetUntransformedBounds" tags="Editing" type="ClientRect"/>
        <method name="msMatchesSelector" type="boolean">
          <param name="selectors" type="DOMString"/>
        </method>
        <method name="msReleasePointerCapture" tags="Events" type="void">
          <param name="pointerId" type="long"/>
        </method>
        <method name="msSetPointerCapture" tags="Events" type="void">
          <param name="pointerId" type="long"/>
        </method>
        <method name="msZoomTo" type="void">
          <param name="args" type="MsZoomToOptions"/>
        </method>
        <method name="releasePointerCapture" type="void">
          <param name="pointerId" type="long"/>
        </method>
        <method name="removeAttribute" tags="TreeMutation" type="void">
          <param default="&quot;null&quot;" name="name" optional="1" type="DOMString"/>
        </method>
        <method name="removeAttributeNS" tags="TreeMutation" type="void">
          <param name="namespaceURI" treat-null-as="EmptyString" type="DOMString"/>
          <param name="localName" type="DOMString"/>
        </method>
        <method name="removeAttributeNode" tags="TreeMutation" type="Attr">
          <param name="oldAttr" type="Attr"/>
        </method>
        <method name="requestFullscreen" tags="Fullscreen" type="void"/>
        <method name="requestPointerLock" tags="PointerLock" type="void"/>
        <method name="setAttribute" tags="TreeMutation" type="void">
          <param default="&quot;null&quot;" name="name" optional="1" type="DOMString"/>
          <param name="value" optional="1" treat-null-as="EmptyString" type="DOMString"/>
        </method>
        <method name="setAttributeNS" tags="TreeMutation" type="void">
          <param name="namespaceURI" treat-null-as="EmptyString" type="DOMString"/>
          <param name="qualifiedName" type="DOMString"/>
          <param name="value" treat-null-as="EmptyString" type="DOMString"/>
        </method>
        <method name="setAttributeNode" tags="TreeMutation" type="Attr">
          <param name="newAttr" type="Attr"/>
        </method>
        <method name="setAttributeNodeNS" tags="TreeMutation" type="Attr">
          <param name="newAttr" type="Attr"/>
        </method>
        <method name="setPointerCapture" type="void">
          <param name="pointerId" type="long"/>
        </method>
        <method name="webkitMatchesSelector" type="boolean">
          <param name="selectors" type="DOMString"/>
        </method>
        <method name="webkitRequestFullScreen" tags="Fullscreen" type="void"/>
        <method name="webkitRequestFullscreen" tags="Fullscreen" type="void"/>
      </methods>
      <properties>
        <property content-attribute="class" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_tokens" name="classList" read-only="1" tags="TreeIdentity" type="DOMTokenList"/>
        <property name="clientHeight" read-only="1" tags="CSSOM" type="long"/>
        <property name="clientLeft" read-only="1" tags="CSSOM" type="long"/>
        <property name="clientTop" read-only="1" tags="CSSOM" type="long"/>
        <property name="clientWidth" read-only="1" tags="CSSOM" type="long"/>
        <property name="msContentZoomFactor" tags="CSSOM" type="float"/>
        <property name="msRegionOverflow" read-only="1" tags="CSSOM" type="DOMString"/>
        <property event-handler="ariarequest" name="onariarequest" type="EventHandler"/>
        <property event-handler="command" name="oncommand" type="EventHandler"/>
        <property content-attribute="ongotpointercapture" content-attribute-value-syntax="javascript" event-handler="gotpointercapture" name="ongotpointercapture" type="EventHandler"/>
        <property content-attribute="onlostpointercapture" content-attribute-value-syntax="javascript" event-handler="lostpointercapture" name="onlostpointercapture" type="EventHandler"/>
        <property content-attribute="onmsgesturechange" content-attribute-value-syntax="javascript" event-handler="MSGestureChange" name="onmsgesturechange" type="EventHandler"/>
        <property content-attribute="onmsgesturedoubletap" content-attribute-value-syntax="javascript" event-handler="MSGestureDoubleTap" name="onmsgesturedoubletap" type="EventHandler"/>
        <property content-attribute="onmsgestureend" content-attribute-value-syntax="javascript" event-handler="MSGestureEnd" name="onmsgestureend" type="EventHandler"/>
        <property content-attribute="onmsgesturehold" content-attribute-value-syntax="javascript" event-handler="MSGestureHold" name="onmsgesturehold" type="EventHandler"/>
        <property content-attribute="onmsgesturestart" content-attribute-value-syntax="javascript" event-handler="MSGestureStart" name="onmsgesturestart" type="EventHandler"/>
        <property content-attribute="onmsgesturetap" content-attribute-value-syntax="javascript" event-handler="MSGestureTap" name="onmsgesturetap" type="EventHandler"/>
        <property content-attribute="onmsgotpointercapture" content-attribute-value-syntax="javascript" event-handler="MSGotPointerCapture" name="onmsgotpointercapture" type="EventHandler"/>
        <property content-attribute="onmsinertiastart" content-attribute-value-syntax="javascript" event-handler="MSInertiaStart" name="onmsinertiastart" type="EventHandler"/>
        <property content-attribute="onmslostpointercapture" content-attribute-value-syntax="javascript" event-handler="MSLostPointerCapture" name="onmslostpointercapture" type="EventHandler"/>
        <property content-attribute="onmspointercancel" content-attribute-value-syntax="javascript" event-handler="MSPointerCancel" name="onmspointercancel" type="EventHandler"/>
        <property content-attribute="onmspointerdown" content-attribute-value-syntax="javascript" event-handler="MSPointerDown" name="onmspointerdown" type="EventHandler"/>
        <property content-attribute="onmspointerenter" content-attribute-value-syntax="javascript" event-handler="MSPointerEnter" name="onmspointerenter" type="EventHandler"/>
        <property content-attribute="onmspointerleave" content-attribute-value-syntax="javascript" event-handler="MSPointerLeave" name="onmspointerleave" type="EventHandler"/>
        <property content-attribute="onmspointermove" content-attribute-value-syntax="javascript" event-handler="MSPointerMove" name="onmspointermove" type="EventHandler"/>
        <property content-attribute="onmspointerout" content-attribute-value-syntax="javascript" event-handler="MSPointerOut" name="onmspointerout" type="EventHandler"/>
        <property content-attribute="onmspointerover" content-attribute-value-syntax="javascript" event-handler="MSPointerOver" name="onmspointerover" type="EventHandler"/>
        <property content-attribute="onmspointerup" content-attribute-value-syntax="javascript" event-handler="MSPointerUp" name="onmspointerup" type="EventHandler"/>
        <property content-attribute="ontouchcancel" content-attribute-value-syntax="javascript" event-handler="touchcancel" name="ontouchcancel" type="EventHandler"/>
        <property content-attribute="ontouchend" content-attribute-value-syntax="javascript" event-handler="touchend" name="ontouchend" type="EventHandler"/>
        <property content-attribute="ontouchmove" content-attribute-value-syntax="javascript" event-handler="touchmove" name="ontouchmove" type="EventHandler"/>
        <property content-attribute="ontouchstart" content-attribute-value-syntax="javascript" event-handler="touchstart" name="ontouchstart" type="EventHandler"/>
        <property event-handler="webkitfullscreenchange" name="onwebkitfullscreenchange" type="EventHandler"/>
        <property event-handler="webkitfullscreenerror" name="onwebkitfullscreenerror" type="EventHandler"/>
        <property name="scrollHeight" read-only="1" tags="CSSOM" type="long"/>
        <property name="scrollLeft" tags="CSSOM" type="long"/>
        <property name="scrollTop" tags="CSSOM" type="long"/>
        <property name="scrollWidth" read-only="1" tags="CSSOM" type="long"/>
        <property name="tagName" read-only="1" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Event" name="ErrorEvent">
      <methods>
        <method name="initErrorEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="messageArg" type="DOMString"/>
          <param name="filenameArg" type="DOMString"/>
          <param name="linenoArg" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="colno" read-only="1" tags="Events" type="unsigned long"/>
        <property name="error" nullable="1" read-only="1" tags="Events" type="any"/>
        <property name="filename" read-only="1" tags="Events" type="DOMString"/>
        <property name="lineno" read-only="1" tags="Events" type="unsigned long"/>
        <property name="message" read-only="1" tags="Events" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="Event">
      <constants>
        <constant name="AT_TARGET" type="unsigned short" value="2"/>
        <constant name="BUBBLING_PHASE" type="unsigned short" value="3"/>
        <constant name="CAPTURING_PHASE" type="unsigned short" value="1"/>
      </constants>
      <constructor>
        <param name="type" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="EventInit"/>
      </constructor>
      <methods>
        <method name="initEvent" tags="Events" type="void">
          <param name="eventTypeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
        </method>
        <method name="preventDefault" tags="Events" type="void"/>
        <method name="stopImmediatePropagation" tags="Events" type="void"/>
        <method name="stopPropagation" tags="Events" type="void"/>
      </methods>
      <properties>
        <property name="bubbles" read-only="1" tags="Events" type="boolean"/>
        <property name="cancelBubble" tags="Events" type="boolean"/>
        <property name="cancelable" read-only="1" tags="Events" type="boolean"/>
        <property name="currentTarget" read-only="1" tags="Events" type="EventTarget"/>
        <property name="defaultPrevented" read-only="1" tags="Events" type="boolean"/>
        <property name="eventPhase" read-only="1" tags="Events" type="unsigned short"/>
        <property name="isTrusted" read-only="1" tags="Events" type="boolean"/>
        <property name="srcElement" nullable="1" read-only="1" tags="Events" type="Element"/>
        <property name="target" read-only="1" tags="Events" type="EventTarget"/>
        <property name="timeStamp" read-only="1" tags="Events" type="unsigned long long"/>
        <property name="type" read-only="1" tags="Events" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="EventTarget">
      <methods>
        <method name="addEventListener" tags="Events" type="void">
          <param name="type" type="DOMString"/>
          <param name="listener" type="EventListener"/>
          <param default="VARIANT_FALSE" name="useCapture" optional="1" type="boolean"/>
        </method>
        <method name="dispatchEvent" tags="Events" type="boolean">
          <param name="evt" type="Event"/>
        </method>
        <method name="removeEventListener" tags="Events" type="void">
          <param name="type" type="DOMString"/>
          <param name="listener" type="EventListener"/>
          <param default="VARIANT_FALSE" name="useCapture" optional="1" type="boolean"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="External" specs="HTML5"/>
    <interface extends="Blob" name="File">
      <properties>
        <property name="lastModifiedDate" read-only="1" tags="FileAPI" type="any"/>
        <property name="name" read-only="1" tags="FileAPI" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="FileList">
      <methods>
        <method getter="1" name="item" tags="FileAPI" type="File">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="FileAPI" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="FileReader">
      <constructor/>
      <events>
        <event dispatch="sync" follows="progress" name="load" precedes="loadend" skips-window="1" specs="FileAPI" type="ProgressEvent"/>
        <event dispatch="sync" name="loadstart" precedes="progress" skips-window="1" specs="FileAPI" type="ProgressEvent"/>
        <event dispatch="sync" follows="load" name="loadend" skips-window="1" specs="FileAPI" type="ProgressEvent"/>
        <event dispatch="sync" follows="loadstart" name="progress" precedes="load" skips-window="1" specs="FileAPI" type="ProgressEvent"/>
        <event dispatch="sync" name="abort" skips-window="1" specs="FileAPI" type="ProgressEvent"/>
        <event dispatch="sync" name="error" skips-window="1" specs="FileAPI" type="ProgressEvent"/>
      </events>
      <implements>MSBaseReader</implements>
      <methods>
        <method name="readAsArrayBuffer" tags="FileAPI" type="void">
          <param name="blob" type="Blob"/>
        </method>
        <method name="readAsBinaryString" tags="FileAPI" type="void">
          <param name="blob" type="Blob"/>
        </method>
        <method name="readAsDataURL" tags="FileAPI" type="void">
          <param name="blob" type="Blob"/>
        </method>
        <method name="readAsText" tags="FileAPI" type="void">
          <param name="blob" type="Blob"/>
          <param name="encoding" optional="1" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="error" read-only="1" tags="FileAPI" type="DOMError"/>
      </properties>
    </interface>
    <interface extends="UIEvent" name="FocusEvent">
      <constructor>
        <param name="typeArg" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="FocusEventInit"/>
      </constructor>
      <methods>
        <method name="initFocusEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="detailArg" type="long"/>
          <param name="relatedTargetArg" type="EventTarget"/>
        </method>
      </methods>
      <properties>
        <property name="relatedTarget" read-only="1" tags="Events" type="EventTarget"/>
      </properties>
    </interface>
    <interface extends="Object" name="FormData">
      <constructor/>
      <methods>
        <method name="append" type="void">
          <param name="name" type="any"/>
          <param name="value" type="any"/>
          <param name="blobName" optional="1" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="AudioNode" name="GainNode">
      <properties>
        <property name="gain" read-only="1" type="AudioParam"/>
      </properties>
    </interface>
    <interface extends="Object" name="Gamepad">
      <properties>
        <property name="axes" read-only="1" type="sequence&lt;double&gt;"/>
        <property name="buttons" read-only="1" type="sequence&lt;GamepadButton&gt;"/>
        <property name="connected" read-only="1" type="boolean"/>
        <property name="id" read-only="1" type="DOMString"/>
        <property name="index" read-only="1" type="long"/>
        <property name="mapping" read-only="1" type="DOMString"/>
        <property name="timestamp" read-only="1" type="DOMHighResTimeStamp"/>
      </properties>
    </interface>
    <interface extends="Object" name="GamepadButton">
      <properties>
        <property name="pressed" read-only="1" type="boolean"/>
        <property name="value" read-only="1" type="double"/>
      </properties>
    </interface>
    <interface extends="Event" name="GamepadEvent">
      <properties>
        <property name="gamepad" read-only="1" type="Gamepad"/>
      </properties>
    </interface>
    <interface extends="Object" name="Geolocation">
      <methods>
        <method name="clearWatch" tags="Geolocation" type="void">
          <param name="watchId" type="long"/>
        </method>
        <method name="getCurrentPosition" tags="Geolocation" type="void">
          <param name="successCallback" type="PositionCallback"/>
          <param default="0" name="errorCallback" optional="1" type="PositionErrorCallback"/>
          <param default="0" name="options" optional="1" type="PositionOptions"/>
        </method>
        <method name="watchPosition" tags="Geolocation" type="long">
          <param name="successCallback" type="PositionCallback"/>
          <param default="0" name="errorCallback" optional="1" type="PositionErrorCallback"/>
          <param default="0" name="options" optional="1" type="PositionOptions"/>
        </method>
      </methods>
    </interface>
    <interface extends="HTMLCollection" name="HTMLAllCollection">
      <methods>
        <method getter="1" legacy-caller="1" name="namedItem" tags="TreeNavigation" type="Element">
          <param name="name" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="HTMLElement" name="HTMLAnchorElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="a" namespace="HTML" specs="HTML5"/>
      <methods>
        <method name="toString" stringifier="1" type="DOMString"/>
      </methods>
      <properties>
        <property name="Methods" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="charset" content-attribute-reflects="1" content-attribute-value-syntax="character_encoding" name="charset" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="coords" content-attribute-reflects="1" content-attribute-value-syntax="comma_separated_signed_integers" name="coords" tags="CSSOM" type="DOMString"/>
        <property name="hash" tags="NetworkAccess" type="DOMString"/>
        <property name="host" tags="NetworkAccess" type="DOMString"/>
        <property name="hostname" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="href" content-attribute-reflects="1" content-attribute-value-syntax="url" name="href" stringifier="1" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="hreflang" content-attribute-reflects="1" content-attribute-value-syntax="bcp47_lang" name="hreflang" tags="TreeIdentity" type="DOMString"/>
        <property name="mimeType" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="name" content-attribute-reflects="1" name="name" tags="TreeIdentity" type="DOMString"/>
        <property name="nameProp" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="pathname" tags="NetworkAccess" type="DOMString"/>
        <property name="port" tags="NetworkAccess" type="DOMString"/>
        <property name="protocol" tags="NetworkAccess" type="DOMString"/>
        <property name="protocolLong" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="rel" content-attribute-enum-values="alternate appendix bookmark chapter contents copyright dns-prefetch entry-content feedurl glossary help index next prefetch preload prev section start subsection" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_enums" name="rel" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="rev" content-attribute-enum-values="alternate appendix bookmark chapter contents copyright glossary help index next prev section start stylesheet subsection" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_enums" name="rev" tags="TreeIdentity" type="DOMString"/>
        <property name="search" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="shape" content-attribute-enum-values="circ circle poly polygon rect rectangle" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="shape" tags="CSSOM" type="DOMString"/>
        <property content-attribute="target" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="target" type="DOMString"/>
        <property name="text" treat-null-as="EmptyString" type="DOMString"/>
        <property content-attribute="type" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="type" tags="TreeIdentity" type="DOMString"/>
        <property name="urn" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLAppletElement" tags="NetworkAccess">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="applet" namespace="HTML" specs="HTML5"/>
      <properties>
        <property name="BaseHref" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="align" content-attribute-enum-values="absbottom absmiddle baseline bottom left middle right texttop top" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="alt" content-attribute-reflects="1" name="alt" tags="Accessibility" type="DOMString"/>
        <property name="altHtml" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="archive" content-attribute-reflects="1" name="archive" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="border" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="border" tags="CSSOM" type="DOMString"/>
        <property content-attribute="code" content-attribute-reflects="1" content-attribute-value-syntax="url" name="code" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="codebase" content-attribute-reflects="1" content-attribute-value-syntax="url" name="codeBase" tags="NetworkAccess" type="DOMString"/>
        <property name="codeType" tags="NetworkAccess" type="DOMString"/>
        <property name="contentDocument" read-only="1" tags="TreeNavigation" type="Document"/>
        <property name="data" tags="NetworkAccess" type="DOMString"/>
        <property name="declare" tags="TreeIdentity" type="boolean"/>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" tags="CSSOM" type="DOMString"/>
        <property content-attribute="hspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="hspace" tags="CSSOM" type="long"/>
        <property content-attribute="name" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="name" tags="TreeIdentity" type="DOMString"/>
        <property name="object" nullable="1" tags="TreeIdentity" type="DOMString"/>
        <property name="standby" tags="NetworkAccess" type="DOMString"/>
        <property name="type" tags="TreeIdentity" type="DOMString"/>
        <property name="useMap" tags="CSSOM" type="DOMString"/>
        <property content-attribute="vspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="vspace" tags="CSSOM" type="long"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="long"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLAreaElement" tags="NetworkAccess">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element html-self-closing="1" name="area" namespace="HTML" specs="HTML5"/>
      <methods>
        <method name="toString" stringifier="1" type="DOMString"/>
      </methods>
      <properties>
        <property content-attribute="alt" content-attribute-reflects="1" name="alt" tags="Accessibility" type="DOMString"/>
        <property content-attribute="coords" content-attribute-reflects="1" content-attribute-value-syntax="comma_separated_signed_integers" name="coords" tags="CSSOM" type="DOMString"/>
        <property name="hash" tags="NetworkAccess" type="DOMString"/>
        <property name="host" tags="NetworkAccess" type="DOMString"/>
        <property name="hostname" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="href" content-attribute-reflects="1" content-attribute-value-syntax="url" name="href" stringifier="1" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="nohref" content-attribute-boolean="1" content-attribute-reflects="1" name="noHref" tags="TreeIdentity" type="boolean"/>
        <property name="pathname" tags="NetworkAccess" type="DOMString"/>
        <property name="port" tags="NetworkAccess" type="DOMString"/>
        <property name="protocol" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="rel" content-attribute-enum-values="alternate appendix bookmark chapter contents copyright dns-prefetch entry-content feedurl glossary help index next prefetch preload prev section start subsection" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_enums" name="rel" tags="NetworkAccess" type="DOMString"/>
        <property name="search" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="shape" content-attribute-enum-values="circ circle poly polygon rect rectangle" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="shape" tags="CSSOM" type="DOMString"/>
        <property content-attribute="target" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="target" tags="NetworkAccess" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLCollection" name="HTMLAreasCollection">
      <methods>
        <method name="add" tags="TreeMutation" type="void">
          <param name="element" type="HTMLElement"/>
          <param name="before" optional="1" type="(HTMLElement or long)"/>
        </method>
        <method name="remove" tags="TreeMutation" type="void">
          <param default="-1" name="index" optional="1" type="long"/>
        </method>
      </methods>
    </interface>
    <interface extends="HTMLMediaElement" name="HTMLAudioElement">
      <element name="audio" namespace="HTML" specs="HTML5"/>
      <named-constructor name="Audio">
        <param name="src" optional="1" type="DOMString"/>
      </named-constructor>
    </interface>
    <interface extends="HTMLElement" name="HTMLBRElement">
      <element html-self-closing="1" name="br" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="clear" content-attribute-enum-values="all both left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="clear" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLBaseElement">
      <element html-self-closing="1" name="base" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="href" content-attribute-reflects="1" content-attribute-value-syntax="url" name="href" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="target" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="target" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLBaseFontElement">
      <element html-self-closing="1" name="basefont" namespace="HTML" specs="HTML5"/>
      <implements>DOML2DeprecatedColorProperty</implements>
      <properties>
        <property content-attribute="face" content-attribute-reflects="1" content-attribute-value-syntax="font_family" name="face" tags="CSSOM" type="DOMString"/>
        <property content-attribute="size" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" deprecated="1" name="size" tags="CSSOM" type="long"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLBlockElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="address" namespace="HTML" specs="HTML5"/>
      <element name="blockquote" namespace="HTML" specs="HTML5"/>
      <element name="center" namespace="HTML" specs="HTML5"/>
      <element html-self-closing="1" name="keygen" namespace="HTML" specs="HTML5"/>
      <element name="listing" namespace="HTML" specs="HTML5"/>
      <element name="plaintext" namespace="HTML" specs="HTML5"/>
      <element name="xmp" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="cite" content-attribute-reflects="1" content-attribute-value-syntax="url" name="cite" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="clear" content-attribute-enum-values="all both left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="clear" tags="CSSOM" type="DOMString"/>
        <property deprecated="1" name="width" tags="CSSOM" type="long"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLBodyElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="body" namespace="HTML" specs="HTML5"/>
      <events>
        <event bubbles="1" dispatch="async" name="offline" specs="HTML5" type="Event"/>
        <event bubbles="1" dispatch="async" name="online" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method deprecated="1" name="createTextRange" tags="Editing" type="TextRange"/>
      </methods>
      <properties>
        <property content-attribute="alink" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="aLink" tags="CSSOM" type="any"/>
        <property content-attribute="background" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="background" tags="CSSOM" type="DOMString"/>
        <property content-attribute="bgcolor" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="bgColor" tags="CSSOM" type="any"/>
        <property name="bgProperties" tags="CSSOM" type="DOMString"/>
        <property content-attribute="link" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="link" tags="CSSOM" type="any"/>
        <property content-attribute="nowrap" content-attribute-boolean="1" content-attribute-reflects="1" deprecated="1" name="noWrap" tags="CSSOM" type="boolean"/>
        <property content-attribute="onafterprint" content-attribute-value-syntax="javascript" event-handler="afterprint" name="onafterprint" tags="Printing" type="EventHandler"/>
        <property content-attribute="onbeforeprint" content-attribute-value-syntax="javascript" event-handler="beforeprint" name="onbeforeprint" tags="Printing" type="EventHandler"/>
        <property content-attribute="onbeforeunload" content-attribute-value-syntax="javascript" event-handler="beforeunload" name="onbeforeunload" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="blur" name="onblur" tags="Events" type="EventHandler"/>
        <property event-handler="error" name="onerror" type="EventHandler"/>
        <property event-handler="focus" name="onfocus" tags="Events" type="EventHandler"/>
        <property content-attribute="onhashchange" content-attribute-value-syntax="javascript" event-handler="hashchange" name="onhashchange" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="load" name="onload" tags="Events" type="EventHandler"/>
        <property content-attribute="onmessage" content-attribute-value-syntax="javascript" event-handler="message" name="onmessage" type="EventHandler"/>
        <property content-attribute="onoffline" content-attribute-value-syntax="javascript" event-handler="offline" name="onoffline" tags="Offline" type="EventHandler"/>
        <property content-attribute="ononline" content-attribute-value-syntax="javascript" event-handler="online" name="ononline" tags="Offline" type="EventHandler"/>
        <property content-attribute="onorientationchange" content-attribute-value-syntax="javascript" event-handler="orientationchange" name="onorientationchange" type="EventHandler"/>
        <property content-attribute="onpagehide" content-attribute-value-syntax="javascript" event-handler="pagehide" name="onpagehide" type="EventHandler"/>
        <property content-attribute="onpageshow" content-attribute-value-syntax="javascript" event-handler="pageshow" name="onpageshow" type="EventHandler"/>
        <property content-attribute="onpopstate" content-attribute-value-syntax="javascript" event-handler="popstate" name="onpopstate" type="EventHandler"/>
        <property event-handler="resize" name="onresize" tags="Events" type="EventHandler"/>
        <property content-attribute="onstorage" content-attribute-value-syntax="javascript" event-handler="storage" name="onstorage" type="EventHandler"/>
        <property content-attribute="onunload" content-attribute-value-syntax="javascript" event-handler="unload" name="onunload" tags="NetworkAccess" type="EventHandler"/>
        <property content-attribute="text" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="text" tags="CSSOM" type="any"/>
        <property content-attribute="vlink" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="vLink" tags="CSSOM" type="any"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLButtonElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="button" namespace="HTML" specs="HTML5"/>
      <methods>
        <method name="checkValidity" tags="Editing" type="boolean"/>
        <method deprecated="1" name="createTextRange" tags="Editing" type="TextRange"/>
        <method name="setCustomValidity" tags="Editing" type="void">
          <param name="error" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="autofocus" content-attribute-boolean="1" content-attribute-reflects="1" name="autofocus" tags="Editing" type="boolean"/>
        <property content-attribute="disabled" content-attribute-boolean="1" content-attribute-reflects="1" name="disabled" type="boolean"/>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property content-attribute="formaction" content-attribute-reflects="1" content-attribute-value-syntax="url" name="formAction" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="formenctype" content-attribute-enum-values="application/x-www-form-urlencoded multipart/form-data text/plain" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="formEnctype" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="formmethod" content-attribute-enum-values="GET POST" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="formMethod" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="formnovalidate" content-attribute-boolean="1" content-attribute-reflects="1" name="formNoValidate" tags="Editing" type="DOMString"/>
        <property content-attribute="formtarget" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="formTarget" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="name" content-attribute-reflects="1" name="name" tags="TreeIdentity" type="DOMString"/>
        <property name="status" tags="Editing" type="any"/>
        <property content-attribute="type" content-attribute-enum-values="button submit reset" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="type" tags="TreeIdentity" type="DOMString"/>
        <property name="validationMessage" read-only="1" tags="Editing" type="DOMString"/>
        <property name="validity" read-only="1" tags="Editing" type="ValidityState"/>
        <property content-attribute="value" content-attribute-reflects="1" name="value" tags="TreeIdentity" type="DOMString"/>
        <property name="willValidate" read-only="1" tags="Editing" type="boolean"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLCanvasElement">
      <element name="canvas" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="async" name="webglcontextlost" precedes="webglcontextrestored" specs="WebGL1" type="WebGLContextEvent"/>
        <event dispatch="async" follows="webglcontextlost" name="webglcontextrestored" specs="WebGL1" type="WebGLContextEvent"/>
        <event dispatch="async" name="webglcontextcreationerror" specs="WebGL1" type="WebGLContextEvent"/>
      </events>
      <methods>
        <method name="getContext" type="(CanvasRenderingContext2D or WebGLRenderingContext)">
          <param name="contextId" type="DOMString"/>
          <param name="args" type="any" variadic="1"/>
        </method>
        <method name="msToBlob" tags="FileAPI" type="Blob"/>
        <method name="toDataURL" type="DOMString">
          <param default="&quot;image/png&quot;" name="type" optional="1" type="DOMString"/>
          <param name="args" type="any" variadic="1"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" type="unsigned long"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="HTMLCollection">
      <methods>
        <method getter="1" legacy-caller="1" name="item" tags="TreeNavigation" type="Element">
          <param name="nameOrIndex" optional="1" type="any"/>
          <param name="optionalIndex" optional="1" type="any"/>
        </method>
        <method getter="1" legacy-caller="1" name="namedItem" tags="TreeNavigation" type="Element">
          <param name="name" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="TreeNavigation" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLDDElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="dd" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="nowrap" content-attribute-boolean="1" content-attribute-reflects="1" name="noWrap" tags="CSSOM" type="boolean"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLDListElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="dl" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="compact" content-attribute-boolean="1" content-attribute-reflects="1" name="compact" tags="CSSOM" type="boolean"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLDTElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="dt" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="nowrap" content-attribute-boolean="1" content-attribute-reflects="1" name="noWrap" tags="CSSOM" type="boolean"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLDataListElement">
      <element name="datalist" namespace="HTML" specs="HTML5"/>
      <properties>
        <property name="options" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLDirectoryElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="dir" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="compact" content-attribute-boolean="1" content-attribute-reflects="1" name="compact" tags="CSSOM" type="boolean"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLDivElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="div" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="center justify left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="nowrap" content-attribute-boolean="1" content-attribute-reflects="1" deprecated="1" name="noWrap" tags="CSSOM" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Document" name="HTMLDocument"/>
    <interface extends="Element" name="HTMLElement">
      <anonymous-content-attributes>
        <parsedattribute name="x-ms-acceleratorkey"/>
        <parsedattribute enum-values="all none phone" name="x-ms-format-detection" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="noframes" namespace="HTML" specs="HTML5"/>
      <element name="noscript" namespace="HTML" specs="HTML5"/>
      <element html-self-closing="1" name="wbr" namespace="HTML" specs="HTML5"/>
      <element name="section" namespace="HTML" specs="HTML5"/>
      <element name="nav" namespace="HTML" specs="HTML5"/>
      <element name="article" namespace="HTML" specs="HTML5"/>
      <element name="aside" namespace="HTML" specs="HTML5"/>
      <element name="hgroup" namespace="HTML" specs="HTML5"/>
      <element name="header" namespace="HTML" specs="HTML5"/>
      <element name="footer" namespace="HTML" specs="HTML5"/>
      <element name="figure" namespace="HTML" specs="HTML5"/>
      <element name="figcaption" namespace="HTML" specs="HTML5"/>
      <element name="mark" namespace="HTML" specs="HTML5"/>
      <methods>
        <method name="blur" tags="Editing" type="void"/>
        <method name="click" tags="Events" type="void"/>
        <method name="contains" tags="TreeNavigation" type="boolean">
          <param name="child" type="HTMLElement"/>
        </method>
        <method name="createControlRange" tags="Editing" type="ControlRangeCollection"/>
        <method name="dragDrop" tags="Editing" type="boolean"/>
        <method name="focus" tags="Editing" type="void"/>
        <method name="getElementsByClassName" tags="TreeNavigation" type="NodeList">
          <param name="classNames" type="DOMString"/>
        </method>
        <method name="insertAdjacentElement" tags="TreeMutation" type="Element">
          <param name="position" type="DOMString"/>
          <param name="insertedElement" type="Element"/>
        </method>
        <method name="insertAdjacentHTML" tags="TreeMutation" type="void">
          <param name="where" type="DOMString"/>
          <param name="html" type="DOMString"/>
        </method>
        <method name="insertAdjacentText" tags="TreeMutation" type="void">
          <param name="where" type="DOMString"/>
          <param name="text" type="DOMString"/>
        </method>
        <method name="msGetInputContext" type="MSInputMethodContext"/>
        <method name="scrollIntoView" tags="CSSOM" type="void">
          <param default="VARIANT_TRUE" name="top" optional="1" type="boolean"/>
        </method>
        <method name="setActive" tags="Editing" type="void"/>
      </methods>
      <properties>
        <property content-attribute="accesskey" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_tokens" name="accessKey" tags="Accessibility" type="DOMString"/>
        <property name="children" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property content-attribute="class" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_tokens" name="className" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="contenteditable" content-attribute-enum-values="true false" content-attribute-value-syntax="enum" name="contentEditable" tags="Editing" type="DOMString"/>
        <property content-attribute="data-" content-attribute-reflects="1" name="dataset" read-only="1" type="DOMStringMap"/>
        <property content-attribute="dir" content-attribute-enum-values="ltr rtl auto" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="dir" tags="CSSOM" type="DOMString"/>
        <property content-attribute="draggable" content-attribute-enum-values="true false" content-attribute-value-syntax="enum" name="draggable" tags="Editing" type="boolean"/>
        <property name="hidden" type="boolean"/>
        <property content-attribute="hidefocus" content-attribute-enum-values="false true" content-attribute-value-syntax="enum" name="hideFocus" type="boolean"/>
        <property content-attribute="id" content-attribute-reflects="1" name="id" tags="TreeIdentity" type="DOMString"/>
        <property name="innerHTML" tags="TreeMutation" type="DOMString"/>
        <property name="innerText" tags="TreeMutation" type="DOMString"/>
        <property name="isContentEditable" read-only="1" tags="Editing" type="boolean"/>
        <property content-attribute="lang" content-attribute-aliases="language" content-attribute-reflects="1" content-attribute-value-syntax="bcp47_lang" name="lang" tags="Accessibility" type="DOMString"/>
        <property name="offsetHeight" read-only="1" tags="CSSOM" type="long"/>
        <property name="offsetLeft" read-only="1" tags="CSSOM" type="long"/>
        <property name="offsetParent" read-only="1" tags="CSSOM" type="Element"/>
        <property name="offsetTop" read-only="1" tags="CSSOM" type="long"/>
        <property name="offsetWidth" read-only="1" tags="CSSOM" type="long"/>
        <property content-attribute="onabort" content-attribute-value-syntax="javascript" event-handler="abort" name="onabort" type="EventHandler"/>
        <property content-attribute="onactivate" content-attribute-value-syntax="javascript" event-handler="activate" name="onactivate" type="EventHandler"/>
        <property content-attribute="onbeforeactivate" content-attribute-value-syntax="javascript" event-handler="beforeactivate" name="onbeforeactivate" type="EventHandler"/>
        <property content-attribute="onbeforecopy" content-attribute-value-syntax="javascript" event-handler="beforecopy" name="onbeforecopy" type="EventHandler"/>
        <property content-attribute="onbeforecut" content-attribute-value-syntax="javascript" event-handler="beforecut" name="onbeforecut" type="EventHandler"/>
        <property content-attribute="onbeforedeactivate" content-attribute-value-syntax="javascript" event-handler="beforedeactivate" name="onbeforedeactivate" type="EventHandler"/>
        <property content-attribute="onbeforepaste" content-attribute-value-syntax="javascript" event-handler="beforepaste" name="onbeforepaste" type="EventHandler"/>
        <property content-attribute="onblur" content-attribute-value-syntax="javascript" event-handler="blur" name="onblur" tags="Editing" type="EventHandler"/>
        <property content-attribute="oncanplay" content-attribute-value-syntax="javascript" event-handler="canplay" name="oncanplay" type="EventHandler"/>
        <property content-attribute="oncanplaythrough" content-attribute-value-syntax="javascript" event-handler="canplaythrough" name="oncanplaythrough" type="EventHandler"/>
        <property content-attribute="onchange" content-attribute-value-syntax="javascript" event-handler="change" name="onchange" type="EventHandler"/>
        <property content-attribute="onclick" content-attribute-value-syntax="javascript" event-handler="click" name="onclick" type="EventHandler"/>
        <property content-attribute="oncontextmenu" content-attribute-value-syntax="javascript" event-handler="contextmenu" name="oncontextmenu" type="EventHandler"/>
        <property content-attribute="oncopy" content-attribute-value-syntax="javascript" event-handler="copy" name="oncopy" type="EventHandler"/>
        <property event-handler="cuechange" name="oncuechange" type="EventHandler"/>
        <property content-attribute="oncut" content-attribute-value-syntax="javascript" event-handler="cut" name="oncut" type="EventHandler"/>
        <property content-attribute="ondblclick" content-attribute-value-syntax="javascript" event-handler="dblclick" name="ondblclick" type="EventHandler"/>
        <property content-attribute="ondeactivate" content-attribute-value-syntax="javascript" event-handler="deactivate" name="ondeactivate" type="EventHandler"/>
        <property content-attribute="ondrag" content-attribute-value-syntax="javascript" event-handler="drag" name="ondrag" type="EventHandler"/>
        <property content-attribute="ondragend" content-attribute-value-syntax="javascript" event-handler="dragend" name="ondragend" type="EventHandler"/>
        <property content-attribute="ondragenter" content-attribute-value-syntax="javascript" event-handler="dragenter" name="ondragenter" type="EventHandler"/>
        <property content-attribute="ondragleave" content-attribute-value-syntax="javascript" event-handler="dragleave" name="ondragleave" type="EventHandler"/>
        <property content-attribute="ondragover" content-attribute-value-syntax="javascript" event-handler="dragover" name="ondragover" type="EventHandler"/>
        <property content-attribute="ondragstart" content-attribute-value-syntax="javascript" event-handler="dragstart" name="ondragstart" type="EventHandler"/>
        <property content-attribute="ondrop" content-attribute-value-syntax="javascript" event-handler="drop" name="ondrop" type="EventHandler"/>
        <property content-attribute="ondurationchange" content-attribute-value-syntax="javascript" event-handler="durationchange" name="ondurationchange" type="EventHandler"/>
        <property content-attribute="onemptied" content-attribute-value-syntax="javascript" event-handler="emptied" name="onemptied" type="EventHandler"/>
        <property content-attribute="onended" content-attribute-value-syntax="javascript" event-handler="ended" name="onended" type="EventHandler"/>
        <property content-attribute="onerror" content-attribute-value-syntax="javascript" event-handler="error" name="onerror" type="EventHandler"/>
        <property content-attribute="onfocus" content-attribute-value-syntax="javascript" event-handler="focus" name="onfocus" type="EventHandler"/>
        <property content-attribute="oninput" content-attribute-value-syntax="javascript" event-handler="input" name="oninput" type="EventHandler"/>
        <property content-attribute="onkeydown" content-attribute-value-syntax="javascript" event-handler="keydown" name="onkeydown" type="EventHandler"/>
        <property content-attribute="onkeypress" content-attribute-value-syntax="javascript" event-handler="keypress" name="onkeypress" type="EventHandler"/>
        <property content-attribute="onkeyup" content-attribute-value-syntax="javascript" event-handler="keyup" name="onkeyup" type="EventHandler"/>
        <property content-attribute="onload" content-attribute-value-syntax="javascript" event-handler="load" name="onload" tags="Events" type="EventHandler"/>
        <property content-attribute="onloadeddata" content-attribute-value-syntax="javascript" event-handler="loadeddata" name="onloadeddata" type="EventHandler"/>
        <property content-attribute="onloadedmetadata" content-attribute-value-syntax="javascript" event-handler="loadedmetadata" name="onloadedmetadata" type="EventHandler"/>
        <property content-attribute="onloadstart" content-attribute-value-syntax="javascript" event-handler="loadstart" name="onloadstart" type="EventHandler"/>
        <property content-attribute="onmousedown" content-attribute-value-syntax="javascript" event-handler="mousedown" name="onmousedown" type="EventHandler"/>
        <property content-attribute="onmouseenter" content-attribute-value-syntax="javascript" event-handler="mouseenter" name="onmouseenter" type="EventHandler"/>
        <property content-attribute="onmouseleave" content-attribute-value-syntax="javascript" event-handler="mouseleave" name="onmouseleave" type="EventHandler"/>
        <property content-attribute="onmousemove" content-attribute-value-syntax="javascript" event-handler="mousemove" name="onmousemove" type="EventHandler"/>
        <property content-attribute="onmouseout" content-attribute-value-syntax="javascript" event-handler="mouseout" name="onmouseout" type="EventHandler"/>
        <property content-attribute="onmouseover" content-attribute-value-syntax="javascript" event-handler="mouseover" name="onmouseover" type="EventHandler"/>
        <property content-attribute="onmouseup" content-attribute-value-syntax="javascript" event-handler="mouseup" name="onmouseup" type="EventHandler"/>
        <property content-attribute="onmousewheel" content-attribute-value-syntax="javascript" event-handler="mousewheel" name="onmousewheel" type="EventHandler"/>
        <property content-attribute="onmscontentzoom" content-attribute-value-syntax="javascript" event-handler="MSContentZoom" name="onmscontentzoom" type="EventHandler"/>
        <property content-attribute="onmsmanipulationstatechanged" content-attribute-value-syntax="javascript" event-handler="MSManipulationStateChanged" name="onmsmanipulationstatechanged" type="EventHandler"/>
        <property content-attribute="onpaste" content-attribute-value-syntax="javascript" event-handler="paste" name="onpaste" type="EventHandler"/>
        <property content-attribute="onpause" content-attribute-value-syntax="javascript" event-handler="pause" name="onpause" type="EventHandler"/>
        <property content-attribute="onplay" content-attribute-value-syntax="javascript" event-handler="play" name="onplay" type="EventHandler"/>
        <property content-attribute="onplaying" content-attribute-value-syntax="javascript" event-handler="playing" name="onplaying" type="EventHandler"/>
        <property content-attribute="onprogress" content-attribute-value-syntax="javascript" event-handler="progress" name="onprogress" type="EventHandler"/>
        <property content-attribute="onratechange" content-attribute-value-syntax="javascript" event-handler="ratechange" name="onratechange" type="EventHandler"/>
        <property content-attribute="onreset" content-attribute-value-syntax="javascript" event-handler="reset" name="onreset" type="EventHandler"/>
        <property content-attribute="onscroll" content-attribute-value-syntax="javascript" event-handler="scroll" name="onscroll" tags="CSSOM" type="EventHandler"/>
        <property content-attribute="onseeked" content-attribute-value-syntax="javascript" event-handler="seeked" name="onseeked" type="EventHandler"/>
        <property content-attribute="onseeking" content-attribute-value-syntax="javascript" event-handler="seeking" name="onseeking" type="EventHandler"/>
        <property content-attribute="onselect" content-attribute-value-syntax="javascript" event-handler="select" name="onselect" type="EventHandler"/>
        <property content-attribute="onselectstart" content-attribute-value-syntax="javascript" event-handler="selectstart" name="onselectstart" type="EventHandler"/>
        <property content-attribute="onstalled" content-attribute-value-syntax="javascript" event-handler="stalled" name="onstalled" type="EventHandler"/>
        <property content-attribute="onsubmit" content-attribute-value-syntax="javascript" event-handler="submit" name="onsubmit" type="EventHandler"/>
        <property content-attribute="onsuspend" content-attribute-value-syntax="javascript" event-handler="suspend" name="onsuspend" type="EventHandler"/>
        <property content-attribute="ontimeupdate" content-attribute-value-syntax="javascript" event-handler="timeupdate" name="ontimeupdate" type="EventHandler"/>
        <property content-attribute="onvolumechange" content-attribute-value-syntax="javascript" event-handler="volumechange" name="onvolumechange" type="EventHandler"/>
        <property content-attribute="onwaiting" content-attribute-value-syntax="javascript" event-handler="waiting" name="onwaiting" type="EventHandler"/>
        <property name="outerHTML" tags="TreeMutation" type="DOMString"/>
        <property name="outerText" tags="TreeMutation" type="DOMString"/>
        <property content-attribute="spellcheck" content-attribute-enum-values="true false" content-attribute-value-syntax="enum" name="spellcheck" tags="Editing" type="boolean"/>
        <property content-attribute="style" content-attribute-value-syntax="css" name="style" read-only="1" tags="CSSOM" type="CSSStyleDeclaration"/>
        <property content-attribute="tabindex" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" name="tabIndex" tags="Editing" type="short"/>
        <property content-attribute="title" content-attribute-reflects="1" name="title" tags="TreeIdentity" type="DOMString"/>
        <property deprecated="1" name="uniqueID" read-only="1" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLEmbedElement" tags="NetworkAccess">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element html-self-closing="1" name="embed" namespace="HTML" specs="HTML5"/>
      <implements>GetSVGDocument</implements>
      <properties>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" tags="CSSOM" type="DOMString"/>
        <property content-attribute="hidden" content-attribute-enum-values="false true" content-attribute-reflects="1" content-attribute-value-syntax="enum" deprecated="1" name="hidden" tags="CSSOM" type="DOMString"/>
        <property content-attribute="x-ms-playtodisabled" content-attribute-boolean="1" content-attribute-reflects="1" name="msPlayToDisabled" tags="Media" type="boolean"/>
        <property content-attribute="x-ms-playtopreferredsourceuri" content-attribute-reflects="1" content-attribute-value-syntax="url" name="msPlayToPreferredSourceUri" tags="Media" type="DOMString"/>
        <property content-attribute="x-ms-playtoprimary" content-attribute-boolean="1" content-attribute-reflects="1" name="msPlayToPrimary" tags="Media" type="boolean"/>
        <property name="msPlayToSource" read-only="1" tags="Media" type="any"/>
        <property content-attribute="name" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="name" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="palette" content-attribute-reflects="1" deprecated="1" name="palette" read-only="1" tags="CSSOM" type="DOMString"/>
        <property content-attribute="pluginspage" content-attribute-reflects="1" content-attribute-value-syntax="url" deprecated="1" name="pluginspage" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="readyState" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="src" content-attribute-reflects="1" content-attribute-value-syntax="url" name="src" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="units" content-attribute-enum-values="px em" content-attribute-reflects="1" content-attribute-value-syntax="enum" deprecated="1" name="units" tags="CSSOM" type="DOMString"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLFieldSetElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="fieldset" namespace="HTML" specs="HTML5"/>
      <methods>
        <method name="checkValidity" tags="Editing" type="boolean"/>
        <method name="setCustomValidity" tags="Editing" type="void">
          <param name="error" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="absbottom absmiddle baseline bottom left middle right texttop top" content-attribute-reflects="1" content-attribute-value-syntax="enum" deprecated="1" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="disabled" content-attribute-boolean="1" content-attribute-reflects="1" name="disabled" type="boolean"/>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property name="validationMessage" read-only="1" tags="Editing" type="DOMString"/>
        <property name="validity" read-only="1" tags="Editing" type="ValidityState"/>
        <property name="willValidate" read-only="1" tags="Editing" type="boolean"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLFontElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="font" namespace="HTML" specs="HTML5"/>
      <implements>DOML2DeprecatedColorProperty</implements>
      <implements>DOML2DeprecatedSizeProperty</implements>
      <properties>
        <property content-attribute="face" content-attribute-reflects="1" content-attribute-value-syntax="font_family" name="face" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLFormElement" override-builtins="1">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="form" namespace="HTML" specs="HTML5"/>
      <events>
        <event bubbles="1" cancelable="1" dispatch="sync" name="reset" specs="HTML5" type="Event"/>
        <event bubbles="1" cancelable="1" dispatch="sync" name="submit" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="checkValidity" tags="Editing" type="boolean"/>
        <method getter="1" legacy-caller="1" name="item" tags="TreeNavigation" type="any">
          <param name="name" optional="1" type="any"/>
          <param name="index" optional="1" type="any"/>
        </method>
        <method getter="1" legacy-caller="1" name="namedItem" tags="TreeNavigation" type="any">
          <param name="name" type="DOMString"/>
        </method>
        <method name="reset" tags="TreeMutation" type="void"/>
        <method name="submit" tags="NetworkAccess" type="void"/>
      </methods>
      <properties>
        <property content-attribute="accept-charset" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_tokens" name="acceptCharset" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="action" content-attribute-reflects="1" content-attribute-value-syntax="url" name="action" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="autocomplete" content-attribute-enum-values="on off" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="autocomplete" tags="Editing" type="DOMString"/>
        <property name="elements" read-only="1" tags="TreeNavigation" type="HTMLCollection"/>
        <property content-attribute="enctype" content-attribute-enum-values="application/x-www-form-urlencoded multipart/form-data text/plain" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="encoding" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="enctype" content-attribute-enum-values="application/x-www-form-urlencoded multipart/form-data text/plain" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="enctype" tags="TreeIdentity" type="DOMString"/>
        <property name="length" read-only="1" tags="TreeNavigation" type="long"/>
        <property content-attribute="method" content-attribute-enum-values="GET POST" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="method" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="name" content-attribute-reflects="1" name="name" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="novalidate" content-attribute-boolean="1" content-attribute-reflects="1" name="noValidate" tags="Editing" type="boolean"/>
        <property content-attribute="target" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="target" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLFrameElement" tags="NetworkAccess">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element html-self-closing="1" name="frame" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="async" name="load" skips-window="1" specs="HTML5" type="Event"/>
      </events>
      <implements>GetSVGDocument</implements>
      <properties>
        <property content-attribute="border" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="border" tags="CSSOM" type="DOMString"/>
        <property content-attribute="bordercolor" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="borderColor" tags="CSSOM" type="any"/>
        <property name="contentDocument" read-only="1" tags="TreeNavigation" type="Document"/>
        <property name="contentWindow" read-only="1" tags="TreeNavigation" type="Window"/>
        <property content-attribute="frameborder" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="frameBorder" tags="CSSOM" type="DOMString"/>
        <property content-attribute="framespacing" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" deprecated="1" name="frameSpacing" tags="CSSOM" type="any"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" tags="CSSOM" type="(DOMString or unsigned long)"/>
        <property content-attribute="longdesc" content-attribute-reflects="1" content-attribute-value-syntax="url" name="longDesc" tags="Accessibility" type="DOMString"/>
        <property content-attribute="marginheight" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" name="marginHeight" tags="CSSOM" type="DOMString"/>
        <property content-attribute="marginwidth" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" name="marginWidth" tags="CSSOM" type="DOMString"/>
        <property content-attribute="name" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="name" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="noresize" content-attribute-boolean="1" content-attribute-reflects="1" name="noResize" tags="CSSOM" type="boolean"/>
        <property event-handler="load" name="onload" tags="Events" type="EventHandler"/>
        <property content-attribute="scrolling" content-attribute-enum-values="auto no yes" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="scrolling" tags="CSSOM" type="DOMString"/>
        <property content-attribute="security" content-attribute-enum-values="restricted" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="security" tags="NetworkAccess" type="any"/>
        <property content-attribute="src" content-attribute-reflects="1" content-attribute-value-syntax="url" name="src" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="(DOMString or unsigned long)"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLFrameSetElement" tags="NetworkAccess">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="frameset" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="border" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="border" tags="CSSOM" type="DOMString"/>
        <property content-attribute="bordercolor" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="borderColor" tags="CSSOM" type="any"/>
        <property content-attribute="cols" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" name="cols" tags="CSSOM" type="DOMString"/>
        <property content-attribute="frameborder" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="frameBorder" tags="CSSOM" type="DOMString"/>
        <property content-attribute="framespacing" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" deprecated="1" name="frameSpacing" tags="CSSOM" type="any"/>
        <property content-attribute="name" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" deprecated="1" name="name" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="onafterprint" content-attribute-value-syntax="javascript" name="onafterprint" tags="Printing" type="EventHandler"/>
        <property content-attribute="onbeforeprint" content-attribute-value-syntax="javascript" event-handler="beforeprint" name="onbeforeprint" tags="Printing" type="EventHandler"/>
        <property content-attribute="onbeforeunload" content-attribute-value-syntax="javascript" event-handler="beforeunload" name="onbeforeunload" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="blur" name="onblur" tags="Events" type="EventHandler"/>
        <property event-handler="error" name="onerror" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="focus" name="onfocus" tags="Events" type="EventHandler"/>
        <property content-attribute="onhashchange" content-attribute-value-syntax="javascript" event-handler="hashchange" name="onhashchange" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="load" name="onload" tags="Events" type="EventHandler"/>
        <property content-attribute="onmessage" content-attribute-value-syntax="javascript" event-handler="message" name="onmessage" tags="NetworkAccess" type="EventHandler"/>
        <property content-attribute="onoffline" content-attribute-value-syntax="javascript" event-handler="offline" name="onoffline" tags="NetworkAccess" type="EventHandler"/>
        <property content-attribute="ononline" content-attribute-value-syntax="javascript" event-handler="online" name="ononline" tags="NetworkAccess" type="EventHandler"/>
        <property content-attribute="onorientationchange" content-attribute-value-syntax="javascript" event-handler="orientationchange" name="onorientationchange" tags="NetworkAccess" type="EventHandler"/>
        <property content-attribute="onpagehide" content-attribute-value-syntax="javascript" event-handler="pagehide" name="onpagehide" tags="NetworkAccess" type="EventHandler"/>
        <property content-attribute="onpageshow" content-attribute-value-syntax="javascript" event-handler="pageshow" name="onpageshow" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="resize" name="onresize" tags="Events" type="EventHandler"/>
        <property content-attribute="onstorage" content-attribute-value-syntax="javascript" event-handler="storage" name="onstorage" tags="NetworkAccess" type="EventHandler"/>
        <property content-attribute="onunload" content-attribute-value-syntax="javascript" event-handler="unload" name="onunload" tags="NetworkAccess" type="EventHandler"/>
        <property content-attribute="rows" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" name="rows" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLHRElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element html-self-closing="1" name="hr" namespace="HTML" specs="HTML5"/>
      <implements>DOML2DeprecatedColorProperty</implements>
      <implements>DOML2DeprecatedSizeProperty</implements>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="center justify left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="noshade" content-attribute-boolean="1" content-attribute-reflects="1" name="noShade" tags="CSSOM" type="boolean"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="long"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLHeadElement">
      <element name="head" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="profile" content-attribute-reflects="1" name="profile" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLHeadingElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="h1" namespace="HTML" specs="HTML5"/>
      <element name="h2" namespace="HTML" specs="HTML5"/>
      <element name="h3" namespace="HTML" specs="HTML5"/>
      <element name="h4" namespace="HTML" specs="HTML5"/>
      <element name="h5" namespace="HTML" specs="HTML5"/>
      <element name="h6" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="center justify left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="clear" content-attribute-enum-values="all left right none" content-attribute-reflects="1" content-attribute-value-syntax="enum" deprecated="1" name="clear" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLHtmlElement">
      <anonymous-content-attributes>
        <parsedattribute name="manifest" value-syntax="url"/>
      </anonymous-content-attributes>
      <element name="html" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="version" content-attribute-reflects="1" name="version" tags="Versioning" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLIFrameElement" tags="NetworkAccess">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="iframe" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="async" name="load" skips-window="1" specs="HTML5" type="Event"/>
      </events>
      <implements>GetSVGDocument</implements>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="absbottom absmiddle baseline bottom left middle right texttop top" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="border" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="border" tags="CSSOM" type="DOMString"/>
        <property name="contentDocument" read-only="1" tags="TreeNavigation" type="Document"/>
        <property name="contentWindow" read-only="1" tags="TreeNavigation" type="Window"/>
        <property content-attribute="frameborder" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="frameBorder" tags="CSSOM" type="DOMString"/>
        <property content-attribute="framespacing" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" deprecated="1" name="frameSpacing" tags="CSSOM" type="any"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" tags="CSSOM" type="DOMString"/>
        <property content-attribute="hspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="hspace" tags="CSSOM" type="long"/>
        <property content-attribute="longdesc" content-attribute-reflects="1" content-attribute-value-syntax="url" name="longDesc" tags="Accessibility" type="DOMString"/>
        <property content-attribute="marginheight" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" name="marginHeight" tags="CSSOM" type="DOMString"/>
        <property content-attribute="marginwidth" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" name="marginWidth" tags="CSSOM" type="DOMString"/>
        <property content-attribute="name" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="name" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="noresize" content-attribute-boolean="1" content-attribute-reflects="1" deprecated="1" name="noResize" tags="CSSOM" type="boolean"/>
        <property event-handler="load" name="onload" tags="Events" type="EventHandler"/>
        <property content-attribute="sandbox" content-attribute-enum-values="allow-scripts allow-forms allow-same-origin allow-top-navigation allow-popups allow-pointer-lock" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_enums" name="sandbox" put-forwards="value" read-only="1" tags="TreeIdentity" type="DOMSettableTokenList"/>
        <property content-attribute="scrolling" content-attribute-enum-values="auto no yes" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="scrolling" tags="CSSOM" type="DOMString"/>
        <property content-attribute="security" content-attribute-enum-values="restricted" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="security" tags="NetworkAccess" type="any"/>
        <property content-attribute="src" content-attribute-reflects="1" content-attribute-value-syntax="url" name="src" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="vspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="vspace" tags="CSSOM" type="long"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLImageElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element html-self-closing="1" name="img" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="sync" name="error" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="create" static="1" type="HTMLImageElement"/>
        <method name="msGetAsCastingSource" tags="Media" type="any"/>
      </methods>
      <named-constructor name="Image">
        <param name="width" optional="1" type="unsigned long"/>
        <param name="height" optional="1" type="unsigned long"/>
      </named-constructor>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="absbottom absmiddle baseline bottom left middle right texttop top" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="alt" content-attribute-reflects="1" name="alt" tags="Accessibility" type="DOMString"/>
        <property content-attribute="border" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="border" tags="CSSOM" type="DOMString"/>
        <property name="complete" read-only="1" tags="Events" type="boolean"/>
        <property content-attribute="crossorigin" content-attribute-enum-values="anonymous use-credentials" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="crossOrigin" type="DOMString"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" tags="CSSOM" type="unsigned long"/>
        <property content-attribute="href" content-attribute-reflects="1" content-attribute-value-syntax="url" deprecated="1" name="href" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="hspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="hspace" tags="CSSOM" type="long"/>
        <property content-attribute="ismap" content-attribute-boolean="1" content-attribute-reflects="1" name="isMap" tags="CSSOM" type="boolean"/>
        <property content-attribute="longdesc" content-attribute-reflects="1" content-attribute-value-syntax="url" name="longDesc" tags="Accessibility" type="DOMString"/>
        <property content-attribute="x-ms-playtodisabled" content-attribute-boolean="1" content-attribute-reflects="1" name="msPlayToDisabled" tags="Media" type="boolean"/>
        <property content-attribute="x-ms-playtopreferredsourceuri" content-attribute-reflects="1" content-attribute-value-syntax="url" name="msPlayToPreferredSourceUri" tags="Media" type="DOMString"/>
        <property content-attribute="x-ms-playtoprimary" content-attribute-boolean="1" content-attribute-reflects="1" name="msPlayToPrimary" tags="Media" type="boolean"/>
        <property name="msPlayToSource" read-only="1" tags="Media" type="any"/>
        <property content-attribute="name" content-attribute-reflects="1" name="name" tags="TreeIdentity" type="DOMString"/>
        <property name="naturalHeight" read-only="1" type="unsigned long"/>
        <property name="naturalWidth" read-only="1" type="unsigned long"/>
        <property content-attribute="src" content-attribute-reflects="1" content-attribute-value-syntax="url" name="src" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="usemap" content-attribute-reflects="1" content-attribute-value-syntax="hash_name_ref" name="useMap" tags="CSSOM" type="DOMString"/>
        <property content-attribute="vspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="vspace" tags="CSSOM" type="long"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLInputElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element html-self-closing="1" name="input" namespace="HTML" specs="HTML5"/>
      <events>
        <event bubbles="1" dispatch="sync" name="change" specs="HTML5" type="Event"/>
        <event bubbles="1" dispatch="async" name="input" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="error" specs="HTML5" type="Event"/>
        <event cancelable="1" dispatch="sync" name="invalid" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="checkValidity" tags="Editing" type="boolean"/>
        <method deprecated="1" name="createTextRange" tags="Editing" type="TextRange"/>
        <method name="select" tags="Editing" type="void"/>
        <method name="setCustomValidity" tags="Editing" type="void">
          <param name="error" type="DOMString"/>
        </method>
        <method name="setSelectionRange" tags="Editing" type="void">
          <param name="start" type="unsigned long"/>
          <param name="end" type="unsigned long"/>
        </method>
        <method name="stepDown" tags="TreeIdentity" type="void">
          <param default="1" name="n" optional="1" type="long"/>
        </method>
        <method name="stepUp" tags="TreeIdentity" type="void">
          <param default="1" name="n" optional="1" type="long"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="accept" content-attribute-enum-values="audio/* video/* image/*" content-attribute-reflects="1" content-attribute-value-syntax="comma_separated_mime_types" name="accept" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="align" content-attribute-enum-values="absbottom absmiddle baseline bottom left middle right texttop top" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="alt" content-attribute-reflects="1" name="alt" tags="Accessibility" type="DOMString"/>
        <property content-attribute="autocomplete" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_tokens" name="autocomplete" tags="Editing" type="DOMString"/>
        <property content-attribute="autofocus" content-attribute-boolean="1" content-attribute-reflects="1" name="autofocus" tags="Editing" type="boolean"/>
        <property content-attribute="border" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="border" tags="CSSOM" type="DOMString"/>
        <property name="checked" tags="TreeIdentity" type="boolean"/>
        <property deprecated="1" name="complete" read-only="1" tags="Events" type="boolean"/>
        <property content-attribute="checked" content-attribute-boolean="1" content-attribute-reflects="1" name="defaultChecked" tags="TreeIdentity" type="boolean"/>
        <property content-attribute="value" content-attribute-reflects="1" name="defaultValue" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="disabled" content-attribute-boolean="1" content-attribute-reflects="1" name="disabled" type="boolean"/>
        <property name="files" read-only="1" tags="FileAPI" type="FileList"/>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property content-attribute="formaction" content-attribute-reflects="1" content-attribute-value-syntax="url" name="formAction" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="formenctype" content-attribute-enum-values="application/x-www-form-urlencoded multipart/form-data text/plain" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="formEnctype" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="formmethod" content-attribute-enum-values="GET POST" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="formMethod" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="formnovalidate" content-attribute-boolean="1" content-attribute-reflects="1" name="formNoValidate" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="formtarget" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="formTarget" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" tags="CSSOM" type="DOMString"/>
        <property content-attribute="hspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="hspace" tags="CSSOM" type="long"/>
        <property name="indeterminate" tags="TreeIdentity" type="boolean"/>
        <property content-attribute="list" content-attribute-reflects="1" content-attribute-value-syntax="id_ref" name="list" read-only="1" tags="TreeIdentity" type="HTMLElement"/>
        <property content-attribute="max" content-attribute-reflects="1" name="max" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="maxlength" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="maxLength" tags="TreeIdentity" type="long"/>
        <property content-attribute="min" content-attribute-reflects="1" name="min" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="multiple" content-attribute-boolean="1" content-attribute-reflects="1" name="multiple" tags="TreeIdentity" type="boolean"/>
        <property content-attribute="name" content-attribute-reflects="1" name="name" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="pattern" content-attribute-reflects="1" content-attribute-value-syntax="regular_expression" name="pattern" tags="Editing" type="DOMString"/>
        <property content-attribute="placeholder" content-attribute-reflects="1" name="placeholder" tags="Editing" type="DOMString"/>
        <property content-attribute="readonly" content-attribute-boolean="1" content-attribute-reflects="1" name="readOnly" tags="Editing" type="boolean"/>
        <property content-attribute="required" content-attribute-boolean="1" content-attribute-reflects="1" name="required" tags="Editing" type="boolean"/>
        <property name="selectionEnd" tags="Editing" type="unsigned long"/>
        <property name="selectionStart" tags="Editing" type="unsigned long"/>
        <property content-attribute="size" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" name="size" tags="CSSOM" type="unsigned long"/>
        <property content-attribute="src" content-attribute-reflects="1" content-attribute-value-syntax="url" name="src" tags="NetworkAccess" type="DOMString"/>
        <property deprecated="1" name="status" tags="Editing" type="boolean"/>
        <property content-attribute="step" content-attribute-enum-values="any" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="step" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="type" content-attribute-enum-values="text hidden search tel url email password month week number range checkbox radio file submit image reset button" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="type" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="usemap" content-attribute-reflects="1" content-attribute-value-syntax="hash_name_ref" name="useMap" tags="CSSOM" type="DOMString"/>
        <property name="validationMessage" read-only="1" tags="Editing" type="DOMString"/>
        <property name="validity" read-only="1" tags="Editing" type="ValidityState"/>
        <property name="value" tags="TreeIdentity" type="DOMString"/>
        <property name="valueAsDate" type="Date"/>
        <property name="valueAsNumber" tags="TreeIdentity" type="double"/>
        <property content-attribute="vspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="vspace" tags="CSSOM" type="long"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="DOMString"/>
        <property name="willValidate" read-only="1" tags="Editing" type="boolean"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLIsIndexElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="isindex" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="action" content-attribute-reflects="1" content-attribute-value-syntax="url" deprecated="1" name="action" tags="TreeIdentity" type="DOMString"/>
        <property deprecated="1" name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property content-attribute="prompt" content-attribute-reflects="1" deprecated="1" name="prompt" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLLIElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="li" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="type" content-attribute-enum-values="1 a A i I disc circle square" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="type" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="value" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" name="value" tags="TreeIdentity" type="long"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLLabelElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="label" namespace="HTML" specs="HTML5"/>
      <properties>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property content-attribute="for" content-attribute-reflects="1" content-attribute-value-syntax="id_ref" name="htmlFor" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLLegendElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="legend" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="bottom center left right top" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLLinkElement">
      <element html-self-closing="1" name="link" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="async" name="error" specs="HTML5" type="Event"/>
        <event dispatch="async" follows="readystatechange" name="load" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="async" name="readystatechange" precedes="load" specs="none" tags="IEOnly" type="Event"/>
      </events>
      <implements>LinkStyle</implements>
      <properties>
        <property content-attribute="charset" content-attribute-reflects="1" content-attribute-value-syntax="character_encoding" name="charset" tags="Parsing" type="DOMString"/>
        <property content-attribute="disabled" content-attribute-boolean="1" content-attribute-reflects="1" name="disabled" type="boolean"/>
        <property content-attribute="href" content-attribute-reflects="1" content-attribute-value-syntax="url" name="href" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="hreflang" content-attribute-reflects="1" content-attribute-value-syntax="bcp47_lang" name="hreflang" tags="Accessibility" type="DOMString"/>
        <property content-attribute="media" content-attribute-reflects="1" content-attribute-value-syntax="media_query" name="media" tags="CSSOM" type="DOMString"/>
        <property content-attribute="rel" content-attribute-enum-values="alternate appendix bookmark chapter contents copyright dns-prefetch entry-content feedurl glossary help index next offline prefetch preload prev search section start stylesheet subsection shortcut_icon" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_enums" name="rel" tags="CSSOM" type="DOMString"/>
        <property content-attribute="rev" content-attribute-enum-values="alternate appendix bookmark chapter contents copyright glossary help index next prev section start stylesheet subsection" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_enums" name="rev" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="target" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="target" type="DOMString"/>
        <property content-attribute="type" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="type" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLMapElement">
      <element name="map" namespace="HTML" specs="HTML5"/>
      <properties>
        <property name="areas" read-only="1" tags="TreeNavigation" type="HTMLAreasCollection"/>
        <property content-attribute="name" content-attribute-reflects="1" name="name" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLMarqueeElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="marquee" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="sync" follows="start" name="bounce" precedes="finish" specs="none" tags="IEOnly" type="Event"/>
        <event dispatch="sync" name="start" precedes="bounce finish" specs="none" tags="IEOnly" type="Event"/>
        <event dispatch="sync" follows="start bounce" name="finish" specs="none" tags="IEOnly" type="Event"/>
      </events>
      <methods>
        <method name="start" tags="Events" type="void"/>
        <method name="stop" tags="Events" type="void"/>
      </methods>
      <properties>
        <property content-attribute="behavior" content-attribute-enum-values="scroll slide alternate" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="behavior" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="bgcolor" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="bgColor" tags="CSSOM" type="any"/>
        <property content-attribute="direction" content-attribute-enum-values="left right up down" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="direction" tags="CSSOM" type="DOMString"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" tags="CSSOM" type="DOMString"/>
        <property content-attribute="hspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="hspace" tags="CSSOM" type="long"/>
        <property content-attribute="loop" content-attribute-boolean="1" content-attribute-reflects="1" name="loop" tags="TreeIdentity" type="long"/>
        <property content-attribute="onbounce" content-attribute-value-syntax="javascript" event-handler="bounce" name="onbounce" type="EventHandler"/>
        <property content-attribute="onfinish" content-attribute-value-syntax="javascript" event-handler="finish" name="onfinish" type="EventHandler"/>
        <property content-attribute="onstart" content-attribute-value-syntax="javascript" event-handler="start" name="onstart" type="EventHandler"/>
        <property content-attribute="scrollamount" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="scrollAmount" tags="CSSOM" type="unsigned long"/>
        <property content-attribute="scrolldelay" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="scrollDelay" tags="CSSOM" type="unsigned long"/>
        <property content-attribute="truespeed" content-attribute-boolean="1" content-attribute-reflects="1" name="trueSpeed" tags="TreeIdentity" type="boolean"/>
        <property content-attribute="vspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="vspace" tags="CSSOM" type="long"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLMediaElement">
      <constants>
        <constant name="HAVE_CURRENT_DATA" type="unsigned short" value="2"/>
        <constant name="HAVE_ENOUGH_DATA" type="unsigned short" value="4"/>
        <constant name="HAVE_FUTURE_DATA" type="unsigned short" value="3"/>
        <constant name="HAVE_METADATA" type="unsigned short" value="1"/>
        <constant name="HAVE_NOTHING" type="unsigned short" value="0"/>
        <constant name="NETWORK_EMPTY" type="unsigned short" value="0"/>
        <constant name="NETWORK_IDLE" type="unsigned short" value="1"/>
        <constant name="NETWORK_LOADING" type="unsigned short" value="2"/>
        <constant name="NETWORK_NO_SOURCE" type="unsigned short" value="3"/>
      </constants>
      <events>
        <event dispatch="sync" name="loadstart" precedes="progress" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="loadstart" name="progress" precedes="loadedmetadata" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="suspend" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="abort" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="error" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="emptied" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="playing" name="stalled" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="pause" name="play" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="pause" precedes="play" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="loadstart" name="loadedmetadata" precedes="loadeddata waiting seeking" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="loadedmetadata" name="loadeddata" precedes="canplay" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="waiting" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="canplay" name="playing" precedes="stalled" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="loadeddata" name="canplay" precedes="canplaythrough" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="canplay" name="canplaythrough" precedes="ended" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="loadedmetadata" name="seeking" precedes="seeked" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="seeking" name="seeked" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="timeupdate" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="canplaythrough" name="ended" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="ratechange" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="durationchange" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="volumechange" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="msneedkey" specs="none" tags="IEOnly" type="MSMediaKeyNeededEvent"/>
      </events>
      <methods>
        <method name="addTextTrack" type="TextTrack">
          <param name="kind" type="DOMString"/>
          <param name="label" optional="1" type="DOMString"/>
          <param name="language" optional="1" type="DOMString"/>
        </method>
        <method name="canPlayType" type="DOMString">
          <param name="type" type="DOMString"/>
        </method>
        <method name="load" type="void"/>
        <method name="msClearEffects" tags="Media" type="void"/>
        <method name="msGetAsCastingSource" tags="Media" type="any"/>
        <method name="msInsertAudioEffect" tags="Media" type="void">
          <param name="activatableClassId" type="DOMString"/>
          <param name="effectRequired" type="boolean"/>
          <param name="config" optional="1" type="any"/>
        </method>
        <method name="msSetMediaKeys" specs="EME" type="void">
          <param name="mediaKeys" type="MSMediaKeys"/>
        </method>
        <method name="msSetMediaProtectionManager" tags="Media" type="void">
          <param name="mediaProtectionManager" optional="1" type="any"/>
        </method>
        <method name="pause" type="void"/>
        <method name="play" type="void"/>
      </methods>
      <properties>
        <property name="audioTracks" read-only="1" type="AudioTrackList"/>
        <property content-attribute="autoplay" content-attribute-boolean="1" content-attribute-reflects="1" name="autoplay" type="boolean"/>
        <property name="buffered" read-only="1" type="TimeRanges"/>
        <property content-attribute="controls" content-attribute-boolean="1" content-attribute-reflects="1" name="controls" type="boolean"/>
        <property name="currentSrc" read-only="1" type="DOMString"/>
        <property name="currentTime" type="double"/>
        <property content-attribute="muted" content-attribute-boolean="1" content-attribute-reflects="1" name="defaultMuted" type="boolean"/>
        <property name="defaultPlaybackRate" type="double"/>
        <property name="duration" read-only="1" type="double"/>
        <property name="ended" read-only="1" type="boolean"/>
        <property name="error" read-only="1" type="MediaError"/>
        <property content-attribute="loop" content-attribute-boolean="1" content-attribute-reflects="1" name="loop" type="boolean"/>
        <property name="msAudioCategory" type="DOMString"/>
        <property name="msAudioDeviceType" type="DOMString"/>
        <property name="msGraphicsTrustStatus" read-only="1" specs="EME" type="MSGraphicsTrust"/>
        <property name="msKeys" read-only="1" specs="EME" type="MSMediaKeys"/>
        <property content-attribute="x-ms-playtodisabled" content-attribute-boolean="1" content-attribute-reflects="1" name="msPlayToDisabled" tags="Media" type="boolean"/>
        <property content-attribute="x-ms-playtopreferredsourceuri" content-attribute-reflects="1" content-attribute-value-syntax="url" name="msPlayToPreferredSourceUri" tags="Media" type="DOMString"/>
        <property content-attribute="x-ms-playtoprimary" content-attribute-boolean="1" content-attribute-reflects="1" name="msPlayToPrimary" tags="Media" type="boolean"/>
        <property name="msPlayToSource" read-only="1" tags="Media" type="any"/>
        <property name="msRealTime" type="boolean"/>
        <property name="muted" type="boolean"/>
        <property name="networkState" read-only="1" type="unsigned short"/>
        <property event-handler="msneedkey" name="onmsneedkey" type="EventHandler"/>
        <property name="paused" read-only="1" type="boolean"/>
        <property name="playbackRate" type="double"/>
        <property name="played" read-only="1" type="TimeRanges"/>
        <property content-attribute="preload" content-attribute-enum-values="none metadata auto" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="preload" type="DOMString"/>
        <property name="readyState" read-only="1" type="any"/>
        <property name="seekable" read-only="1" type="TimeRanges"/>
        <property name="seeking" read-only="1" type="boolean"/>
        <property content-attribute="src" content-attribute-reflects="1" content-attribute-value-syntax="url" name="src" type="DOMString"/>
        <property name="textTracks" read-only="1" type="TextTrackList"/>
        <property name="videoTracks" read-only="1" type="VideoTrackList"/>
        <property name="volume" type="double"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLMenuElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="menu" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="compact" content-attribute-boolean="1" content-attribute-reflects="1" name="compact" tags="CSSOM" type="boolean"/>
        <property content-attribute="type" content-attribute-enum-values="1 a A i I disc circle square" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="type" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLMetaElement">
      <element html-self-closing="1" name="meta" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="charset" content-attribute-reflects="1" content-attribute-value-syntax="character_encoding" deprecated="1" name="charset" tags="Parsing" type="DOMString"/>
        <property content-attribute="content" content-attribute-reflects="1" name="content" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="http-equiv" content-attribute-reflects="1" name="httpEquiv" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="name" content-attribute-reflects="1" name="name" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="scheme" content-attribute-reflects="1" name="scheme" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="url" content-attribute-reflects="1" content-attribute-value-syntax="url" deprecated="1" name="url" tags="NetworkAccess" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLModElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="ins" namespace="HTML" specs="HTML5"/>
      <element name="del" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="cite" content-attribute-reflects="1" content-attribute-value-syntax="url" name="cite" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="datetime" content-attribute-reflects="1" content-attribute-value-syntax="date_time" name="dateTime" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLNextIdElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="nextid" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="n" content-attribute-reflects="1" name="n" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLOListElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="ol" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="compact" content-attribute-boolean="1" content-attribute-reflects="1" name="compact" tags="CSSOM" type="boolean"/>
        <property content-attribute="start" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" name="start" tags="CSSOM" type="long"/>
        <property content-attribute="type" content-attribute-enum-values="1 a A i I disc circle square" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="type" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLObjectElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="object" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="async" name="load" skips-window="1" specs="HTML5" tags="ObjectAsImageOnly" type="Event"/>
        <event dispatch="sync" name="abort" specs="none" tags="ObjectAsImageOnly IEOnly" type="UIEvent"/>
      </events>
      <implements>GetSVGDocument</implements>
      <methods>
        <method name="checkValidity" tags="Editing" type="boolean"/>
        <method name="setCustomValidity" tags="Editing" type="void">
          <param name="error" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property deprecated="1" name="BaseHref" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="align" content-attribute-enum-values="absbottom absmiddle baseline bottom left middle right texttop top" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="alt" content-attribute-reflects="1" name="alt" tags="Accessibility" type="DOMString"/>
        <property deprecated="1" name="altHtml" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="archive" content-attribute-reflects="1" name="archive" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="border" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="border" tags="CSSOM" type="DOMString"/>
        <property content-attribute="code" content-attribute-reflects="1" content-attribute-value-syntax="url" name="code" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="codebase" content-attribute-reflects="1" content-attribute-value-syntax="url" name="codeBase" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="codetype" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="codeType" tags="NetworkAccess" type="DOMString"/>
        <property name="contentDocument" read-only="1" tags="TreeNavigation" type="Document"/>
        <property content-attribute="data" content-attribute-reflects="1" content-attribute-value-syntax="url" name="data" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="declare" content-attribute-reflects="1" name="declare" tags="TreeIdentity" type="boolean"/>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" tags="CSSOM" type="DOMString"/>
        <property content-attribute="hspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="hspace" tags="CSSOM" type="long"/>
        <property content-attribute="x-ms-playtodisabled" content-attribute-boolean="1" content-attribute-reflects="1" name="msPlayToDisabled" tags="Media" type="boolean"/>
        <property content-attribute="x-ms-playtopreferredsourceuri" content-attribute-reflects="1" content-attribute-value-syntax="url" name="msPlayToPreferredSourceUri" tags="Media" type="DOMString"/>
        <property content-attribute="x-ms-playtoprimary" content-attribute-boolean="1" content-attribute-reflects="1" name="msPlayToPrimary" tags="Media" type="boolean"/>
        <property name="msPlayToSource" read-only="1" tags="Media" type="any"/>
        <property content-attribute="name" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="name" tags="TreeIdentity" type="DOMString"/>
        <property name="object" read-only="1" tags="TreeNavigation" type="object"/>
        <property name="readyState" read-only="1" type="unsigned short"/>
        <property content-attribute="standby" content-attribute-reflects="1" name="standby" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="type" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="type" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="usemap" content-attribute-reflects="1" content-attribute-value-syntax="hash_name_ref" name="useMap" tags="CSSOM" type="DOMString"/>
        <property name="validationMessage" read-only="1" tags="Editing" type="DOMString"/>
        <property name="validity" read-only="1" tags="Editing" type="ValidityState"/>
        <property content-attribute="vspace" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="vspace" tags="CSSOM" type="long"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="DOMString"/>
        <property name="willValidate" read-only="1" tags="Editing" type="boolean"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLOptGroupElement">
      <element name="optgroup" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="selected" content-attribute-boolean="1" content-attribute-reflects="1" deprecated="1" name="defaultSelected" tags="TreeIdentity" type="boolean"/>
        <property content-attribute="disabled" content-attribute-boolean="1" content-attribute-reflects="1" name="disabled" type="boolean"/>
        <property deprecated="1" name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property deprecated="1" name="index" read-only="1" tags="TreeIdentity" type="long"/>
        <property content-attribute="label" content-attribute-reflects="1" name="label" tags="TreeIdentity" type="DOMString"/>
        <property deprecated="1" name="selected" tags="TreeIdentity" type="boolean"/>
        <property deprecated="1" name="text" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="value" content-attribute-reflects="1" deprecated="1" name="value" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLOptionElement">
      <element name="option" namespace="HTML" specs="HTML5"/>
      <methods>
        <method name="create" static="1" type="HTMLOptionElement"/>
      </methods>
      <named-constructor name="Option">
        <param name="text" optional="1" type="DOMString"/>
        <param name="value" optional="1" type="DOMString"/>
        <param name="defaultSelected" optional="1" type="boolean"/>
        <param name="selected" optional="1" type="boolean"/>
      </named-constructor>
      <properties>
        <property content-attribute="selected" content-attribute-boolean="1" content-attribute-reflects="1" name="defaultSelected" tags="TreeIdentity" type="boolean"/>
        <property content-attribute="disabled" content-attribute-boolean="1" content-attribute-reflects="1" name="disabled" type="boolean"/>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property name="index" read-only="1" tags="TreeIdentity" type="long"/>
        <property content-attribute="label" content-attribute-reflects="1" name="label" tags="TreeIdentity" type="DOMString"/>
        <property name="selected" tags="TreeIdentity" type="boolean"/>
        <property name="text" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="value" content-attribute-reflects="1" name="value" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLParagraphElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="p" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="center justify left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="clear" content-attribute-enum-values="all left right none" content-attribute-reflects="1" content-attribute-value-syntax="enum" deprecated="1" name="clear" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLParamElement">
      <element html-self-closing="1" name="param" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="name" content-attribute-reflects="1" name="name" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="type" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="type" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="value" content-attribute-reflects="1" name="value" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="valuetype" content-attribute-enum-values="data ref object" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="valueType" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLPhraseElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="abbr" namespace="HTML" specs="HTML5"/>
      <element name="acronym" namespace="HTML" specs="HTML5"/>
      <element name="b" namespace="HTML" specs="HTML5"/>
      <element name="bdo" namespace="HTML" specs="HTML5"/>
      <element name="big" namespace="HTML" specs="HTML5"/>
      <element name="cite" namespace="HTML" specs="HTML5"/>
      <element name="code" namespace="HTML" specs="HTML5"/>
      <element name="dfn" namespace="HTML" specs="HTML5"/>
      <element name="em" namespace="HTML" specs="HTML5"/>
      <element name="i" namespace="HTML" specs="HTML5"/>
      <element name="kbd" namespace="HTML" specs="HTML5"/>
      <element name="nobr" namespace="HTML" specs="HTML5"/>
      <element name="rt" namespace="HTML" specs="HTML5"/>
      <element name="ruby" namespace="HTML" specs="HTML5"/>
      <element name="s" namespace="HTML" specs="HTML5"/>
      <element name="samp" namespace="HTML" specs="HTML5"/>
      <element name="small" namespace="HTML" specs="HTML5"/>
      <element name="strike" namespace="HTML" specs="HTML5"/>
      <element name="strong" namespace="HTML" specs="HTML5"/>
      <element name="sub" namespace="HTML" specs="HTML5"/>
      <element name="sup" namespace="HTML" specs="HTML5"/>
      <element name="tt" namespace="HTML" specs="HTML5"/>
      <element name="u" namespace="HTML" specs="HTML5"/>
      <element name="var" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="cite" content-attribute-reflects="1" content-attribute-value-syntax="url" name="cite" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="datetime" content-attribute-reflects="1" content-attribute-value-syntax="date_time" name="dateTime" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLPreElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="pre" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="cite" content-attribute-reflects="1" content-attribute-value-syntax="url" deprecated="1" name="cite" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="clear" content-attribute-enum-values="all left right none" content-attribute-reflects="1" content-attribute-value-syntax="enum" deprecated="1" name="clear" tags="CSSOM" type="DOMString"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="long"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLProgressElement">
      <element name="progress" namespace="HTML" specs="HTML5"/>
      <properties>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property content-attribute="max" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="max" tags="TreeIdentity" type="float"/>
        <property name="position" read-only="1" tags="TreeIdentity" type="float"/>
        <property content-attribute="value" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="value" tags="TreeIdentity" type="float"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLQuoteElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="q" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="cite" content-attribute-reflects="1" content-attribute-value-syntax="url" name="cite" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="datetime" content-attribute-reflects="1" content-attribute-value-syntax="date_time" deprecated="1" name="dateTime" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLScriptElement" tags="NetworkAccess">
      <element name="script" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="sync" name="error" specs="HTML5" type="Event"/>
        <event dispatch="async" name="load" skips-window="1" specs="HTML5" type="Event"/>
      </events>
      <properties>
        <property content-attribute="async" content-attribute-boolean="1" content-attribute-reflects="1" name="async" tags="Parsing" type="boolean"/>
        <property content-attribute="charset" content-attribute-reflects="1" content-attribute-value-syntax="character_encoding" name="charset" tags="Parsing" type="DOMString"/>
        <property content-attribute="defer" content-attribute-boolean="1" content-attribute-reflects="1" name="defer" tags="Parsing" type="boolean"/>
        <property content-attribute="event" content-attribute-enum-values="onload onload()" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="event" tags="Events" type="DOMString"/>
        <property content-attribute="for" content-attribute-enum-values="window" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="htmlFor" tags="Events" type="DOMString"/>
        <property content-attribute="src" content-attribute-reflects="1" content-attribute-value-syntax="url" name="src" tags="NetworkAccess" type="DOMString"/>
        <property name="text" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="type" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="type" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLSelectElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="select" namespace="HTML" specs="HTML5"/>
      <events>
        <event bubbles="1" dispatch="sync" name="change" specs="HTML5" type="Event"/>
        <event cancelable="1" dispatch="sync" name="invalid" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="add" tags="TreeMutation" type="void">
          <param name="element" type="HTMLElement"/>
          <param name="before" optional="1" type="(HTMLElement or long)"/>
        </method>
        <method name="checkValidity" tags="Editing" type="boolean"/>
        <method getter="1" legacy-caller="1" name="item" tags="TreeNavigation" type="any">
          <param name="name" optional="1" type="any"/>
          <param name="index" optional="1" type="any"/>
        </method>
        <method getter="1" legacy-caller="1" name="namedItem" tags="TreeNavigation" type="any">
          <param name="name" type="DOMString"/>
        </method>
        <method name="remove" tags="TreeMutation" type="void">
          <param default="-1" name="index" optional="1" type="long"/>
        </method>
        <method name="setCustomValidity" tags="Editing" type="void">
          <param name="error" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="autofocus" content-attribute-boolean="1" content-attribute-reflects="1" name="autofocus" tags="Editing" type="boolean"/>
        <property content-attribute="disabled" content-attribute-boolean="1" content-attribute-reflects="1" name="disabled" type="boolean"/>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property name="length" tags="TreeNavigation" type="unsigned long"/>
        <property content-attribute="multiple" content-attribute-boolean="1" content-attribute-reflects="1" name="multiple" tags="TreeIdentity" type="boolean"/>
        <property content-attribute="name" content-attribute-reflects="1" name="name" tags="TreeIdentity" type="DOMString"/>
        <property name="options" read-only="1" tags="TreeNavigation" type="HTMLSelectElement"/>
        <property content-attribute="required" content-attribute-boolean="1" content-attribute-reflects="1" name="required" tags="Editing" type="boolean"/>
        <property name="selectedIndex" tags="TreeIdentity" type="long"/>
        <property content-attribute="size" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" name="size" tags="CSSOM" type="unsigned long"/>
        <property name="type" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property name="validationMessage" read-only="1" tags="Editing" type="DOMString"/>
        <property name="validity" read-only="1" tags="Editing" type="ValidityState"/>
        <property name="value" tags="TreeIdentity" type="DOMString"/>
        <property name="willValidate" read-only="1" tags="Editing" type="boolean"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLSourceElement">
      <element html-self-closing="1" name="source" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="media" content-attribute-reflects="1" content-attribute-value-syntax="media_query" name="media" type="DOMString"/>
        <property name="msKeySystem" specs="EME" type="DOMString"/>
        <property content-attribute="src" content-attribute-reflects="1" content-attribute-value-syntax="url" name="src" type="DOMString"/>
        <property content-attribute="type" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="type" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLSpanElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="span" namespace="HTML" specs="HTML5"/>
    </interface>
    <interface extends="HTMLElement" name="HTMLStyleElement">
      <element name="style" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="async" name="error" specs="HTML5" type="Event"/>
        <event dispatch="async" follows="readystatechange" name="load" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="async" name="readystatechange" precedes="load" specs="none" tags="IEOnly" type="Event"/>
      </events>
      <implements>LinkStyle</implements>
      <properties>
        <property content-attribute="media" content-attribute-reflects="1" content-attribute-value-syntax="media_query" name="media" tags="CSSOM" type="DOMString"/>
        <property content-attribute="type" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="type" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLTableCaptionElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="caption" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="bottom center left right top" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="valign" content-attribute-enum-values="top bottom" content-attribute-reflects="1" content-attribute-value-syntax="enum" deprecated="1" name="vAlign" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLTableCellElement">
      <implements>HTMLTableAlignment</implements>
      <properties>
        <property content-attribute="abbr" content-attribute-reflects="1" name="abbr" tags="TableOM" type="DOMString"/>
        <property content-attribute="align" content-attribute-enum-values="center justify left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="axis" content-attribute-reflects="1" name="axis" tags="CSSOM" type="DOMString"/>
        <property content-attribute="bgcolor" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="bgColor" tags="CSSOM" type="any"/>
        <property name="cellIndex" read-only="1" tags="TableOM" type="long"/>
        <property content-attribute="colspan" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" name="colSpan" tags="TableOM" type="unsigned long"/>
        <property content-attribute="headers" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_id_refs" name="headers" tags="TableOM" type="DOMString"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="height" tags="CSSOM" type="any"/>
        <property content-attribute="nowrap" content-attribute-boolean="1" content-attribute-reflects="1" name="noWrap" tags="CSSOM" type="boolean"/>
        <property content-attribute="rowspan" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="rowSpan" tags="TableOM" type="unsigned long"/>
        <property content-attribute="scope" content-attribute-enum-values="row col rowgroup colgroup" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="scope" tags="TableOM" type="DOMString"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLTableColElement">
      <element html-self-closing="1" name="col" namespace="HTML" specs="HTML5"/>
      <element name="colgroup" namespace="HTML" specs="HTML5"/>
      <implements>HTMLTableAlignment</implements>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="center justify left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="span" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" name="span" tags="TableOM" type="unsigned long"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="any"/>
      </properties>
    </interface>
    <interface extends="HTMLTableCellElement" name="HTMLTableDataCellElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="td" namespace="HTML" specs="HTML5"/>
    </interface>
    <interface extends="HTMLElement" name="HTMLTableElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="table" namespace="HTML" specs="HTML5"/>
      <methods>
        <method name="createCaption" tags="TableOM" type="HTMLElement"/>
        <method name="createTBody" tags="TableOM" type="HTMLElement"/>
        <method name="createTFoot" tags="TableOM" type="HTMLElement"/>
        <method name="createTHead" tags="TableOM" type="HTMLElement"/>
        <method name="deleteCaption" tags="TableOM" type="void"/>
        <method name="deleteRow" tags="TableOM" type="void">
          <param default="-1" name="index" optional="1" type="long"/>
        </method>
        <method name="deleteTFoot" tags="TableOM" type="void"/>
        <method name="deleteTHead" tags="TableOM" type="void"/>
        <method name="insertRow" tags="TableOM" type="HTMLElement">
          <param default="-1" name="index" optional="1" type="long"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="center left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="bgcolor" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="bgColor" tags="CSSOM" type="any"/>
        <property content-attribute="border" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="border" tags="CSSOM" type="DOMString"/>
        <property content-attribute="bordercolor" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="borderColor" tags="CSSOM" type="any"/>
        <property name="caption" tags="TableOM" type="HTMLTableCaptionElement"/>
        <property content-attribute="cellpadding" content-attribute-reflects="1" content-attribute-value-syntax="integer_or_percentage" name="cellPadding" tags="CSSOM" type="DOMString"/>
        <property content-attribute="cellspacing" content-attribute-reflects="1" content-attribute-value-syntax="integer_or_percentage" name="cellSpacing" tags="CSSOM" type="DOMString"/>
        <property content-attribute="cols" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" deprecated="1" name="cols" tags="CSSOM" type="long"/>
        <property content-attribute="frame" content-attribute-enum-values="void above below border box hsides lhs rhs vsides" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="frame" tags="TableOM" type="DOMString"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="height" tags="CSSOM" type="any"/>
        <property name="rows" read-only="1" tags="TableOM" type="HTMLCollection"/>
        <property content-attribute="rules" content-attribute-enum-values="all cols groups none rows" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="rules" tags="TableOM" type="DOMString"/>
        <property content-attribute="summary" content-attribute-reflects="1" name="summary" tags="TableOM" type="DOMString"/>
        <property name="tBodies" read-only="1" tags="TableOM" type="HTMLCollection"/>
        <property name="tFoot" tags="TableOM" type="HTMLTableSectionElement"/>
        <property name="tHead" tags="TableOM" type="HTMLTableSectionElement"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLTableCellElement" name="HTMLTableHeaderCellElement">
      <element name="th" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="scope" content-attribute-enum-values="row col rowgroup colgroup" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="scope" tags="TableOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLTableRowElement">
      <element name="tr" namespace="HTML" specs="HTML5"/>
      <implements>HTMLTableAlignment</implements>
      <methods>
        <method name="deleteCell" tags="TableOM" type="void">
          <param default="-1" name="index" optional="1" type="long"/>
        </method>
        <method name="insertCell" tags="TableOM" type="HTMLElement">
          <param default="-1" name="index" optional="1" type="long"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="center justify left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property content-attribute="bgcolor" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" deprecated="1" name="bgColor" tags="CSSOM" type="any"/>
        <property name="cells" read-only="1" tags="TableOM" type="HTMLCollection"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" deprecated="1" name="height" tags="CSSOM" type="any"/>
        <property name="rowIndex" read-only="1" tags="TableOM" type="long"/>
        <property name="sectionRowIndex" read-only="1" tags="TableOM" type="long"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLTableSectionElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="thead" namespace="HTML" specs="HTML5"/>
      <element name="tbody" namespace="HTML" specs="HTML5"/>
      <element name="tfoot" namespace="HTML" specs="HTML5"/>
      <implements>HTMLTableAlignment</implements>
      <methods>
        <method name="deleteRow" tags="TableOM" type="void">
          <param default="-1" name="index" optional="1" type="long"/>
        </method>
        <method name="insertRow" tags="TableOM" type="HTMLElement">
          <param default="-1" name="index" optional="1" type="long"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="align" content-attribute-enum-values="center justify left right" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="align" tags="CSSOM" type="DOMString"/>
        <property name="rows" read-only="1" tags="TableOM" type="HTMLCollection"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLTextAreaElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="textarea" namespace="HTML" specs="HTML5"/>
      <events>
        <event bubbles="1" dispatch="sync" name="change" specs="HTML5" type="Event"/>
        <event bubbles="1" dispatch="async" name="input" specs="HTML5" type="Event"/>
        <event cancelable="1" dispatch="sync" name="invalid" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="checkValidity" tags="Editing" type="boolean"/>
        <method deprecated="1" name="createTextRange" tags="Editing" type="TextRange"/>
        <method name="select" tags="Editing" type="void"/>
        <method name="setCustomValidity" tags="Editing" type="void">
          <param name="error" type="DOMString"/>
        </method>
        <method name="setSelectionRange" tags="Editing" type="void">
          <param name="start" type="unsigned long"/>
          <param name="end" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="autofocus" content-attribute-boolean="1" content-attribute-reflects="1" name="autofocus" tags="Editing" type="boolean"/>
        <property content-attribute="cols" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" name="cols" tags="CSSOM" type="unsigned long"/>
        <property content-attribute="value" content-attribute-reflects="1" name="defaultValue" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="disabled" content-attribute-boolean="1" content-attribute-reflects="1" name="disabled" type="boolean"/>
        <property name="form" read-only="1" tags="TreeNavigation" type="HTMLFormElement"/>
        <property content-attribute="maxlength" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="maxLength" tags="Editing" type="long"/>
        <property content-attribute="name" content-attribute-reflects="1" name="name" tags="TreeIdentity" type="DOMString"/>
        <property content-attribute="placeholder" content-attribute-reflects="1" name="placeholder" tags="Editing" type="DOMString"/>
        <property content-attribute="readonly" content-attribute-boolean="1" content-attribute-reflects="1" name="readOnly" tags="Editing" type="boolean"/>
        <property content-attribute="required" content-attribute-boolean="1" content-attribute-reflects="1" name="required" tags="Editing" type="boolean"/>
        <property content-attribute="rows" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" name="rows" tags="CSSOM" type="unsigned long"/>
        <property name="selectionEnd" tags="Editing" type="unsigned long"/>
        <property name="selectionStart" tags="Editing" type="unsigned long"/>
        <property deprecated="1" name="status" tags="Editing" type="any"/>
        <property name="type" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property name="validationMessage" read-only="1" tags="Editing" type="DOMString"/>
        <property name="validity" read-only="1" tags="Editing" type="ValidityState"/>
        <property name="value" tags="TreeIdentity" type="DOMString"/>
        <property name="willValidate" read-only="1" tags="Editing" type="boolean"/>
        <property content-attribute="wrap" content-attribute-enum-values="soft hard off" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="wrap" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLTitleElement">
      <element name="title" namespace="HTML" specs="HTML5"/>
      <properties>
        <property name="text" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLTrackElement" tags="Media">
      <constants>
        <constant name="ERROR" tags="Media" type="unsigned short" value="3"/>
        <constant name="LOADED" tags="Media" type="unsigned short" value="2"/>
        <constant name="LOADING" tags="Media" type="unsigned short" value="1"/>
        <constant name="NONE" tags="Media" type="unsigned short" value="0"/>
      </constants>
      <element html-self-closing="1" name="track" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="sync" name="cuechange" specs="HTML5" type="Event"/>
      </events>
      <properties>
        <property content-attribute="default" content-attribute-boolean="1" content-attribute-reflects="1" name="default" tags="Media" type="boolean"/>
        <property content-attribute="kind" content-attribute-enum-values="subtitles captions descriptions chapters metadata" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="kind" tags="Media" type="DOMString"/>
        <property content-attribute="label" content-attribute-reflects="1" name="label" tags="Media" type="DOMString"/>
        <property name="readyState" read-only="1" tags="Media" type="unsigned short"/>
        <property content-attribute="src" content-attribute-reflects="1" content-attribute-value-syntax="url" name="src" tags="NetworkAccess" type="DOMString"/>
        <property content-attribute="srclang" content-attribute-reflects="1" content-attribute-value-syntax="bcp47_lang" name="srclang" tags="Media" type="DOMString"/>
        <property name="track" read-only="1" tags="Media" type="TextTrack"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLUListElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="ul" namespace="HTML" specs="HTML5"/>
      <properties>
        <property content-attribute="compact" content-attribute-boolean="1" content-attribute-reflects="1" name="compact" tags="CSSOM" type="boolean"/>
        <property content-attribute="type" content-attribute-enum-values="1 a A i I disc circle square" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="type" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="HTMLUnknownElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="off on" name="unselectable" value-syntax="enum"/>
      </anonymous-content-attributes>
    </interface>
    <interface extends="HTMLMediaElement" name="HTMLVideoElement">
      <element name="video" namespace="HTML" specs="HTML5"/>
      <events>
        <event dispatch="sync" name="MSVideoFrameStepCompleted" specs="none" tags="MSAppOnly" type="Event"/>
        <event dispatch="sync" name="MSVideoFormatChanged" specs="none" tags="MSAppOnly" type="Event"/>
        <event dispatch="sync" name="MSVideoOptimalLayoutChanged" specs="none" tags="MSAppOnly" type="Event"/>
        <event dispatch="async" name="resize" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="getVideoPlaybackQuality" specs="MSE" type="VideoPlaybackQuality"/>
        <method name="msFrameStep" tags="Media" type="void">
          <param name="forward" type="boolean"/>
        </method>
        <method name="msInsertVideoEffect" tags="Media" type="void">
          <param name="activatableClassId" type="DOMString"/>
          <param name="effectRequired" type="boolean"/>
          <param name="config" optional="1" type="any"/>
        </method>
        <method name="msSetVideoRectangle" tags="Media" type="void">
          <param name="left" type="float"/>
          <param name="top" type="float"/>
          <param name="right" type="float"/>
          <param name="bottom" type="float"/>
        </method>
        <method name="webkitEnterFullScreen" tags="Fullscreen" type="void"/>
        <method name="webkitEnterFullscreen" tags="Fullscreen" type="void"/>
        <method name="webkitExitFullScreen" tags="Fullscreen" type="void"/>
        <method name="webkitExitFullscreen" tags="Fullscreen" type="void"/>
      </methods>
      <properties>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" tags="CSSOM" type="unsigned long"/>
        <property name="msHorizontalMirror" tags="Media" type="boolean"/>
        <property name="msIsLayoutOptimalForPlayback" read-only="1" tags="Media" type="boolean"/>
        <property name="msIsStereo3D" read-only="1" tags="Media" type="boolean"/>
        <property name="msStereo3DPackingMode" tags="Media" type="DOMString"/>
        <property name="msStereo3DRenderMode" tags="Media" type="DOMString"/>
        <property name="msZoom" tags="Media" type="boolean"/>
        <property event-handler="MSVideoFormatChanged" name="onMSVideoFormatChanged" type="EventHandler"/>
        <property event-handler="MSVideoFrameStepCompleted" name="onMSVideoFrameStepCompleted" type="EventHandler"/>
        <property event-handler="MSVideoOptimalLayoutChanged" name="onMSVideoOptimalLayoutChanged" type="EventHandler"/>
        <property content-attribute="poster" content-attribute-reflects="1" content-attribute-value-syntax="url" name="poster" type="DOMString"/>
        <property name="videoHeight" read-only="1" type="unsigned long"/>
        <property name="videoWidth" read-only="1" type="unsigned long"/>
        <property name="webkitDisplayingFullscreen" read-only="1" tags="Fullscreen" type="bool"/>
        <property name="webkitSupportsFullscreen" read-only="1" tags="Fullscreen" type="bool"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="CSSOM" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="History">
      <methods>
        <method name="back" tags="NetworkAccess" type="void">
          <param name="distance" optional="1" type="any"/>
        </method>
        <method name="forward" tags="NetworkAccess" type="void">
          <param name="distance" optional="1" type="any"/>
        </method>
        <method name="go" tags="NetworkAccess" type="void">
          <param name="delta" optional="1" type="any"/>
        </method>
        <method name="pushState" tags="NetworkAccess" type="void">
          <param name="statedata" type="any"/>
          <param name="title" optional="1" type="DOMString"/>
          <param name="url" optional="1" type="DOMString"/>
        </method>
        <method name="replaceState" tags="NetworkAccess" type="void">
          <param name="statedata" type="any"/>
          <param name="title" optional="1" type="DOMString"/>
          <param name="url" optional="1" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="NetworkAccess" type="long"/>
        <property name="state" read-only="1" tags="NetworkAccess" type="any"/>
      </properties>
    </interface>
    <interface extends="Object" name="IDBCursor">
      <constants>
        <constant name="NEXT" type="DOMString" value="next"/>
        <constant name="NEXT_NO_DUPLICATE" type="DOMString" value="nextunique"/>
        <constant name="PREV" type="DOMString" value="prev"/>
        <constant name="PREV_NO_DUPLICATE" type="DOMString" value="prevunique"/>
      </constants>
      <methods>
        <method name="advance" tags="IndexedDB" type="void">
          <param name="count" type="long"/>
        </method>
        <method name="continue" tags="IndexedDB" type="void">
          <param default="0" name="key" optional="1" type="any"/>
        </method>
        <method name="delete" tags="IndexedDB" type="IDBRequest"/>
        <method name="update" tags="IndexedDB" type="IDBRequest">
          <param name="value" type="any"/>
        </method>
      </methods>
      <properties>
        <property name="direction" read-only="1" tags="IndexedDB" type="DOMString"/>
        <property name="key" read-only="1" tags="IndexedDB" type="any"/>
        <property name="primaryKey" read-only="1" tags="IndexedDB" type="any"/>
        <property name="source" read-only="1" tags="IndexedDB" type="any"/>
      </properties>
    </interface>
    <interface extends="IDBCursor" name="IDBCursorWithValue">
      <properties>
        <property name="value" read-only="1" tags="IndexedDB" type="any"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="IDBDatabase">
      <events>
        <event dispatch="sync" name="error" skips-window="1" specs="IDB" type="Event"/>
        <event dispatch="sync" name="abort" skips-window="1" specs="IDB" type="Event"/>
      </events>
      <methods>
        <method name="close" tags="IndexedDB" type="void"/>
        <method name="createObjectStore" tags="IndexedDB" type="IDBObjectStore">
          <param name="name" type="DOMString"/>
          <param default="0" name="optionalParameters" optional="1" type="any"/>
        </method>
        <method name="deleteObjectStore" tags="IndexedDB" type="void">
          <param name="name" type="DOMString"/>
        </method>
        <method name="transaction" tags="IndexedDB" type="IDBTransaction">
          <param name="storeNames" type="any"/>
          <param default="&quot;readonly&quot;" name="mode" optional="1" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="name" read-only="1" tags="IndexedDB" type="DOMString"/>
        <property name="objectStoreNames" read-only="1" tags="IndexedDB" type="DOMStringList"/>
        <property event-handler="abort" name="onabort" type="EventHandler"/>
        <property event-handler="error" name="onerror" type="EventHandler"/>
        <property name="version" read-only="1" tags="IndexedDB" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="IDBFactory">
      <methods>
        <method name="cmp" tags="IndexedDB" type="short">
          <param name="first" type="any"/>
          <param name="second" type="any"/>
        </method>
        <method name="deleteDatabase" tags="IndexedDB" type="IDBOpenDBRequest">
          <param name="name" type="DOMString"/>
        </method>
        <method name="open" tags="IndexedDB" type="IDBOpenDBRequest">
          <param name="name" type="DOMString"/>
          <param default="-1" name="version" optional="1" type="signed long long"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="IDBIndex">
      <methods>
        <method name="count" tags="IndexedDB" type="IDBRequest">
          <param name="key" optional="1" type="any"/>
        </method>
        <method name="get" tags="IndexedDB" type="IDBRequest">
          <param name="key" type="any"/>
        </method>
        <method name="getKey" tags="IndexedDB" type="IDBRequest">
          <param name="key" type="any"/>
        </method>
        <method name="openCursor" tags="IndexedDB" type="IDBRequest">
          <param default="0" name="range" optional="1" type="IDBKeyRange"/>
          <param default="&quot;next&quot;" name="direction" optional="1" type="DOMString"/>
        </method>
        <method name="openKeyCursor" tags="IndexedDB" type="IDBRequest">
          <param default="0" name="range" optional="1" type="IDBKeyRange"/>
          <param default="&quot;next&quot;" name="direction" optional="1" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="keyPath" read-only="1" tags="IndexedDB" type="DOMString"/>
        <property name="name" read-only="1" tags="IndexedDB" type="DOMString"/>
        <property name="objectStore" read-only="1" tags="IndexedDB" type="IDBObjectStore"/>
        <property name="unique" read-only="1" tags="IndexedDB" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Object" name="IDBKeyRange">
      <methods>
        <method name="bound" static="1" tags="IndexedDB" type="IDBKeyRange">
          <param name="lower" type="any"/>
          <param name="upper" type="any"/>
          <param default="false" name="lowerOpen" optional="1" type="boolean"/>
          <param default="false" name="upperOpen" optional="1" type="boolean"/>
        </method>
        <method name="lowerBound" static="1" tags="IndexedDB" type="IDBKeyRange">
          <param name="bound" type="any"/>
          <param default="false" name="open" optional="1" type="boolean"/>
        </method>
        <method name="only" static="1" tags="IndexedDB" type="IDBKeyRange">
          <param name="value" type="any"/>
        </method>
        <method name="upperBound" static="1" tags="IndexedDB" type="IDBKeyRange">
          <param name="bound" type="any"/>
          <param default="false" name="open" optional="1" type="boolean"/>
        </method>
      </methods>
      <properties>
        <property name="lower" read-only="1" tags="IndexedDB" type="any"/>
        <property name="lowerOpen" read-only="1" tags="IndexedDB" type="boolean"/>
        <property name="upper" read-only="1" tags="IndexedDB" type="any"/>
        <property name="upperOpen" read-only="1" tags="IndexedDB" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Object" name="IDBObjectStore">
      <methods>
        <method name="add" tags="IndexedDB" type="IDBRequest">
          <param name="value" type="any"/>
          <param default="0" name="key" optional="1" type="any"/>
        </method>
        <method name="clear" tags="IndexedDB" type="IDBRequest"/>
        <method name="count" tags="IndexedDB" type="IDBRequest">
          <param name="key" optional="1" type="any"/>
        </method>
        <method name="createIndex" tags="IndexedDB" type="IDBIndex">
          <param name="name" type="DOMString"/>
          <param name="keyPath" type="DOMString"/>
          <param default="0" name="optionalParameters" optional="1" type="any"/>
        </method>
        <method name="delete" tags="IndexedDB" type="IDBRequest">
          <param name="key" type="any"/>
        </method>
        <method name="deleteIndex" tags="IndexedDB" type="void">
          <param name="indexName" type="DOMString"/>
        </method>
        <method name="get" tags="IndexedDB" type="IDBRequest">
          <param name="key" type="any"/>
        </method>
        <method name="index" tags="IndexedDB" type="IDBIndex">
          <param name="name" type="DOMString"/>
        </method>
        <method name="openCursor" tags="IndexedDB" type="IDBRequest">
          <param default="0" name="range" optional="1" type="any"/>
          <param default="&quot;next&quot;" name="direction" optional="1" type="DOMString"/>
        </method>
        <method name="put" tags="IndexedDB" type="IDBRequest">
          <param name="value" type="any"/>
          <param default="0" name="key" optional="1" type="any"/>
        </method>
      </methods>
      <properties>
        <property name="indexNames" read-only="1" tags="IndexedDB" type="DOMStringList"/>
        <property name="keyPath" read-only="1" tags="IndexedDB" type="DOMString"/>
        <property name="name" read-only="1" tags="IndexedDB" type="DOMString"/>
        <property name="transaction" read-only="1" tags="IndexedDB" type="IDBTransaction"/>
      </properties>
    </interface>
    <interface extends="IDBRequest" name="IDBOpenDBRequest">
      <events>
        <event dispatch="sync" name="blocked" skips-window="1" specs="IDB" type="Event"/>
        <event dispatch="sync" name="upgradeneeded" skips-window="1" specs="IDB" type="IDBVersionChangeEvent"/>
      </events>
      <properties>
        <property event-handler="blocked" name="onblocked" type="EventHandler"/>
        <property event-handler="upgradeneeded" name="onupgradeneeded" type="EventHandler"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="IDBRequest">
      <events>
        <event bubbles="1" dispatch="sync" name="error" skips-window="1" specs="IDB" type="Event"/>
        <event bubbles="1" dispatch="sync" name="success" skips-window="1" specs="IDB" type="Event"/>
      </events>
      <properties>
        <property name="error" read-only="1" tags="IndexedDB" type="DOMError"/>
        <property event-handler="error" name="onerror" type="EventHandler"/>
        <property event-handler="success" name="onsuccess" type="EventHandler"/>
        <property name="readyState" read-only="1" tags="IndexedDB" type="DOMString"/>
        <property name="result" read-only="1" tags="IndexedDB" type="any"/>
        <property name="source" read-only="1" tags="IndexedDB" type="any"/>
        <property name="transaction" read-only="1" tags="IndexedDB" type="IDBTransaction"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="IDBTransaction">
      <constants>
        <constant name="READ_ONLY" type="DOMString" value="readonly"/>
        <constant name="READ_WRITE" type="DOMString" value="readwrite"/>
        <constant name="VERSION_CHANGE" type="DOMString" value="versionchange"/>
      </constants>
      <events>
        <event dispatch="sync" name="error" skips-window="1" specs="IDB" type="Event"/>
        <event dispatch="sync" name="abort" skips-window="1" specs="IDB" type="Event"/>
        <event dispatch="sync" name="complete" skips-window="1" specs="IDB" type="Event"/>
      </events>
      <methods>
        <method name="abort" tags="IndexedDB" type="void"/>
        <method name="objectStore" tags="IndexedDB" type="IDBObjectStore">
          <param name="name" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="db" read-only="1" tags="IndexedDB" type="IDBDatabase"/>
        <property name="error" read-only="1" tags="IndexedDB" type="DOMError"/>
        <property name="mode" read-only="1" tags="IndexedDB" type="DOMString"/>
        <property event-handler="abort" name="onabort" type="EventHandler"/>
        <property event-handler="complete" name="oncomplete" type="EventHandler"/>
        <property event-handler="error" name="onerror" type="EventHandler"/>
      </properties>
    </interface>
    <interface extends="Event" name="IDBVersionChangeEvent">
      <properties>
        <property name="newVersion" read-only="1" type="signed long long"/>
        <property name="oldVersion" read-only="1" type="signed long long"/>
      </properties>
    </interface>
    <interface extends="Object" name="ImageData">
      <properties>
        <property name="data" read-only="1" type="CanvasPixelArray"/>
        <property name="height" read-only="1" type="unsigned long"/>
        <property name="width" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="Key">
      <properties>
        <property name="algorithm" read-only="1" type="KeyAlgorithm"/>
        <property name="extractable" read-only="1" type="boolean"/>
        <property name="keyUsage" read-only="1" type="sequence&lt;DOMString&gt;"/>
        <property name="type" read-only="1" type="DOMString" type-original="KeyType"/>
      </properties>
    </interface>
    <interface extends="Object" name="KeyPair">
      <properties>
        <property name="privateKey" type="Key"/>
        <property name="publicKey" type="Key"/>
      </properties>
    </interface>
    <interface extends="UIEvent" name="KeyboardEvent">
      <constants>
        <constant name="DOM_KEY_LOCATION_JOYSTICK" type="unsigned long" value="0x05"/>
        <constant name="DOM_KEY_LOCATION_LEFT" type="unsigned long" value="0x01"/>
        <constant name="DOM_KEY_LOCATION_MOBILE" type="unsigned long" value="0x04"/>
        <constant name="DOM_KEY_LOCATION_NUMPAD" type="unsigned long" value="0x03"/>
        <constant name="DOM_KEY_LOCATION_RIGHT" type="unsigned long" value="0x02"/>
        <constant name="DOM_KEY_LOCATION_STANDARD" type="unsigned long" value="0x00"/>
      </constants>
      <constructor>
        <param name="typeArg" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="KeyboardEventInit"/>
      </constructor>
      <methods>
        <method name="getModifierState" tags="Events" type="boolean">
          <param name="keyArg" type="DOMString"/>
        </method>
        <method name="initKeyboardEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="keyArg" type="DOMString"/>
          <param name="locationArg" type="unsigned long"/>
          <param name="modifiersListArg" type="DOMString"/>
          <param name="repeat" type="boolean"/>
          <param name="locale" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="altKey" read-only="1" tags="Events" type="boolean"/>
        <property name="char" nullable="1" read-only="1" tags="Events" type="DOMString"/>
        <property name="charCode" read-only="1" tags="Events" type="short"/>
        <property name="ctrlKey" read-only="1" tags="Events" type="boolean"/>
        <property name="key" read-only="1" tags="Events" type="DOMString"/>
        <property name="keyCode" read-only="1" tags="Events" type="short"/>
        <property name="locale" read-only="1" tags="Events" type="DOMString"/>
        <property name="location" read-only="1" tags="Events" type="unsigned long"/>
        <property name="metaKey" read-only="1" tags="Events" type="boolean"/>
        <property name="repeat" read-only="1" tags="Events" type="boolean"/>
        <property name="shiftKey" read-only="1" tags="Events" type="boolean"/>
        <property name="which" read-only="1" tags="Events" type="short"/>
      </properties>
    </interface>
    <interface extends="Object" name="Location" specs="HTML5" tags="NetworkAccess">
      <methods>
        <method name="assign" property-descriptor-not-configurable="1" property-descriptor-not-writable="1" specs="HTML5" tags="NetworkAccess" type="void">
          <param name="url" type="DOMString"/>
        </method>
        <method name="reload" property-descriptor-not-configurable="1" property-descriptor-not-writable="1" specs="HTML5" tags="NetworkAccess" type="void">
          <param default="false" name="forcedReload" optional="1" type="boolean"/>
        </method>
        <method name="replace" property-descriptor-not-configurable="1" property-descriptor-not-writable="1" specs="HTML5" tags="NetworkAccess" type="void">
          <param name="url" type="DOMString"/>
        </method>
        <method name="toString" property-descriptor-not-configurable="1" stringifier="1" type="DOMString"/>
      </methods>
      <properties>
        <property name="hash" property-descriptor-not-configurable="1" specs="URL" tags="NetworkAccess" type="DOMString"/>
        <property name="host" property-descriptor-not-configurable="1" specs="URL" tags="NetworkAccess" type="DOMString"/>
        <property name="hostname" property-descriptor-not-configurable="1" specs="URL" tags="NetworkAccess" type="DOMString"/>
        <property name="href" property-descriptor-not-configurable="1" specs="HTML5" stringifier="1" tags="NetworkAccess" type="DOMString"/>
        <property name="origin" read-only="1" specs="URL" tags="NetworkAccess" type="DOMString"/>
        <property name="pathname" specs="URL" tags="NetworkAccess" type="DOMString"/>
        <property name="port" specs="URL" tags="NetworkAccess" type="DOMString"/>
        <property name="protocol" specs="URL" tags="NetworkAccess" type="DOMString"/>
        <property name="search" property-descriptor-not-configurable="1" specs="URL" tags="NetworkAccess" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Event" name="LongRunningScriptDetectedEvent" tags="MSAppOnly">
      <properties>
        <property name="executionTime" read-only="1" tags="MSAppOnly" type="long"/>
        <property name="stopPageScriptExecution" tags="MSAppOnly" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSApp" static="1" tags="MSAppOnly">
      <constants>
        <constant name="CURRENT" tags="MSAppScheduler" type="DOMString" value="current"/>
        <constant name="HIGH" tags="MSAppScheduler" type="DOMString" value="high"/>
        <constant name="IDLE" tags="MSAppScheduler" type="DOMString" value="idle"/>
        <constant name="NORMAL" tags="MSAppScheduler" type="DOMString" value="normal"/>
      </constants>
      <methods>
        <method name="clearTemporaryWebDataAsync" static="1" tags="MSAppOnly" type="MSAppAsyncOperation"/>
        <method name="createBlobFromRandomAccessStream" property-descriptor-not-configurable="1" property-descriptor-not-writable="1" static="1" tags="MSAppOnly" type="Blob">
          <param name="type" type="DOMString"/>
          <param name="seeker" type="any"/>
        </method>
        <method name="createDataPackage" property-descriptor-not-configurable="1" property-descriptor-not-writable="1" static="1" tags="MSAppOnly" type="any">
          <param name="object" type="any"/>
        </method>
        <method name="createDataPackageFromSelection" property-descriptor-not-configurable="1" property-descriptor-not-writable="1" static="1" tags="MSAppOnly" type="any"/>
        <method name="createFileFromStorageFile" property-descriptor-not-configurable="1" property-descriptor-not-writable="1" static="1" tags="MSAppOnly" type="File">
          <param name="storageFile" type="any"/>
        </method>
        <method name="createNewView" static="1" tags="MSAppOnly" type="MSAppView">
          <param name="uri" type="DOMString"/>
        </method>
        <method name="createStreamFromInputStream" property-descriptor-not-configurable="1" property-descriptor-not-writable="1" static="1" tags="MSAppOnly" type="MSStream">
          <param name="type" type="DOMString"/>
          <param name="inputStream" type="any"/>
        </method>
        <method name="execAsyncAtPriority" static="1" tags="MSAppScheduler" type="void">
          <param name="asynchronousCallback" type="MSExecAtPriorityFunctionCallback"/>
          <param name="priority" type="DOMString"/>
          <param name="args" type="any" variadic="1"/>
        </method>
        <method name="execAtPriority" static="1" tags="MSAppScheduler" type="any">
          <param name="synchronousCallback" type="MSExecAtPriorityFunctionCallback"/>
          <param name="priority" type="DOMString"/>
          <param name="args" type="any" variadic="1"/>
        </method>
        <method name="getCurrentPriority" static="1" tags="MSAppScheduler" type="DOMString"/>
        <method name="getHtmlPrintDocumentSourceAsync" property-descriptor-not-configurable="1" property-descriptor-not-writable="1" static="1" tags="MSAppOnly" type="Promise&lt;any&gt;">
          <param name="htmlDoc" type="any"/>
        </method>
        <method name="getViewOpener" static="1" tags="MSAppOnly" type="MSAppView"/>
        <method name="isTaskScheduledAtPriorityOrHigher" static="1" tags="MSAppScheduler" type="boolean">
          <param name="priority" type="DOMString"/>
        </method>
        <method name="pageHandlesAllApplicationActivations" static="1" tags="MSAppOnly" type="void">
          <param name="enabled" type="boolean"/>
        </method>
        <method name="suppressSubdownloadCredentialPrompts" static="1" tags="MSAppOnly" type="void">
          <param name="suppress" type="boolean"/>
        </method>
        <method name="terminateApp" property-descriptor-not-configurable="1" property-descriptor-not-writable="1" static="1" tags="MSAppOnly" type="void">
          <param name="exceptionObject" type="any"/>
        </method>
      </methods>
    </interface>
    <interface extends="EventTarget" name="MSAppAsyncOperation" tags="MSAppOnly">
      <constants>
        <constant name="COMPLETED" tags="MSAppOnly" type="unsigned short" value="1"/>
        <constant name="ERROR" tags="MSAppOnly" type="unsigned short" value="2"/>
        <constant name="STARTED" tags="MSAppOnly" type="unsigned short" value="0"/>
      </constants>
      <events>
        <event dispatch="sync" name="error" skips-window="1" specs="none" tags="MSAppOnly" type="Event"/>
        <event dispatch="sync" name="complete" skips-window="1" specs="none" tags="MSAppOnly" type="Event"/>
      </events>
      <methods>
        <method name="start" tags="MSAppOnly" type="void"/>
      </methods>
      <properties>
        <property name="error" read-only="1" tags="MSAppOnly" type="DOMError"/>
        <property event-handler="complete" name="oncomplete" tags="MSAppOnly" type="EventHandler"/>
        <property event-handler="error" name="onerror" tags="MSAppOnly" type="EventHandler"/>
        <property name="readyState" read-only="1" tags="MSAppOnly" type="unsigned short"/>
        <property name="result" read-only="1" tags="MSAppOnly" type="any"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSAppView" tags="MSAppOnly">
      <methods>
        <method name="close" tags="MSAppOnly" type="void"/>
        <method name="postMessage" tags="MSAppOnly" type="void">
          <param name="message" type="any"/>
          <param name="targetOrigin" type="DOMString"/>
          <param name="ports" optional="1" type="any"/>
        </method>
      </methods>
      <properties>
        <property name="viewId" read-only="1" tags="MSAppOnly" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSBlobBuilder">
      <constructor/>
      <methods>
        <method name="append" tags="FileAPI" type="void">
          <param name="data" type="any"/>
          <param name="endings" optional="1" type="DOMString"/>
        </method>
        <method name="getBlob" tags="FileAPI" type="Blob">
          <param name="contentType" optional="1" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="MSCSSMatrix">
      <constructor>
        <param name="text" optional="1" type="DOMString"/>
      </constructor>
      <methods>
        <method name="inverse" tags="CSSOM" type="MSCSSMatrix"/>
        <method name="multiply" tags="CSSOM" type="MSCSSMatrix">
          <param name="secondMatrix" type="MSCSSMatrix"/>
        </method>
        <method name="rotate" tags="CSSOM" type="MSCSSMatrix">
          <param name="angleX" type="float"/>
          <param default="0" name="angleY" optional="1" type="float"/>
          <param default="0" name="angleZ" optional="1" type="float"/>
        </method>
        <method name="rotateAxisAngle" tags="CSSOM" type="MSCSSMatrix">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="z" type="float"/>
          <param name="angle" type="float"/>
        </method>
        <method name="scale" tags="CSSOM" type="MSCSSMatrix">
          <param name="scaleX" type="float"/>
          <param name="scaleY" optional="1" type="float"/>
          <param default="1" name="scaleZ" optional="1" type="float"/>
        </method>
        <method name="setMatrixValue" tags="CSSOM" type="void">
          <param name="value" type="DOMString"/>
        </method>
        <method name="skewX" tags="CSSOM" type="MSCSSMatrix">
          <param name="angle" type="float"/>
        </method>
        <method name="skewY" tags="CSSOM" type="MSCSSMatrix">
          <param name="angle" type="float"/>
        </method>
        <method name="toString" stringifier="1" tags="CSSOM" type="DOMString"/>
        <method name="translate" tags="CSSOM" type="MSCSSMatrix">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param default="0" name="z" optional="1" type="float"/>
        </method>
      </methods>
      <properties>
        <property name="a" tags="CSSOM" type="float"/>
        <property name="b" tags="CSSOM" type="float"/>
        <property name="c" tags="CSSOM" type="float"/>
        <property name="d" tags="CSSOM" type="float"/>
        <property name="e" tags="CSSOM" type="float"/>
        <property name="f" tags="CSSOM" type="float"/>
        <property name="m11" tags="CSSOM" type="float"/>
        <property name="m12" tags="CSSOM" type="float"/>
        <property name="m13" tags="CSSOM" type="float"/>
        <property name="m14" tags="CSSOM" type="float"/>
        <property name="m21" tags="CSSOM" type="float"/>
        <property name="m22" tags="CSSOM" type="float"/>
        <property name="m23" tags="CSSOM" type="float"/>
        <property name="m24" tags="CSSOM" type="float"/>
        <property name="m31" tags="CSSOM" type="float"/>
        <property name="m32" tags="CSSOM" type="float"/>
        <property name="m33" tags="CSSOM" type="float"/>
        <property name="m34" tags="CSSOM" type="float"/>
        <property name="m41" tags="CSSOM" type="float"/>
        <property name="m42" tags="CSSOM" type="float"/>
        <property name="m43" tags="CSSOM" type="float"/>
        <property name="m44" tags="CSSOM" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSGesture">
      <constructor/>
      <methods>
        <method name="addPointer" tags="Events" type="void">
          <param name="pointerId" type="long"/>
        </method>
        <method name="stop" tags="Events" type="void"/>
      </methods>
      <properties>
        <property name="target" tags="Events" type="Element"/>
      </properties>
    </interface>
    <interface extends="UIEvent" name="MSGestureEvent">
      <constants>
        <constant name="MSGESTURE_FLAG_BEGIN" type="unsigned long" value="0x00000001"/>
        <constant name="MSGESTURE_FLAG_CANCEL" type="unsigned long" value="0x00000004"/>
        <constant name="MSGESTURE_FLAG_END" type="unsigned long" value="0x00000002"/>
        <constant name="MSGESTURE_FLAG_INERTIA" type="unsigned long" value="0x00000008"/>
        <constant name="MSGESTURE_FLAG_NONE" type="unsigned long" value="0x00000000"/>
      </constants>
      <methods>
        <method name="initGestureEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="detailArg" type="long"/>
          <param name="screenXArg" type="long"/>
          <param name="screenYArg" type="long"/>
          <param name="clientXArg" type="float"/>
          <param name="clientYArg" type="float"/>
          <param name="offsetXArg" type="float"/>
          <param name="offsetYArg" type="float"/>
          <param name="translationXArg" type="float"/>
          <param name="translationYArg" type="float"/>
          <param name="scaleArg" type="float"/>
          <param name="expansionArg" type="float"/>
          <param name="rotationArg" type="float"/>
          <param name="velocityXArg" type="float"/>
          <param name="velocityYArg" type="float"/>
          <param name="velocityExpansionArg" type="float"/>
          <param name="velocityAngularArg" type="float"/>
          <param name="hwTimestampArg" type="unsigned long long"/>
        </method>
      </methods>
      <properties>
        <property name="clientX" read-only="1" tags="Events" type="float"/>
        <property name="clientY" read-only="1" tags="Events" type="float"/>
        <property name="expansion" read-only="1" tags="Events" type="float"/>
        <property name="gestureObject" read-only="1" tags="Events" type="any"/>
        <property name="hwTimestamp" read-only="1" tags="Events" type="unsigned long long"/>
        <property name="offsetX" read-only="1" tags="Events" type="float"/>
        <property name="offsetY" read-only="1" tags="Events" type="float"/>
        <property name="rotation" read-only="1" tags="Events" type="float"/>
        <property name="scale" read-only="1" tags="Events" type="float"/>
        <property name="screenX" read-only="1" tags="Events" type="long"/>
        <property name="screenY" read-only="1" tags="Events" type="long"/>
        <property name="translationX" read-only="1" tags="Events" type="float"/>
        <property name="translationY" read-only="1" tags="Events" type="float"/>
        <property name="velocityAngular" read-only="1" tags="Events" type="float"/>
        <property name="velocityExpansion" read-only="1" tags="Events" type="float"/>
        <property name="velocityX" read-only="1" tags="Events" type="float"/>
        <property name="velocityY" read-only="1" tags="Events" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSGraphicsTrust" specs="EME">
      <properties>
        <property name="constrictionActive" read-only="1" specs="EME" type="boolean"/>
        <property name="status" read-only="1" specs="EME" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="HTMLElement" name="MSHTMLWebViewElement" tags="MSAppOnly">
      <element name="x-ms-webview" namespace="HTML"/>
      <events>
        <event cancelable="1" dispatch="sync" name="MSWebViewNavigationStarting" precedes="MSWebViewContentLoading" specs="none" tags="MSAppOnly" type="NavigationEvent"/>
        <event dispatch="sync" follows="MSWebViewNavigationStarting" name="MSWebViewContentLoading" precedes="MSWebViewDOMContentLoaded" specs="none" tags="MSAppOnly" type="NavigationEvent"/>
        <event dispatch="sync" follows="MSWebViewContentLoading" name="MSWebViewDOMContentLoaded" precedes="MSWebViewNavigationCompleted" specs="none" tags="MSAppOnly" type="NavigationEvent"/>
        <event dispatch="sync" follows="MSWebViewDOMContentLoaded" name="MSWebViewNavigationCompleted" specs="none" tags="MSAppOnly" type="NavigationCompletedEvent"/>
        <event dispatch="sync" name="MSWebViewScriptNotify" specs="none" tags="MSAppOnly" type="ScriptNotifyEvent"/>
        <event dispatch="sync" name="MSWebViewUnsafeContentWarningDisplaying" specs="none" tags="MSAppOnly" type="Event"/>
        <event dispatch="sync" name="MSWebViewContainsFullScreenElementChanged" specs="none" tags="MSAppOnly" type="Event"/>
        <event dispatch="sync" name="MSWebViewLongRunningScriptDetected" specs="none" tags="MSAppOnly" type="LongRunningScriptDetectedEvent"/>
        <event dispatch="sync" name="MSWebViewUnviewableContentIdentified" specs="none" tags="MSAppOnly" type="UnviewableContentIdentifiedEvent"/>
        <event dispatch="sync" name="MSWebViewPermissionRequested" specs="none" tags="MSAppOnly" type="PermissionRequestedEvent"/>
        <event cancelable="1" dispatch="sync" name="MSWebViewUnsupportedUriSchemeIdentified" specs="none" tags="MSAppOnly" type="NavigationEvent"/>
        <event dispatch="sync" name="MSWebViewNewWindowRequested" specs="none" tags="MSAppOnly" type="NavigationEventWithReferrer"/>
        <event cancelable="1" dispatch="sync" name="MSWebViewFrameNavigationStarting" precedes="MSWebViewFrameContentLoading" specs="none" tags="MSAppOnly" type="NavigationEvent"/>
        <event dispatch="sync" follows="MSWebViewFrameDOMContentLoaded" name="MSWebViewFrameNavigationCompleted" specs="none" tags="MSAppOnly" type="NavigationCompletedEvent"/>
        <event dispatch="sync" follows="MSWebViewFrameContentLoading" name="MSWebViewFrameDOMContentLoaded" precedes="MSWebViewFrameNavigationCompleted" specs="none" tags="MSAppOnly" type="NavigationEvent"/>
        <event dispatch="sync" follows="MSWebViewFrameNavigationStarting" name="MSWebViewFrameContentLoading" precedes="MSWebViewFrameDOMContentLoaded" specs="none" tags="MSAppOnly" type="NavigationEvent"/>
      </events>
      <methods>
        <method name="addWebAllowedObject" tags="MSAppOnly" type="void">
          <param name="name" type="DOMString"/>
          <param name="applicationObject" type="any"/>
        </method>
        <method name="buildLocalStreamUri" tags="MSAppOnly" type="DOMString">
          <param name="contentIdentifier" type="DOMString"/>
          <param name="relativePath" type="DOMString"/>
        </method>
        <method name="capturePreviewToBlobAsync" tags="MSAppOnly" type="MSWebViewAsyncOperation"/>
        <method name="captureSelectedContentToDataPackageAsync" tags="MSAppOnly" type="MSWebViewAsyncOperation"/>
        <method name="getDeferredPermissionRequestById" tags="MSAppOnly" type="DeferredPermissionRequest">
          <param name="id" type="unsigned long"/>
        </method>
        <method name="getDeferredPermissionRequests" tags="MSAppOnly" type="sequence&lt;DeferredPermissionRequest&gt;"/>
        <method name="goBack" tags="MSAppOnly" type="void"/>
        <method name="goForward" tags="MSAppOnly" type="void"/>
        <method name="invokeScriptAsync" tags="MSAppOnly" type="MSWebViewAsyncOperation">
          <param name="scriptName" type="DOMString"/>
          <param name="args" type="any" variadic="1"/>
        </method>
        <method name="navigate" tags="MSAppOnly" type="void">
          <param name="uri" type="DOMString"/>
        </method>
        <method name="navigateToLocalStreamUri" tags="MSAppOnly" type="void">
          <param name="source" type="DOMString"/>
          <param name="streamResolver" type="any"/>
        </method>
        <method name="navigateToString" tags="MSAppOnly" type="void">
          <param name="contents" type="DOMString"/>
        </method>
        <method name="navigateWithHttpRequestMessage" tags="MSAppOnly" type="void">
          <param name="requestMessage" type="any"/>
        </method>
        <method name="refresh" tags="MSAppOnly" type="void"/>
        <method name="stop" tags="MSAppOnly" type="void"/>
      </methods>
      <properties>
        <property name="canGoBack" read-only="1" tags="MSAppOnly" type="bool"/>
        <property name="canGoForward" read-only="1" tags="MSAppOnly" type="bool"/>
        <property name="containsFullScreenElement" read-only="1" tags="MSAppOnly" type="bool"/>
        <property name="documentTitle" read-only="1" tags="MSAppOnly" type="DOMString"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="height" tags="MSAppOnly" type="unsigned long"/>
        <property name="settings" read-only="1" tags="MSAppOnly" type="MSWebViewSettings"/>
        <property name="src" tags="MSAppOnly" type="DOMString"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="non_negative_integer" name="width" tags="MSAppOnly" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSHeaderFooter" tags="Printing">
      <properties>
        <property name="URL" type="DOMString"/>
        <property name="dateLong" type="DOMString"/>
        <property name="dateShort" type="DOMString"/>
        <property name="font" type="DOMString"/>
        <property name="htmlFoot" read-only="1" type="DOMString"/>
        <property name="htmlHead" read-only="1" type="DOMString"/>
        <property name="page" type="unsigned long"/>
        <property name="pageTotal" type="unsigned long"/>
        <property name="textFoot" type="DOMString"/>
        <property name="textHead" type="DOMString"/>
        <property name="timeLong" type="DOMString"/>
        <property name="timeShort" type="DOMString"/>
        <property name="title" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="MSInputMethodContext">
      <events>
        <event dispatch="sync" name="MSCandidateWindowShow" precedes="MSCandidateWindowUpdate MSCandidateWindowHide" skips-window="1" specs="IME" tags="IEOnly" type="Event"/>
        <event dispatch="sync" follows="MSCandidateWindowShow" name="MSCandidateWindowUpdate" precedes="MSCandidateWindowHide" skips-window="1" specs="IME" tags="IEOnly" type="Event"/>
        <event dispatch="sync" follows="MSCandidateWindowShow MSCandidateWindowUpdate" name="MSCandidateWindowHide" skips-window="1" specs="IME" tags="IEOnly" type="Event"/>
      </events>
      <methods>
        <method name="getCandidateWindowClientRect" type="ClientRect"/>
        <method name="getCompositionAlternatives" type="sequence&lt;DOMString&gt;"/>
        <method name="hasComposition" type="boolean"/>
        <method name="isCandidateWindowVisible" type="boolean"/>
      </methods>
      <properties>
        <property name="compositionEndOffset" read-only="1" type="unsigned long"/>
        <property name="compositionStartOffset" read-only="1" type="unsigned long"/>
        <property event-handler="MSCandidateWindowHide" name="oncandidatewindowhide" type="EventHandler"/>
        <property event-handler="MSCandidateWindowShow" name="oncandidatewindowshow" type="EventHandler"/>
        <property event-handler="MSCandidateWindowUpdate" name="oncandidatewindowupdate" type="EventHandler"/>
        <property name="target" read-only="1" type="HTMLElement"/>
      </properties>
    </interface>
    <interface extends="UIEvent" name="MSManipulationEvent">
      <constants>
        <constant name="MS_MANIPULATION_STATE_ACTIVE" type="unsigned short" value="1"/>
        <constant name="MS_MANIPULATION_STATE_CANCELLED" type="unsigned short" value="6"/>
        <constant name="MS_MANIPULATION_STATE_COMMITTED" type="unsigned short" value="7"/>
        <constant name="MS_MANIPULATION_STATE_DRAGGING" type="unsigned short" value="5"/>
        <constant name="MS_MANIPULATION_STATE_INERTIA" type="unsigned short" value="2"/>
        <constant name="MS_MANIPULATION_STATE_PRESELECT" type="unsigned short" value="3"/>
        <constant name="MS_MANIPULATION_STATE_SELECTING" type="unsigned short" value="4"/>
        <constant name="MS_MANIPULATION_STATE_STOPPED" type="unsigned short" value="0"/>
      </constants>
      <methods>
        <method name="initMSManipulationEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="detailArg" type="long"/>
          <param name="lastState" type="long"/>
          <param name="currentState" type="long"/>
        </method>
      </methods>
      <properties>
        <property name="currentState" read-only="1" tags="Events" type="long"/>
        <property name="inertiaDestinationX" read-only="1" type="long"/>
        <property name="inertiaDestinationY" read-only="1" type="long"/>
        <property name="lastState" read-only="1" tags="Events" type="long"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSMediaKeyError" specs="EME">
      <constants>
        <constant name="MS_MEDIA_KEYERR_CLIENT" specs="EME" type="unsigned short" value="2"/>
        <constant name="MS_MEDIA_KEYERR_DOMAIN" specs="EME" type="unsigned short" value="6"/>
        <constant name="MS_MEDIA_KEYERR_HARDWARECHANGE" specs="EME" type="unsigned short" value="5"/>
        <constant name="MS_MEDIA_KEYERR_OUTPUT" specs="EME" type="unsigned short" value="4"/>
        <constant name="MS_MEDIA_KEYERR_SERVICE" specs="EME" type="unsigned short" value="3"/>
        <constant name="MS_MEDIA_KEYERR_UNKNOWN" specs="EME" type="unsigned short" value="1"/>
      </constants>
      <properties>
        <property name="code" read-only="1" specs="EME" type="unsigned short"/>
        <property name="systemCode" read-only="1" specs="EME" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Event" name="MSMediaKeyMessageEvent" specs="EME">
      <properties>
        <property name="destinationURL" nullable="1" read-only="1" specs="EME" type="DOMString"/>
        <property name="message" read-only="1" specs="EME" type="Uint8Array"/>
      </properties>
    </interface>
    <interface extends="Event" name="MSMediaKeyNeededEvent" specs="EME">
      <properties>
        <property name="initData" nullable="1" read-only="1" specs="EME" type="Uint8Array"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="MSMediaKeySession" specs="EME">
      <events>
        <event dispatch="sync" name="mskeymessage" skips-window="1" specs="none" tags="IEOnly" type="MSMediaKeyMessageEvent"/>
        <event dispatch="sync" name="mskeyadded" skips-window="1" specs="none" tags="IEOnly" type="Event"/>
        <event dispatch="sync" name="mskeyerror" skips-window="1" specs="none" tags="IEOnly" type="Event"/>
      </events>
      <methods>
        <method name="close" specs="EME" type="void"/>
        <method name="update" specs="EME" type="void">
          <param name="key" type="Uint8Array"/>
        </method>
      </methods>
      <properties>
        <property name="error" nullable="1" read-only="1" specs="EME" type="MSMediaKeyError"/>
        <property name="keySystem" read-only="1" specs="EME" type="DOMString"/>
        <property name="sessionId" read-only="1" specs="EME" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSMediaKeys" specs="EME">
      <constructor>
        <param name="keySystem" type="DOMString"/>
      </constructor>
      <methods>
        <method name="createSession" specs="EME" type="MSMediaKeySession">
          <param name="type" type="DOMString"/>
          <param name="initData" type="Uint8Array"/>
          <param name="cdmData" nullable="1" optional="1" type="Uint8Array"/>
        </method>
        <method name="isTypeSupported" specs="EME" static="1" type="bool">
          <param name="keySystem" type="DOMString"/>
          <param name="type" nullable="1" optional="1" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="keySystem" read-only="1" specs="EME" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSMimeTypesCollection">
      <properties>
        <property name="length" read-only="1" tags="TreeNavigation" type="long"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSPluginsCollection">
      <methods>
        <method name="refresh" tags="NetworkAccess" type="void">
          <param default="false" name="reload" optional="1" type="boolean"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="TreeNavigation" type="long"/>
      </properties>
    </interface>
    <interface extends="MouseEvent" name="MSPointerEvent">
      <constructor>
        <param name="typeArg" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="PointerEventInit"/>
      </constructor>
      <methods>
        <method name="getCurrentPoint" tags="Events" type="void">
          <param name="element" type="Element"/>
        </method>
        <method name="getIntermediatePoints" tags="Events" type="void">
          <param name="element" type="Element"/>
        </method>
        <method name="initPointerEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="detailArg" type="long"/>
          <param name="screenXArg" type="long"/>
          <param name="screenYArg" type="long"/>
          <param name="clientXArg" type="float"/>
          <param name="clientYArg" type="float"/>
          <param name="ctrlKeyArg" type="boolean"/>
          <param name="altKeyArg" type="boolean"/>
          <param name="shiftKeyArg" type="boolean"/>
          <param name="metaKeyArg" type="boolean"/>
          <param name="buttonArg" type="unsigned short"/>
          <param name="relatedTargetArg" type="EventTarget"/>
          <param name="offsetXArg" type="float"/>
          <param name="offsetYArg" type="float"/>
          <param name="widthArg" type="long"/>
          <param name="heightArg" type="long"/>
          <param name="pressure" type="float"/>
          <param name="rotation" type="long"/>
          <param name="tiltX" type="long"/>
          <param name="tiltY" type="long"/>
          <param name="pointerIdArg" type="long"/>
          <param name="pointerType" type="any"/>
          <param name="hwTimestampArg" type="unsigned long long"/>
          <param name="isPrimary" type="boolean"/>
        </method>
      </methods>
      <properties>
        <property name="currentPoint" read-only="1" tags="Events" type="any"/>
        <property name="height" read-only="1" tags="Events" type="long"/>
        <property name="hwTimestamp" read-only="1" tags="Events" type="unsigned long long"/>
        <property name="intermediatePoints" read-only="1" tags="Events" type="any"/>
        <property name="isPrimary" read-only="1" tags="Events" type="boolean"/>
        <property name="pointerId" read-only="1" tags="Events" type="long"/>
        <property name="pointerType" read-only="1" tags="Events" type="any"/>
        <property name="pressure" read-only="1" tags="Events" type="float"/>
        <property name="rotation" read-only="1" tags="Events" type="long"/>
        <property name="tiltX" read-only="1" tags="Events" type="long"/>
        <property name="tiltY" read-only="1" tags="Events" type="long"/>
        <property name="width" read-only="1" tags="Events" type="long"/>
      </properties>
    </interface>
    <interface extends="MSTemplatePrinter" name="MSPrintManagerTemplatePrinter" tags="Printing">
      <implements>EventTarget</implements>
      <methods>
        <method name="drawPreviewPage" type="void">
          <param name="element" type="HTMLElement"/>
          <param name="pageNumber" type="long"/>
        </method>
        <method name="endPrint" type="void"/>
        <method name="getPrintTaskOptionValue" type="any">
          <param name="key" type="DOMString"/>
        </method>
        <method name="invalidatePreview" type="void"/>
        <method name="setPageCount" type="void">
          <param name="pageCount" type="long"/>
        </method>
        <method name="startPrint" type="void"/>
      </methods>
      <properties>
        <property name="percentScale" read-only="1" type="float"/>
        <property name="showHeaderFooter" read-only="1" type="boolean"/>
        <property name="shrinkToFit" read-only="1" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSRangeCollection">
      <methods>
        <method getter="1" name="item" tags="CSSOM" type="Range">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="CSSOM" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Event" name="MSSiteModeEvent">
      <properties>
        <property name="actionURL" read-only="1" tags="SiteMode" type="DOMString"/>
        <property name="buttonID" read-only="1" tags="SiteMode" type="long"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSStream">
      <methods>
        <method name="msClose" tags="FileAPI" type="void"/>
        <method name="msDetachStream" tags="FileAPI" type="any"/>
      </methods>
      <properties>
        <property name="type" read-only="1" tags="FileAPI" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="MSStreamReader">
      <constructor/>
      <events>
        <event dispatch="sync" follows="progress" name="load" precedes="loadend" skips-window="1" specs="none" tags="IEOnly" type="ProgressEvent"/>
        <event dispatch="sync" name="loadstart" precedes="progress" skips-window="1" specs="none" tags="IEOnly" type="ProgressEvent"/>
        <event dispatch="sync" follows="load" name="loadend" skips-window="1" specs="none" tags="IEOnly" type="ProgressEvent"/>
        <event dispatch="sync" follows="loadstart" name="progress" precedes="load" skips-window="1" specs="none" tags="IEOnly" type="ProgressEvent"/>
        <event dispatch="sync" name="abort" skips-window="1" specs="none" tags="IEOnly" type="ProgressEvent"/>
        <event dispatch="sync" name="error" skips-window="1" specs="none" tags="IEOnly" type="ProgressEvent"/>
      </events>
      <implements>MSBaseReader</implements>
      <methods>
        <method name="readAsArrayBuffer" tags="MSStreamReader" type="void">
          <param name="stream" type="MSStream"/>
          <param default="-1" name="size" optional="1" type="signed long long"/>
        </method>
        <method name="readAsBinaryString" tags="MSStreamReader" type="void">
          <param name="stream" type="MSStream"/>
          <param default="-1" name="size" optional="1" type="signed long long"/>
        </method>
        <method name="readAsBlob" tags="FileAPI" type="void">
          <param name="stream" type="MSStream"/>
          <param default="-1" name="size" optional="1" type="signed long long"/>
        </method>
        <method name="readAsDataURL" tags="MSStreamReader" type="void">
          <param name="stream" type="MSStream"/>
          <param default="-1" name="size" optional="1" type="signed long long"/>
        </method>
        <method name="readAsText" tags="MSStreamReader" type="void">
          <param name="stream" type="MSStream"/>
          <param name="encoding" optional="1" type="DOMString"/>
          <param default="-1" name="size" optional="1" type="signed long long"/>
        </method>
      </methods>
      <properties>
        <property name="error" read-only="1" tags="FileAPI" type="DOMError"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSTemplatePrinter" tags="Printing">
      <methods>
        <method name="createHeaderFooter" type="MSHeaderFooter"/>
        <method name="deviceSupports" type="any">
          <param name="property" type="DOMString"/>
        </method>
        <method name="ensurePrintDialogDefaults" type="boolean"/>
        <method name="getPageMarginBottom" type="any">
          <param name="pageRule" type="CSSPageRule"/>
          <param name="pageWidth" type="long"/>
          <param name="pageHeight" type="long"/>
        </method>
        <method name="getPageMarginBottomImportant" type="boolean">
          <param name="pageRule" type="CSSPageRule"/>
        </method>
        <method name="getPageMarginLeft" type="any">
          <param name="pageRule" type="CSSPageRule"/>
          <param name="pageWidth" type="long"/>
          <param name="pageHeight" type="long"/>
        </method>
        <method name="getPageMarginLeftImportant" type="boolean">
          <param name="pageRule" type="CSSPageRule"/>
        </method>
        <method name="getPageMarginRight" type="any">
          <param name="pageRule" type="CSSPageRule"/>
          <param name="pageWidth" type="long"/>
          <param name="pageHeight" type="long"/>
        </method>
        <method name="getPageMarginRightImportant" type="boolean">
          <param name="pageRule" type="CSSPageRule"/>
        </method>
        <method name="getPageMarginTop" type="any">
          <param name="pageRule" type="CSSPageRule"/>
          <param name="pageWidth" type="long"/>
          <param name="pageHeight" type="long"/>
        </method>
        <method name="getPageMarginTopImportant" type="boolean">
          <param name="pageRule" type="CSSPageRule"/>
        </method>
        <method name="printBlankPage" type="void"/>
        <method name="printNonNative" type="boolean">
          <param name="document" type="object"/>
        </method>
        <method name="printNonNativeFrames" type="void">
          <param name="document" type="object"/>
          <param name="activeFrame" type="boolean"/>
        </method>
        <method name="printPage" type="void">
          <param name="element" type="HTMLElement"/>
        </method>
        <method name="showPageSetupDialog" type="boolean"/>
        <method name="showPrintDialog" type="boolean"/>
        <method name="startDoc" type="boolean">
          <param name="title" type="DOMString"/>
        </method>
        <method name="stopDoc" type="void"/>
        <method name="updatePageStatus" type="void">
          <param name="status" type="long"/>
        </method>
      </methods>
      <properties>
        <property name="collate" type="boolean"/>
        <property name="copies" type="unsigned short"/>
        <property name="currentPage" type="boolean"/>
        <property name="currentPageAvail" type="boolean"/>
        <property name="duplex" read-only="1" type="boolean"/>
        <property name="footer" type="DOMString"/>
        <property name="frameActive" type="boolean"/>
        <property name="frameActiveEnabled" type="boolean"/>
        <property name="frameAsShown" type="boolean"/>
        <property name="framesetDocument" type="boolean"/>
        <property name="header" type="DOMString"/>
        <property name="headerFooterFont" type="DOMString"/>
        <property name="marginBottom" type="long"/>
        <property name="marginLeft" type="long"/>
        <property name="marginRight" type="long"/>
        <property name="marginTop" type="long"/>
        <property name="orientation" type="DOMString"/>
        <property name="pageFrom" type="unsigned short"/>
        <property name="pageHeight" read-only="1" type="long"/>
        <property name="pageTo" type="unsigned short"/>
        <property name="pageWidth" read-only="1" type="long"/>
        <property name="selectedPages" type="boolean"/>
        <property name="selection" type="boolean"/>
        <property name="selectionEnabled" type="boolean"/>
        <property name="unprintableBottom" read-only="1" type="long"/>
        <property name="unprintableLeft" read-only="1" type="long"/>
        <property name="unprintableRight" read-only="1" type="long"/>
        <property name="unprintableTop" read-only="1" type="long"/>
        <property name="usePrinterCopyCollate" type="boolean"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="MSWebViewAsyncOperation" tags="MSAppOnly">
      <constants>
        <constant name="COMPLETED" tags="MSAppOnly" type="unsigned short" value="1"/>
        <constant name="ERROR" tags="MSAppOnly" type="unsigned short" value="2"/>
        <constant name="STARTED" tags="MSAppOnly" type="unsigned short" value="0"/>
        <constant name="TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM" tags="MSAppOnly" type="unsigned short" value="0"/>
        <constant name="TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION" tags="MSAppOnly" type="unsigned short" value="2"/>
        <constant name="TYPE_INVOKE_SCRIPT" tags="MSAppOnly" type="unsigned short" value="1"/>
      </constants>
      <events>
        <event dispatch="sync" name="complete" skips-window="1" specs="none" tags="MSAppOnly" type="Event"/>
        <event dispatch="sync" name="error" skips-window="1" specs="none" tags="MSAppOnly" type="Event"/>
      </events>
      <methods>
        <method name="start" tags="MSAppOnly" type="void"/>
      </methods>
      <properties>
        <property name="error" read-only="1" tags="MSAppOnly" type="DOMError"/>
        <property event-handler="complete" name="oncomplete" tags="MSAppOnly" type="EventHandler"/>
        <property event-handler="error" name="onerror" tags="MSAppOnly" type="EventHandler"/>
        <property name="readyState" read-only="1" tags="MSAppOnly" type="unsigned short"/>
        <property name="result" read-only="1" tags="MSAppOnly" type="any"/>
        <property name="target" read-only="1" tags="MSAppOnly" type="MSHTMLWebViewElement"/>
        <property name="type" read-only="1" tags="MSAppOnly" type="unsigned short"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSWebViewSettings" tags="MSAppOnly">
      <properties>
        <property name="isJavaScriptEnabled" tags="MSAppOnly" type="bool"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="MediaElementAudioSourceNode"/>
    <interface extends="Object" name="MediaError">
      <constants>
        <constant name="MEDIA_ERR_ABORTED" type="unsigned short" value="1"/>
        <constant name="MEDIA_ERR_DECODE" type="unsigned short" value="3"/>
        <constant name="MEDIA_ERR_NETWORK" type="unsigned short" value="2"/>
        <constant name="MEDIA_ERR_SRC_NOT_SUPPORTED" type="unsigned short" value="4"/>
        <constant name="MS_MEDIA_ERR_ENCRYPTED" type="unsigned short" value="5"/>
      </constants>
      <properties>
        <property name="code" read-only="1" type="short"/>
        <property name="msExtendedCode" read-only="1" tags="Media" type="long"/>
      </properties>
    </interface>
    <interface extends="Object" name="MediaList">
      <methods>
        <method name="appendMedium" tags="CSSOM" type="void">
          <param name="newMedium" type="DOMString"/>
        </method>
        <method name="deleteMedium" tags="CSSOM" type="void">
          <param name="oldMedium" type="DOMString"/>
        </method>
        <method getter="1" name="item" tags="CSSOM" type="DOMString">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="toString" stringifier="1" type="DOMString"/>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="CSSOM" type="unsigned long"/>
        <property name="mediaText" stringifier="1" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="MediaQueryList">
      <methods>
        <method name="addListener" tags="CSSOM" type="void">
          <param name="listener" type="MediaQueryListListener"/>
        </method>
        <method name="removeListener" tags="CSSOM" type="void">
          <param name="listener" type="MediaQueryListListener"/>
        </method>
      </methods>
      <properties>
        <property name="matches" read-only="1" tags="CSSOM" type="boolean"/>
        <property name="media" read-only="1" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="MediaSource" specs="MSE">
      <constructor/>
      <events>
        <event dispatch="sync" name="sourceopen" precedes="sourceended sourceclose" skips-window="1" specs="MSE" type="Event"/>
        <event dispatch="sync" follows="sourceopen" name="sourceended" precedes="sourceclose" skips-window="1" specs="MSE" type="Event"/>
        <event dispatch="sync" follows="sourceended sourceopen" name="sourceclose" skips-window="1" specs="MSE" type="Event"/>
      </events>
      <methods>
        <method name="addSourceBuffer" specs="MSE" type="SourceBuffer">
          <param name="type" type="DOMString"/>
        </method>
        <method name="endOfStream" specs="MSE" type="void">
          <param name="error" optional="1" type="EndOfStreamError"/>
        </method>
        <method name="isTypeSupported" specs="MSE" static="1" type="boolean">
          <param name="type" type="DOMString"/>
        </method>
        <method name="removeSourceBuffer" specs="MSE" type="void">
          <param name="sourceBuffer" type="SourceBuffer"/>
        </method>
      </methods>
      <properties>
        <property name="activeSourceBuffers" read-only="1" specs="MSE" type="SourceBufferList"/>
        <property name="duration" specs="MSE" type="double"/>
        <property name="readyState" read-only="1" specs="MSE" type="ReadyState"/>
        <property name="sourceBuffers" read-only="1" specs="MSE" type="SourceBufferList"/>
      </properties>
    </interface>
    <interface extends="Object" name="MessageChannel">
      <constructor/>
      <properties>
        <property name="port1" read-only="1" type="MessagePort"/>
        <property name="port2" read-only="1" type="MessagePort"/>
      </properties>
    </interface>
    <interface extends="Event" name="MessageEvent">
      <methods>
        <method name="initMessageEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="dataArg" type="any"/>
          <param name="originArg" type="DOMString"/>
          <param name="lastEventIdArg" type="DOMString"/>
          <param name="sourceArg" type="Window"/>
        </method>
      </methods>
      <properties>
        <property name="data" read-only="1" tags="Events" type="any"/>
        <property name="origin" read-only="1" tags="Events" type="DOMString"/>
        <property name="ports" read-only="1" type="any"/>
        <property name="source" read-only="1" tags="Events" type="Window"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="MessagePort">
      <events>
        <event dispatch="async" name="message" skips-window="1" specs="PostMsg" type="MessageEvent"/>
      </events>
      <methods>
        <method name="close" type="void"/>
        <method name="postMessage" type="void">
          <param name="message" optional="1" type="any"/>
          <param name="ports" optional="1" type="any"/>
        </method>
        <method name="start" type="void"/>
      </methods>
      <properties>
        <property event-handler="message" name="onmessage" type="EventHandler"/>
      </properties>
    </interface>
    <interface extends="Object" name="MimeType">
      <properties>
        <property name="description" read-only="1" type="DOMString"/>
        <property name="enabledPlugin" read-only="1" type="Plugin"/>
        <property name="suffixes" read-only="1" type="DOMString"/>
        <property name="type" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="MimeTypeArray">
      <methods>
        <method getter="1" name="item" type="Plugin">
          <param name="index" type="unsigned long"/>
        </method>
        <method getter="1" name="namedItem" type="Plugin">
          <param name="type" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="UIEvent" name="MouseEvent">
      <constructor>
        <param name="typeArg" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="MouseEventInit"/>
      </constructor>
      <methods>
        <method name="getModifierState" tags="Events" type="boolean">
          <param name="keyArg" type="DOMString"/>
        </method>
        <method name="initMouseEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="detailArg" type="long"/>
          <param name="screenXArg" type="long"/>
          <param name="screenYArg" type="long"/>
          <param name="clientXArg" type="long"/>
          <param name="clientYArg" type="long"/>
          <param name="ctrlKeyArg" type="boolean"/>
          <param name="altKeyArg" type="boolean"/>
          <param name="shiftKeyArg" type="boolean"/>
          <param name="metaKeyArg" type="boolean"/>
          <param name="buttonArg" type="unsigned short"/>
          <param name="relatedTargetArg" type="EventTarget"/>
        </method>
      </methods>
      <properties>
        <property name="altKey" read-only="1" tags="Events" type="boolean"/>
        <property name="button" read-only="1" tags="Events" type="unsigned short"/>
        <property name="buttons" read-only="1" tags="Events" type="unsigned short"/>
        <property name="clientX" read-only="1" tags="CSSOM" type="long"/>
        <property name="clientY" read-only="1" tags="CSSOM" type="long"/>
        <property name="ctrlKey" read-only="1" tags="Events" type="boolean"/>
        <property deprecated="1" name="fromElement" read-only="1" tags="Events" type="Element"/>
        <property name="layerX" read-only="1" tags="Events" type="long"/>
        <property name="layerY" read-only="1" tags="Events" type="long"/>
        <property name="metaKey" read-only="1" tags="Events" type="boolean"/>
        <property name="movementX" read-only="1" tags="PointerLock" type="long"/>
        <property name="movementY" read-only="1" tags="PointerLock" type="long"/>
        <property name="offsetX" read-only="1" tags="CSSOM" type="long"/>
        <property name="offsetY" read-only="1" tags="CSSOM" type="long"/>
        <property name="pageX" read-only="1" tags="CSSOM" type="long"/>
        <property name="pageY" read-only="1" tags="CSSOM" type="long"/>
        <property name="relatedTarget" read-only="1" tags="Events" type="EventTarget"/>
        <property name="screenX" read-only="1" tags="CSSOM" type="long"/>
        <property name="screenY" read-only="1" tags="CSSOM" type="long"/>
        <property name="shiftKey" read-only="1" tags="Events" type="boolean"/>
        <property deprecated="1" name="toElement" read-only="1" tags="Events" type="Element"/>
        <property deprecated="1" name="which" read-only="1" tags="Events" type="unsigned short"/>
        <property name="x" read-only="1" tags="CSSOM" type="long"/>
        <property name="y" read-only="1" tags="CSSOM" type="long"/>
      </properties>
    </interface>
    <interface extends="MouseEvent" name="MouseWheelEvent">
      <methods>
        <method deprecated="1" name="initMouseWheelEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="detailArg" type="long"/>
          <param name="screenXArg" type="long"/>
          <param name="screenYArg" type="long"/>
          <param name="clientXArg" type="long"/>
          <param name="clientYArg" type="long"/>
          <param name="buttonArg" type="unsigned short"/>
          <param name="relatedTargetArg" type="EventTarget"/>
          <param name="modifiersListArg" type="DOMString"/>
          <param name="wheelDeltaArg" type="long"/>
        </method>
      </methods>
      <properties>
        <property deprecated="1" name="wheelDelta" read-only="1" tags="Events" type="long"/>
        <property name="wheelDeltaX" read-only="1" tags="Events" type="long"/>
        <property name="wheelDeltaY" read-only="1" tags="Events" type="long"/>
      </properties>
    </interface>
    <interface deprecated="1" extends="Event" name="MutationEvent">
      <constants>
        <constant name="ADDITION" tags="TreeMutation" type="unsigned short" value="2"/>
        <constant name="MODIFICATION" tags="TreeMutation" type="unsigned short" value="1"/>
        <constant name="REMOVAL" tags="TreeMutation" type="unsigned short" value="3"/>
      </constants>
      <methods>
        <method name="initMutationEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="relatedNodeArg" type="Node"/>
          <param name="prevValueArg" type="DOMString"/>
          <param name="newValueArg" type="DOMString"/>
          <param name="attrNameArg" type="DOMString"/>
          <param name="attrChangeArg" type="unsigned short"/>
        </method>
      </methods>
      <properties>
        <property name="attrChange" read-only="1" tags="Events" type="unsigned short"/>
        <property name="attrName" read-only="1" tags="Events" type="DOMString"/>
        <property name="newValue" read-only="1" tags="Events" type="DOMString"/>
        <property name="prevValue" read-only="1" tags="Events" type="DOMString"/>
        <property name="relatedNode" read-only="1" tags="Events" type="Node"/>
      </properties>
    </interface>
    <interface extends="Object" name="MutationObserver">
      <constructor>
        <param name="callback" type="MutationCallback"/>
      </constructor>
      <methods>
        <method name="disconnect" type="void"/>
        <method name="observe" type="void">
          <param name="target" type="Node"/>
          <param name="options" type="MutationObserverInit"/>
        </method>
        <method name="takeRecords" type="sequence&lt;MutationRecord&gt;"/>
      </methods>
    </interface>
    <interface extends="Object" name="MutationRecord">
      <properties>
        <property name="addedNodes" read-only="1" type="NodeList"/>
        <property name="attributeName" nullable="1" read-only="1" type="DOMString"/>
        <property name="attributeNamespace" nullable="1" read-only="1" type="DOMString"/>
        <property name="nextSibling" nullable="1" read-only="1" type="Node"/>
        <property name="oldValue" nullable="1" read-only="1" type="DOMString"/>
        <property name="previousSibling" nullable="1" read-only="1" type="Node"/>
        <property name="removedNodes" read-only="1" type="NodeList"/>
        <property name="target" read-only="1" type="Node"/>
        <property name="type" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="NamedNodeMap">
      <methods>
        <method getter="1" name="getNamedItem" tags="TreeNavigation" type="Attr">
          <param name="name" type="DOMString"/>
        </method>
        <method name="getNamedItemNS" tags="TreeNavigation" type="Attr">
          <param name="namespaceURI" nullable="1" type="DOMString"/>
          <param name="localName" nullable="1" type="DOMString"/>
        </method>
        <method getter="1" name="item" tags="TreeNavigation" type="Attr">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="removeNamedItem" tags="TreeMutation" type="Attr">
          <param name="name" type="DOMString"/>
        </method>
        <method name="removeNamedItemNS" tags="TreeMutation" type="Attr">
          <param name="namespaceURI" nullable="1" type="DOMString"/>
          <param name="localName" nullable="1" type="DOMString"/>
        </method>
        <method name="setNamedItem" tags="TreeMutation" type="Attr">
          <param name="arg" type="Attr"/>
        </method>
        <method name="setNamedItemNS" tags="TreeMutation" type="Attr">
          <param name="arg" type="Attr"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="TreeNavigation" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="NavigationEvent" name="NavigationCompletedEvent" tags="MSAppOnly">
      <properties>
        <property name="isSuccess" read-only="1" tags="MSAppOnly" type="boolean"/>
        <property name="webErrorStatus" read-only="1" tags="MSAppOnly" type="unsigned long long"/>
      </properties>
    </interface>
    <interface extends="Event" name="NavigationEvent" tags="MSAppOnly">
      <properties>
        <property name="uri" read-only="1" tags="MSAppOnly" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="NavigationEvent" name="NavigationEventWithReferrer" tags="MSAppOnly">
      <properties>
        <property name="referer" read-only="1" tags="MSAppOnly" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="Navigator">
      <implements>NavigatorID</implements>
      <implements>NavigatorOnLine</implements>
      <implements>NavigatorContentUtils</implements>
      <implements>NavigatorStorageUtils</implements>
      <implements>NavigatorGeolocation</implements>
      <implements>MSNavigatorDoNotTrack</implements>
      <implements>MSFileSaver</implements>
      <methods>
        <method name="getGamepads" type="sequence&lt;Gamepad&gt;"/>
        <method name="javaEnabled" type="boolean"/>
        <method name="msLaunchUri" type="void">
          <param name="uri" type="DOMString"/>
          <param default="0" name="successCallback" optional="1" type="MSLaunchUriCallback"/>
          <param default="0" name="noHandlerCallback" optional="1" type="MSLaunchUriCallback"/>
        </method>
      </methods>
      <properties>
        <property name="appCodeName" read-only="1" type="DOMString"/>
        <property deprecated="1" name="appMinorVersion" read-only="1" type="DOMString"/>
        <property deprecated="1" name="browserLanguage" read-only="1" type="DOMString"/>
        <property name="connectionSpeed" property-descriptor-not-configurable="1" property-descriptor-not-enumerable="1" read-only="1" tags="NetworkAccess" type="long"/>
        <property name="cookieEnabled" read-only="1" type="boolean"/>
        <property name="cpuClass" read-only="1" type="DOMString"/>
        <property name="language" read-only="1" type="DOMString"/>
        <property name="maxTouchPoints" read-only="1" type="long"/>
        <property name="mimeTypes" read-only="1" tags="NetworkAccess" type="MSMimeTypesCollection"/>
        <property name="msManipulationViewsEnabled" read-only="1" type="boolean"/>
        <property name="msMaxTouchPoints" read-only="1" type="long"/>
        <property name="msPointerEnabled" read-only="1" type="boolean"/>
        <property name="plugins" read-only="1" type="MSPluginsCollection"/>
        <property name="pointerEnabled" read-only="1" type="boolean"/>
        <property name="systemLanguage" read-only="1" type="DOMString"/>
        <property deprecated="1" name="userLanguage" read-only="1" type="DOMString"/>
        <property name="webdriver" read-only="1" type="boolean"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="Node">
      <constants>
        <constant name="ATTRIBUTE_NODE" tags="TreeIdentity" type="unsigned short" value="2"/>
        <constant name="CDATA_SECTION_NODE" tags="TreeIdentity" type="unsigned short" value="4"/>
        <constant name="COMMENT_NODE" tags="TreeIdentity" type="unsigned short" value="8"/>
        <constant name="DOCUMENT_FRAGMENT_NODE" tags="TreeIdentity" type="unsigned short" value="11"/>
        <constant name="DOCUMENT_NODE" tags="TreeIdentity" type="unsigned short" value="9"/>
        <constant name="DOCUMENT_POSITION_CONTAINED_BY" tags="TreeNavigation" type="unsigned short" value="0x10"/>
        <constant name="DOCUMENT_POSITION_CONTAINS" tags="TreeNavigation" type="unsigned short" value="0x08"/>
        <constant name="DOCUMENT_POSITION_DISCONNECTED" tags="TreeNavigation" type="unsigned short" value="0x01"/>
        <constant name="DOCUMENT_POSITION_FOLLOWING" tags="TreeNavigation" type="unsigned short" value="0x04"/>
        <constant name="DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC" tags="TreeNavigation" type="unsigned short" value="0x20"/>
        <constant name="DOCUMENT_POSITION_PRECEDING" tags="TreeNavigation" type="unsigned short" value="0x02"/>
        <constant name="DOCUMENT_TYPE_NODE" tags="TreeIdentity" type="unsigned short" value="10"/>
        <constant name="ELEMENT_NODE" tags="TreeIdentity" type="unsigned short" value="1"/>
        <constant name="ENTITY_NODE" tags="TreeIdentity" type="unsigned short" value="6"/>
        <constant name="ENTITY_REFERENCE_NODE" tags="TreeIdentity" type="unsigned short" value="5"/>
        <constant name="NOTATION_NODE" tags="TreeIdentity" type="unsigned short" value="12"/>
        <constant name="PROCESSING_INSTRUCTION_NODE" tags="TreeIdentity" type="unsigned short" value="7"/>
        <constant name="TEXT_NODE" tags="TreeIdentity" type="unsigned short" value="3"/>
      </constants>
      <methods>
        <method name="appendChild" tags="TreeMutation" type="Node">
          <param name="newChild" type="Node"/>
        </method>
        <method name="cloneNode" tags="TreeMutation" type="Node">
          <param default="false" name="deep" optional="1" type="boolean"/>
        </method>
        <method name="compareDocumentPosition" tags="TreeNavigation" type="unsigned short">
          <param name="other" type="Node"/>
        </method>
        <method name="hasAttributes" tags="TreeNavigation" type="boolean"/>
        <method name="hasChildNodes" tags="TreeNavigation" type="boolean"/>
        <method name="insertBefore" tags="TreeMutation" type="Node">
          <param name="newChild" type="Node"/>
          <param name="refChild" optional="1" type="Node"/>
        </method>
        <method name="isDefaultNamespace" tags="Namespaces" type="boolean">
          <param name="namespaceURI" nullable="1" type="DOMString"/>
        </method>
        <method name="isEqualNode" tags="TreeNavigation" type="boolean">
          <param name="arg" type="Node"/>
        </method>
        <method name="isSameNode" tags="TreeNavigation" type="boolean">
          <param name="other" type="Node"/>
        </method>
        <method name="lookupNamespaceURI" nullable="1" tags="Namespaces" type="DOMString">
          <param name="prefix" nullable="1" type="DOMString"/>
        </method>
        <method name="lookupPrefix" nullable="1" tags="Namespaces" type="DOMString">
          <param name="namespaceURI" nullable="1" type="DOMString"/>
        </method>
        <method name="normalize" tags="TreeMutation" type="void"/>
        <method name="removeChild" tags="TreeMutation" type="Node">
          <param name="oldChild" type="Node"/>
        </method>
        <method name="replaceChild" tags="TreeMutation" type="Node">
          <param name="newChild" type="Node"/>
          <param name="oldChild" type="Node"/>
        </method>
      </methods>
      <properties>
        <property name="attributes" read-only="1" tags="TreeNavigation" type="NamedNodeMap"/>
        <property name="baseURI" nullable="1" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="childNodes" read-only="1" tags="TreeNavigation" type="NodeList"/>
        <property name="firstChild" read-only="1" tags="TreeNavigation" type="Node"/>
        <property name="lastChild" read-only="1" tags="TreeNavigation" type="Node"/>
        <property name="localName" nullable="1" read-only="1" tags="Namespaces" type="DOMString"/>
        <property name="namespaceURI" nullable="1" read-only="1" tags="Namespaces" type="DOMString"/>
        <property name="nextSibling" read-only="1" tags="TreeNavigation" type="Node"/>
        <property name="nodeName" read-only="1" tags="TreeIdentity" type="DOMString"/>
        <property name="nodeType" read-only="1" tags="TreeIdentity" type="unsigned short"/>
        <property name="nodeValue" nullable="1" tags="TreeIdentity" treat-null-as="EmptyString" type="DOMString"/>
        <property name="ownerDocument" read-only="1" tags="TreeNavigation" type="Document"/>
        <property name="parentElement" read-only="1" tags="TreeNavigation" type="HTMLElement"/>
        <property name="parentNode" read-only="1" tags="TreeNavigation" type="Node"/>
        <property name="prefix" nullable="1" tags="Namespaces" type="DOMString"/>
        <property name="previousSibling" read-only="1" tags="TreeNavigation" type="Node"/>
        <property name="textContent" nullable="1" tags="TreeMutation" treat-null-as="EmptyString" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="NodeFilter" static="1">
      <constants>
        <constant name="FILTER_ACCEPT" tags="TreeNavigation" type="short" value="1"/>
        <constant name="FILTER_REJECT" tags="TreeNavigation" type="short" value="2"/>
        <constant name="FILTER_SKIP" tags="TreeNavigation" type="short" value="3"/>
        <constant name="SHOW_ALL" tags="TreeNavigation" type="unsigned long" value="0xFFFFFFFF"/>
        <constant name="SHOW_ATTRIBUTE" tags="TreeNavigation" type="unsigned long" value="0x00000002"/>
        <constant name="SHOW_CDATA_SECTION" tags="TreeNavigation" type="unsigned long" value="0x00000008"/>
        <constant name="SHOW_COMMENT" tags="TreeNavigation" type="unsigned long" value="0x00000080"/>
        <constant name="SHOW_DOCUMENT" tags="TreeNavigation" type="unsigned long" value="0x00000100"/>
        <constant name="SHOW_DOCUMENT_FRAGMENT" tags="TreeNavigation" type="unsigned long" value="0x00000400"/>
        <constant name="SHOW_DOCUMENT_TYPE" tags="TreeNavigation" type="unsigned long" value="0x00000200"/>
        <constant name="SHOW_ELEMENT" tags="TreeNavigation" type="unsigned long" value="0x00000001"/>
        <constant name="SHOW_ENTITY" tags="TreeNavigation" type="unsigned long" value="0x00000020"/>
        <constant name="SHOW_ENTITY_REFERENCE" tags="TreeNavigation" type="unsigned long" value="0x00000010"/>
        <constant name="SHOW_NOTATION" tags="TreeNavigation" type="unsigned long" value="0x00000800"/>
        <constant name="SHOW_PROCESSING_INSTRUCTION" tags="TreeNavigation" type="unsigned long" value="0x00000040"/>
        <constant name="SHOW_TEXT" tags="TreeNavigation" type="unsigned long" value="0x00000004"/>
      </constants>
      <methods>
        <method name="acceptNode" type="short">
          <param name="n" type="Node"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="NodeIterator">
      <methods>
        <method name="detach" tags="TreeNavigation" type="void"/>
        <method name="nextNode" tags="TreeNavigation" type="Node"/>
        <method name="previousNode" tags="TreeNavigation" type="Node"/>
      </methods>
      <properties>
        <property name="expandEntityReferences" read-only="1" tags="TreeNavigation" type="boolean"/>
        <property name="filter" read-only="1" tags="TreeNavigation" type="NodeFilter"/>
        <property name="root" read-only="1" tags="TreeNavigation" type="Node"/>
        <property name="whatToShow" read-only="1" tags="TreeNavigation" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="NodeList">
      <methods>
        <method getter="1" name="item" tags="TreeNavigation" type="Node">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="TreeNavigation" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="OES_element_index_uint"/>
    <interface extends="Object" name="OES_standard_derivatives">
      <constants>
        <constant name="FRAGMENT_SHADER_DERIVATIVE_HINT_OES" type="unsigned long" type-original="GLenum" value="0x8B8B"/>
      </constants>
    </interface>
    <interface extends="Object" name="OES_texture_float"/>
    <interface extends="Object" name="OES_texture_float_linear"/>
    <interface extends="Event" name="OfflineAudioCompletionEvent">
      <properties>
        <property name="renderedBuffer" read-only="1" type="AudioBuffer"/>
      </properties>
    </interface>
    <interface extends="AudioContext" name="OfflineAudioContext">
      <constructor>
        <param name="numberOfChannels" type="unsigned long"/>
        <param name="length" type="unsigned long"/>
        <param name="sampleRate" type="float"/>
      </constructor>
      <events>
        <event dispatch="sync" name="complete" skips-window="1" specs="Audio" type="OfflineAudioCompletionEvent"/>
      </events>
      <methods>
        <method name="startRendering" type="void"/>
      </methods>
      <properties>
        <property event-handler="complete" name="oncomplete" type="EventHandler"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="OscillatorNode">
      <events>
        <event dispatch="sync" name="end" skips-window="1" specs="Audio" type="Event"/>
      </events>
      <methods>
        <method name="setPeriodicWave" type="void">
          <param name="periodicWave" type="PeriodicWave"/>
        </method>
        <method name="start" type="void">
          <param default="0" name="when" optional="1" type="double"/>
        </method>
        <method name="stop" type="void">
          <param default="0" name="when" optional="1" type="double"/>
        </method>
      </methods>
      <properties>
        <property name="detune" read-only="1" type="AudioParam"/>
        <property name="frequency" read-only="1" type="AudioParam"/>
        <property event-handler="ended" name="onended" type="EventHandler"/>
        <property name="type" type="OscillatorType"/>
      </properties>
    </interface>
    <interface extends="Event" name="PageTransitionEvent">
      <properties>
        <property name="persisted" read-only="1" type="boolean"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="PannerNode">
      <methods>
        <method name="setOrientation" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="z" type="float"/>
        </method>
        <method name="setPosition" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="z" type="float"/>
        </method>
        <method name="setVelocity" type="void">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="z" type="float"/>
        </method>
      </methods>
      <properties>
        <property name="coneInnerAngle" type="float"/>
        <property name="coneOuterAngle" type="float"/>
        <property name="coneOuterGain" type="float"/>
        <property name="distanceModel" type="DistanceModelType"/>
        <property name="maxDistance" type="float"/>
        <property name="panningModel" type="PanningModelType"/>
        <property name="refDistance" type="float"/>
        <property name="rolloffFactor" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="PerfWidgetExternal">
      <methods>
        <method name="addEventListener" type="void">
          <param name="eventType" type="DOMString"/>
          <param name="callback" type="Function"/>
        </method>
        <method name="getMemoryUsage" type="unsigned long"/>
        <method name="getProcessCpuUsage" type="unsigned long"/>
        <method name="getRecentCpuUsage" type="any">
          <param name="last" nullable="1" type="unsigned long long"/>
        </method>
        <method name="getRecentFrames" type="any">
          <param name="last" nullable="1" type="unsigned long long"/>
        </method>
        <method name="getRecentMemoryUsage" type="any">
          <param name="last" nullable="1" type="unsigned long long"/>
        </method>
        <method name="getRecentPaintRequests" type="any">
          <param name="last" nullable="1" type="unsigned long long"/>
        </method>
        <method name="removeEventListener" type="void">
          <param name="eventType" type="DOMString"/>
          <param name="callback" type="Function"/>
        </method>
        <method name="repositionWindow" type="void">
          <param name="x" type="long"/>
          <param name="y" type="long"/>
        </method>
        <method name="resizeWindow" type="void">
          <param name="width" type="unsigned long"/>
          <param name="height" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="activeNetworkRequestCount" read-only="1" type="unsigned long"/>
        <property name="averageFrameTime" read-only="1" type="double"/>
        <property name="averagePaintTime" read-only="1" type="double"/>
        <property name="extraInformationEnabled" read-only="1" type="boolean"/>
        <property name="independentRenderingEnabled" read-only="1" type="boolean"/>
        <property name="irDisablingContentString" read-only="1" type="DOMString"/>
        <property name="irStatusAvailable" read-only="1" type="boolean"/>
        <property name="maxCpuSpeed" read-only="1" type="unsigned long"/>
        <property name="paintRequestsPerSecond" read-only="1" type="unsigned long"/>
        <property name="performanceCounter" read-only="1" type="unsigned long long"/>
        <property name="performanceCounterFrequency" read-only="1" type="unsigned long long"/>
      </properties>
    </interface>
    <interface extends="Object" name="Performance">
      <methods>
        <method name="clearMarks" tags="Performance" type="void">
          <param name="markName" optional="1" type="DOMString"/>
        </method>
        <method name="clearMeasures" tags="Performance" type="void">
          <param name="measureName" optional="1" type="DOMString"/>
        </method>
        <method name="clearResourceTimings" tags="Performance" type="void"/>
        <method name="getEntries" tags="Performance" type="any"/>
        <method name="getEntriesByName" tags="Performance" type="any">
          <param name="name" type="DOMString"/>
          <param name="entryType" optional="1" type="DOMString"/>
        </method>
        <method name="getEntriesByType" tags="Performance" type="any">
          <param name="entryType" type="DOMString"/>
        </method>
        <method name="getMarks" tags="Performance" type="any">
          <param name="markName" optional="1" type="DOMString"/>
        </method>
        <method name="getMeasures" tags="Performance" type="any">
          <param name="measureName" optional="1" type="DOMString"/>
        </method>
        <method name="mark" tags="Performance" type="void">
          <param name="markName" type="DOMString"/>
        </method>
        <method name="measure" tags="Performance" type="void">
          <param name="measureName" type="DOMString"/>
          <param name="startMarkName" optional="1" type="DOMString"/>
          <param name="endMarkName" optional="1" type="DOMString"/>
        </method>
        <method name="now" tags="Performance" type="DOMHighResTimeStamp"/>
        <method name="setResourceTimingBufferSize" tags="Performance" type="void">
          <param name="maxSize" type="unsigned long"/>
        </method>
        <method name="toJSON" tags="Performance" type="any"/>
      </methods>
      <properties>
        <property name="navigation" read-only="1" tags="Performance" type="PerformanceNavigation"/>
        <property name="timing" read-only="1" tags="Performance" type="PerformanceTiming"/>
      </properties>
    </interface>
    <interface extends="Object" name="PerformanceEntry">
      <properties>
        <property name="duration" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
        <property name="entryType" read-only="1" tags="Performance" type="DOMString"/>
        <property name="name" read-only="1" tags="Performance" type="DOMString"/>
        <property name="startTime" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
      </properties>
    </interface>
    <interface extends="PerformanceEntry" name="PerformanceMark"/>
    <interface extends="PerformanceEntry" name="PerformanceMeasure"/>
    <interface extends="Object" name="PerformanceNavigation">
      <constants>
        <constant name="TYPE_BACK_FORWARD" type="unsigned short" value="2"/>
        <constant name="TYPE_NAVIGATE" type="unsigned short" value="0"/>
        <constant name="TYPE_RELOAD" type="unsigned short" value="1"/>
        <constant name="TYPE_RESERVED" type="unsigned short" value="255"/>
      </constants>
      <methods>
        <method name="toJSON" tags="Performance" type="any"/>
      </methods>
      <properties>
        <property name="redirectCount" read-only="1" tags="Performance" type="unsigned long"/>
        <property name="type" read-only="1" tags="Performance" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="PerformanceEntry" name="PerformanceNavigationTiming" tags="Performance">
      <properties>
        <property name="connectEnd" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="connectStart" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="domComplete" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="domContentLoadedEventEnd" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="domContentLoadedEventStart" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="domInteractive" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="domLoading" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="domainLookupEnd" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="domainLookupStart" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="fetchStart" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="loadEventEnd" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="loadEventStart" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="navigationStart" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="redirectCount" read-only="1" type="unsigned short"/>
        <property name="redirectEnd" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="redirectStart" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="requestStart" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="responseEnd" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="responseStart" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="type" read-only="1" type="DOMString"/>
        <property name="unloadEventEnd" read-only="1" type="DOMHighResTimeStamp"/>
        <property name="unloadEventStart" read-only="1" type="DOMHighResTimeStamp"/>
      </properties>
    </interface>
    <interface extends="PerformanceEntry" name="PerformanceResourceTiming">
      <properties>
        <property name="connectEnd" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
        <property name="connectStart" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
        <property name="domainLookupEnd" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
        <property name="domainLookupStart" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
        <property name="fetchStart" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
        <property name="initiatorType" read-only="1" tags="Performance" type="DOMString"/>
        <property name="redirectEnd" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
        <property name="redirectStart" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
        <property name="requestStart" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
        <property name="responseEnd" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
        <property name="responseStart" read-only="1" tags="Performance" type="DOMHighResTimeStamp"/>
      </properties>
    </interface>
    <interface extends="Object" name="PerformanceTiming">
      <methods>
        <method name="toJSON" tags="Performance" type="any"/>
      </methods>
      <properties>
        <property name="connectEnd" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="connectStart" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="domComplete" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="domContentLoadedEventEnd" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="domContentLoadedEventStart" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="domInteractive" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="domLoading" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="domainLookupEnd" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="domainLookupStart" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="fetchStart" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="loadEventEnd" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="loadEventStart" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="msFirstPaint" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="navigationStart" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="redirectEnd" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="redirectStart" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="requestStart" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="responseEnd" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="responseStart" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="unloadEventEnd" read-only="1" tags="Performance" type="unsigned long long"/>
        <property name="unloadEventStart" read-only="1" tags="Performance" type="unsigned long long"/>
      </properties>
    </interface>
    <interface extends="Object" name="PeriodicWave"/>
    <interface extends="DeferredPermissionRequest" name="PermissionRequest">
      <methods>
        <method name="defer" type="void"/>
      </methods>
      <properties>
        <property name="state" read-only="1" type="MSWebViewPermissionState"/>
      </properties>
    </interface>
    <interface extends="Event" name="PermissionRequestedEvent">
      <properties>
        <property name="permissionRequest" read-only="1" type="PermissionRequest"/>
      </properties>
    </interface>
    <interface extends="Object" name="Plugin">
      <methods>
        <method getter="1" name="item" type="MimeType">
          <param name="index" type="unsigned long"/>
        </method>
        <method getter="1" name="namedItem" type="MimeType">
          <param name="type" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="description" read-only="1" type="DOMString"/>
        <property name="filename" read-only="1" type="DOMString"/>
        <property name="length" read-only="1" type="unsigned long"/>
        <property name="name" read-only="1" type="DOMString"/>
        <property name="version" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="PluginArray">
      <methods>
        <method getter="1" name="item" type="Plugin">
          <param name="index" type="unsigned long"/>
        </method>
        <method getter="1" name="namedItem" type="Plugin">
          <param name="name" type="DOMString"/>
        </method>
        <method name="refresh" type="void">
          <param name="reload" optional="1" type="boolean"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="MouseEvent" name="PointerEvent">
      <constructor>
        <param name="typeArg" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="PointerEventInit"/>
      </constructor>
      <methods>
        <method name="getCurrentPoint" tags="Events" type="void">
          <param name="element" type="Element"/>
        </method>
        <method name="getIntermediatePoints" tags="Events" type="void">
          <param name="element" type="Element"/>
        </method>
        <method name="initPointerEvent" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="detailArg" type="long"/>
          <param name="screenXArg" type="long"/>
          <param name="screenYArg" type="long"/>
          <param name="clientXArg" type="float"/>
          <param name="clientYArg" type="float"/>
          <param name="ctrlKeyArg" type="boolean"/>
          <param name="altKeyArg" type="boolean"/>
          <param name="shiftKeyArg" type="boolean"/>
          <param name="metaKeyArg" type="boolean"/>
          <param name="buttonArg" type="unsigned short"/>
          <param name="relatedTargetArg" type="EventTarget"/>
          <param name="offsetXArg" type="float"/>
          <param name="offsetYArg" type="float"/>
          <param name="widthArg" type="long"/>
          <param name="heightArg" type="long"/>
          <param name="pressure" type="float"/>
          <param name="rotation" type="long"/>
          <param name="tiltX" type="long"/>
          <param name="tiltY" type="long"/>
          <param name="pointerIdArg" type="long"/>
          <param name="pointerType" type="any"/>
          <param name="hwTimestampArg" type="unsigned long long"/>
          <param name="isPrimary" type="boolean"/>
        </method>
      </methods>
      <properties>
        <property name="currentPoint" read-only="1" tags="Events" type="any"/>
        <property name="height" read-only="1" type="long"/>
        <property name="hwTimestamp" read-only="1" type="unsigned long long"/>
        <property name="intermediatePoints" read-only="1" tags="Events" type="any"/>
        <property name="isPrimary" read-only="1" type="boolean"/>
        <property name="pointerId" read-only="1" type="long"/>
        <property name="pointerType" read-only="1" type="any"/>
        <property name="pressure" read-only="1" type="float"/>
        <property name="rotation" read-only="1" type="long"/>
        <property name="tiltX" read-only="1" type="long"/>
        <property name="tiltY" read-only="1" type="long"/>
        <property name="width" read-only="1" type="long"/>
      </properties>
    </interface>
    <interface extends="Event" name="PopStateEvent">
      <methods>
        <method name="initPopStateEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="stateArg" type="any"/>
        </method>
      </methods>
      <properties>
        <property name="state" read-only="1" tags="Events" type="any"/>
      </properties>
    </interface>
    <interface extends="Object" name="Position">
      <properties>
        <property name="coords" read-only="1" tags="Geolocation" type="Coordinates"/>
        <property name="timestamp" read-only="1" tags="Geolocation" type="DOMTimeStamp"/>
      </properties>
    </interface>
    <interface extends="Object" name="PositionError">
      <constants>
        <constant name="PERMISSION_DENIED" type="unsigned short" value="1"/>
        <constant name="POSITION_UNAVAILABLE" type="unsigned short" value="2"/>
        <constant name="TIMEOUT" type="unsigned short" value="3"/>
      </constants>
      <methods>
        <method name="toString" stringifier="1" type="DOMString"/>
      </methods>
      <properties>
        <property name="code" read-only="1" tags="Geolocation" type="unsigned short"/>
        <property name="message" read-only="1" stringifier="1" tags="Geolocation" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="CharacterData" name="ProcessingInstruction">
      <events>
        <event bubbles="1" dispatch="sync" name="DOMCharacterDataModified" specs="DOM3E" type="MutationEvent"/>
      </events>
      <properties>
        <property name="target" read-only="1" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Event" name="ProgressEvent">
      <methods>
        <method name="initProgressEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="lengthComputableArg" type="boolean"/>
          <param name="loadedArg" type="unsigned long long"/>
          <param name="totalArg" type="unsigned long long"/>
        </method>
      </methods>
      <properties>
        <property name="lengthComputable" read-only="1" tags="Events" type="boolean"/>
        <property name="loaded" read-only="1" tags="Events" type="unsigned long long"/>
        <property name="total" read-only="1" tags="Events" type="unsigned long long"/>
      </properties>
    </interface>
    <interface extends="Object" name="Range">
      <constants>
        <constant name="END_TO_END" tags="Editing" type="unsigned short" value="2"/>
        <constant name="END_TO_START" tags="Editing" type="unsigned short" value="3"/>
        <constant name="START_TO_END" tags="Editing" type="unsigned short" value="1"/>
        <constant name="START_TO_START" tags="Editing" type="unsigned short" value="0"/>
      </constants>
      <methods>
        <method name="cloneContents" tags="Editing" type="DocumentFragment"/>
        <method name="cloneRange" tags="Editing" type="Range"/>
        <method name="collapse" tags="Editing" type="void">
          <param name="toStart" type="boolean"/>
        </method>
        <method name="compareBoundaryPoints" tags="Editing" type="short">
          <param name="how" type="unsigned short"/>
          <param name="sourceRange" type="Range"/>
        </method>
        <method name="createContextualFragment" type="DocumentFragment">
          <param name="fragment" type="DOMString"/>
        </method>
        <method name="deleteContents" tags="Editing" type="void"/>
        <method name="detach" tags="Editing" type="void"/>
        <method name="expand" tags="Editing" type="boolean">
          <param name="Unit" type="ExpandGranularity"/>
        </method>
        <method name="extractContents" tags="Editing" type="DocumentFragment"/>
        <method name="getBoundingClientRect" tags="CSSOM" type="ClientRect"/>
        <method name="getClientRects" tags="CSSOM" type="ClientRectList"/>
        <method name="insertNode" tags="Editing" type="void">
          <param name="newNode" type="Node"/>
        </method>
        <method name="selectNode" tags="Editing" type="void">
          <param name="refNode" type="Node"/>
        </method>
        <method name="selectNodeContents" tags="Editing" type="void">
          <param name="refNode" type="Node"/>
        </method>
        <method name="setEnd" tags="Editing" type="void">
          <param name="refNode" type="Node"/>
          <param name="offset" type="long"/>
        </method>
        <method name="setEndAfter" tags="Editing" type="void">
          <param name="refNode" type="Node"/>
        </method>
        <method name="setEndBefore" tags="Editing" type="void">
          <param name="refNode" type="Node"/>
        </method>
        <method name="setStart" tags="Editing" type="void">
          <param name="refNode" type="Node"/>
          <param name="offset" type="long"/>
        </method>
        <method name="setStartAfter" tags="Editing" type="void">
          <param name="refNode" type="Node"/>
        </method>
        <method name="setStartBefore" tags="Editing" type="void">
          <param name="refNode" type="Node"/>
        </method>
        <method name="surroundContents" tags="Editing" type="void">
          <param name="newParent" type="Node"/>
        </method>
        <method name="toString" stringifier="1" tags="Editing" type="DOMString"/>
      </methods>
      <properties>
        <property name="collapsed" read-only="1" tags="Editing" type="boolean"/>
        <property name="commonAncestorContainer" read-only="1" tags="Editing" type="Node"/>
        <property name="endContainer" read-only="1" tags="Editing" type="Node"/>
        <property name="endOffset" read-only="1" tags="Editing" type="long"/>
        <property name="startContainer" read-only="1" tags="Editing" type="Node"/>
        <property name="startOffset" read-only="1" tags="Editing" type="long"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGAElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="accumulate inherit" name="enable-background" value-syntax="svg_enum_new_followed_by_svg_viewbox"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="a" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGURIReference</implements>
      <properties>
        <property content-attribute="target" content-attribute-enum-values="_blank _self _parent _top" content-attribute-reflects="1" content-attribute-value-syntax="name_ref" name="target" read-only="1" type="SVGAnimatedString"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAngle">
      <constants>
        <constant name="SVG_ANGLETYPE_DEG" type="unsigned short" value="2"/>
        <constant name="SVG_ANGLETYPE_GRAD" type="unsigned short" value="4"/>
        <constant name="SVG_ANGLETYPE_RAD" type="unsigned short" value="3"/>
        <constant name="SVG_ANGLETYPE_UNKNOWN" type="unsigned short" value="0"/>
        <constant name="SVG_ANGLETYPE_UNSPECIFIED" type="unsigned short" value="1"/>
      </constants>
      <methods>
        <method name="convertToSpecifiedUnits" type="void">
          <param name="unitType" type="unsigned short"/>
        </method>
        <method name="newValueSpecifiedUnits" type="void">
          <param name="unitType" type="unsigned short"/>
          <param name="valueInSpecifiedUnits" type="float"/>
        </method>
      </methods>
      <properties>
        <property name="unitType" read-only="1" type="unsigned short"/>
        <property name="value" type="float"/>
        <property name="valueAsString" type="DOMString"/>
        <property name="valueInSpecifiedUnits" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedAngle">
      <properties>
        <property name="animVal" read-only="1" type="SVGAngle"/>
        <property name="baseVal" read-only="1" type="SVGAngle"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedBoolean">
      <properties>
        <property name="animVal" read-only="1" type="boolean"/>
        <property name="baseVal" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedEnumeration">
      <properties>
        <property name="animVal" read-only="1" type="unsigned short"/>
        <property name="baseVal" type="unsigned short"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedInteger">
      <properties>
        <property name="animVal" read-only="1" type="long"/>
        <property name="baseVal" type="long"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedLength">
      <properties>
        <property name="animVal" read-only="1" type="SVGLength"/>
        <property name="baseVal" read-only="1" type="SVGLength"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedLengthList">
      <properties>
        <property name="animVal" read-only="1" type="SVGLengthList"/>
        <property name="baseVal" read-only="1" type="SVGLengthList"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedNumber">
      <properties>
        <property name="animVal" read-only="1" type="float"/>
        <property name="baseVal" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedNumberList">
      <properties>
        <property name="animVal" read-only="1" type="SVGNumberList"/>
        <property name="baseVal" read-only="1" type="SVGNumberList"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedPreserveAspectRatio">
      <properties>
        <property name="animVal" read-only="1" type="SVGPreserveAspectRatio"/>
        <property name="baseVal" read-only="1" type="SVGPreserveAspectRatio"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedRect">
      <properties>
        <property name="animVal" read-only="1" type="SVGRect"/>
        <property name="baseVal" read-only="1" type="SVGRect"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedString">
      <properties>
        <property name="animVal" read-only="1" type="DOMString"/>
        <property name="baseVal" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedTransformList">
      <properties>
        <property name="animVal" read-only="1" type="SVGTransformList"/>
        <property name="baseVal" read-only="1" type="SVGTransformList"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGCircleElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="clip-rule" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="fill" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="inherit" name="fill-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="fill-rule" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit" name="pointer-events" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="stroke" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="none inherit" name="stroke-dasharray" value-syntax="comma_or_space_separated_css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="stroke-dashoffset" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="butt round square inherit" name="stroke-linecap" value-syntax="enum"/>
        <parsedattribute enum-values="miter round bevel inherit" name="stroke-linejoin" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="stroke-miterlimit" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-width" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="circle" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <properties>
        <property content-attribute="cx" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="cx" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="cy" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="cy" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="r" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="r" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGClipPathElement">
      <element name="clipPath" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGUnitTypes</implements>
      <properties>
        <property content-attribute="clipPathUnits" content-attribute-enum-values="userSpaceOnUse objectBoundingBox" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="clipPathUnits" read-only="1" type="SVGAnimatedEnumeration"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGComponentTransferFunctionElement" tags="SVGFilters">
      <constants>
        <constant name="SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE" tags="SVGFilters" type="unsigned short" value="3"/>
        <constant name="SVG_FECOMPONENTTRANSFER_TYPE_GAMMA" tags="SVGFilters" type="unsigned short" value="5"/>
        <constant name="SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY" tags="SVGFilters" type="unsigned short" value="1"/>
        <constant name="SVG_FECOMPONENTTRANSFER_TYPE_LINEAR" tags="SVGFilters" type="unsigned short" value="4"/>
        <constant name="SVG_FECOMPONENTTRANSFER_TYPE_TABLE" tags="SVGFilters" type="unsigned short" value="2"/>
        <constant name="SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN" tags="SVGFilters" type="unsigned short" value="0"/>
      </constants>
      <properties>
        <property content-attribute="amplitude" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="amplitude" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="exponent" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="exponent" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="intercept" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="intercept" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="offset" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="offset" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="slope" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="slope" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="tableValues" content-attribute-reflects="1" content-attribute-value-syntax="comma_or_space_separated_floating_point_numbers" name="tableValues" read-only="1" tags="SVGFilters" type="SVGAnimatedNumberList"/>
        <property content-attribute="type" content-attribute-enum-values="identity table discrete linear gamma" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="type" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGDefsElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="accumulate inherit" name="enable-background" value-syntax="svg_enum_new_followed_by_svg_viewbox"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
      </anonymous-content-attributes>
      <element name="defs" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
    </interface>
    <interface extends="SVGElement" name="SVGDescElement">
      <element name="desc" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGLangSpace</implements>
    </interface>
    <interface extends="Element" name="SVGElement">
      <events>
        <event dispatch="async" name="SVGLoad" specs="SVG1.1" type="Event"/>
      </events>
      <properties>
        <property content-attribute="id" content-attribute-reflects="1" name="id" type="DOMString"/>
        <property content-attribute="onclick" content-attribute-value-syntax="javascript" event-handler="click" name="onclick" type="EventHandler"/>
        <property content-attribute="ondblclick" content-attribute-value-syntax="javascript" event-handler="dblclick" name="ondblclick" type="EventHandler"/>
        <property content-attribute="onfocusin" content-attribute-value-syntax="javascript" event-handler="focusin" name="onfocusin" type="EventHandler"/>
        <property content-attribute="onfocusout" content-attribute-value-syntax="javascript" event-handler="focusout" name="onfocusout" type="EventHandler"/>
        <property content-attribute="onload" content-attribute-value-syntax="javascript" event-handler="load" name="onload" type="EventHandler"/>
        <property content-attribute="onmousedown" content-attribute-value-syntax="javascript" event-handler="mousedown" name="onmousedown" type="EventHandler"/>
        <property content-attribute="onmousemove" content-attribute-value-syntax="javascript" event-handler="mousemove" name="onmousemove" type="EventHandler"/>
        <property content-attribute="onmouseout" content-attribute-value-syntax="javascript" event-handler="mouseout" name="onmouseout" type="EventHandler"/>
        <property content-attribute="onmouseover" content-attribute-value-syntax="javascript" event-handler="mouseover" name="onmouseover" type="EventHandler"/>
        <property content-attribute="onmouseup" content-attribute-value-syntax="javascript" event-handler="mouseup" name="onmouseup" type="EventHandler"/>
        <property name="ownerSVGElement" read-only="1" type="SVGSVGElement"/>
        <property name="viewportElement" read-only="1" type="SVGElement"/>
        <property name="xmlbase" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="SVGElementInstance">
      <properties>
        <property name="childNodes" read-only="1" type="SVGElementInstanceList"/>
        <property name="correspondingElement" read-only="1" type="SVGElement"/>
        <property name="correspondingUseElement" read-only="1" type="SVGUseElement"/>
        <property name="firstChild" read-only="1" type="SVGElementInstance"/>
        <property name="lastChild" read-only="1" type="SVGElementInstance"/>
        <property name="nextSibling" read-only="1" type="SVGElementInstance"/>
        <property name="parentNode" read-only="1" type="SVGElementInstance"/>
        <property name="previousSibling" read-only="1" type="SVGElementInstance"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGElementInstanceList">
      <methods>
        <method name="item" type="SVGElementInstance">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGEllipseElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="clip-rule" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="fill" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="inherit" name="fill-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="fill-rule" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit" name="pointer-events" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="stroke" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="none inherit" name="stroke-dasharray" value-syntax="comma_or_space_separated_css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="stroke-dashoffset" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="butt round square inherit" name="stroke-linecap" value-syntax="enum"/>
        <parsedattribute enum-values="miter round bevel inherit" name="stroke-linejoin" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="stroke-miterlimit" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-width" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="ellipse" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <properties>
        <property content-attribute="cx" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="cx" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="cy" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="cy" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="rx" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="rx" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="ry" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="ry" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEBlendElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <constants>
        <constant name="SVG_FEBLEND_MODE_COLOR" tags="SVGFilters" type="unsigned short" value="15"/>
        <constant name="SVG_FEBLEND_MODE_COLOR_BURN" tags="SVGFilters" type="unsigned short" value="8"/>
        <constant name="SVG_FEBLEND_MODE_COLOR_DODGE" tags="SVGFilters" type="unsigned short" value="7"/>
        <constant name="SVG_FEBLEND_MODE_DARKEN" tags="SVGFilters" type="unsigned short" value="4"/>
        <constant name="SVG_FEBLEND_MODE_DIFFERENCE" tags="SVGFilters" type="unsigned short" value="11"/>
        <constant name="SVG_FEBLEND_MODE_EXCLUSION" tags="SVGFilters" type="unsigned short" value="12"/>
        <constant name="SVG_FEBLEND_MODE_HARD_LIGHT" tags="SVGFilters" type="unsigned short" value="9"/>
        <constant name="SVG_FEBLEND_MODE_HUE" tags="SVGFilters" type="unsigned short" value="13"/>
        <constant name="SVG_FEBLEND_MODE_LIGHTEN" tags="SVGFilters" type="unsigned short" value="5"/>
        <constant name="SVG_FEBLEND_MODE_LUMINOSITY" tags="SVGFilters" type="unsigned short" value="16"/>
        <constant name="SVG_FEBLEND_MODE_MULTIPLY" tags="SVGFilters" type="unsigned short" value="2"/>
        <constant name="SVG_FEBLEND_MODE_NORMAL" tags="SVGFilters" type="unsigned short" value="1"/>
        <constant name="SVG_FEBLEND_MODE_OVERLAY" tags="SVGFilters" type="unsigned short" value="6"/>
        <constant name="SVG_FEBLEND_MODE_SATURATION" tags="SVGFilters" type="unsigned short" value="14"/>
        <constant name="SVG_FEBLEND_MODE_SCREEN" tags="SVGFilters" type="unsigned short" value="3"/>
        <constant name="SVG_FEBLEND_MODE_SOFT_LIGHT" tags="SVGFilters" type="unsigned short" value="10"/>
        <constant name="SVG_FEBLEND_MODE_UNKNOWN" tags="SVGFilters" type="unsigned short" value="0"/>
      </constants>
      <element name="feBlend" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="in2" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in2" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="mode" content-attribute-enum-values="normal multiply screen darken lighten" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="mode" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEColorMatrixElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <constants>
        <constant name="SVG_FECOLORMATRIX_TYPE_HUEROTATE" tags="SVGFilters" type="unsigned short" value="3"/>
        <constant name="SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA" tags="SVGFilters" type="unsigned short" value="4"/>
        <constant name="SVG_FECOLORMATRIX_TYPE_MATRIX" tags="SVGFilters" type="unsigned short" value="1"/>
        <constant name="SVG_FECOLORMATRIX_TYPE_SATURATE" tags="SVGFilters" type="unsigned short" value="2"/>
        <constant name="SVG_FECOLORMATRIX_TYPE_UNKNOWN" tags="SVGFilters" type="unsigned short" value="0"/>
      </constants>
      <element name="feColorMatrix" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="type" content-attribute-enum-values="matrix saturate hueRotate luminanceToAlpha" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="type" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
        <property content-attribute="values" content-attribute-reflects="1" content-attribute-value-syntax="svg_5x5_matrix_values_or_single_floating_point_number" name="values" read-only="1" tags="SVGFilters" type="SVGAnimatedNumberList"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEComponentTransferElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="feComponentTransfer" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFECompositeElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <constants>
        <constant name="SVG_FECOMPOSITE_OPERATOR_ARITHMETIC" tags="SVGFilters" type="unsigned short" value="6"/>
        <constant name="SVG_FECOMPOSITE_OPERATOR_ATOP" tags="SVGFilters" type="unsigned short" value="4"/>
        <constant name="SVG_FECOMPOSITE_OPERATOR_IN" tags="SVGFilters" type="unsigned short" value="2"/>
        <constant name="SVG_FECOMPOSITE_OPERATOR_OUT" tags="SVGFilters" type="unsigned short" value="3"/>
        <constant name="SVG_FECOMPOSITE_OPERATOR_OVER" tags="SVGFilters" type="unsigned short" value="1"/>
        <constant name="SVG_FECOMPOSITE_OPERATOR_UNKNOWN" tags="SVGFilters" type="unsigned short" value="0"/>
        <constant name="SVG_FECOMPOSITE_OPERATOR_XOR" tags="SVGFilters" type="unsigned short" value="5"/>
      </constants>
      <element name="feComposite" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="in2" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in2" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="k1" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="k1" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="k2" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="k2" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="k3" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="k3" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="k4" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="k4" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="operator" content-attribute-enum-values="over in out atop xor arithmetic" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="operator" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEConvolveMatrixElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <constants>
        <constant name="SVG_EDGEMODE_DUPLICATE" tags="SVGFilters" type="unsigned short" value="1"/>
        <constant name="SVG_EDGEMODE_NONE" tags="SVGFilters" type="unsigned short" value="3"/>
        <constant name="SVG_EDGEMODE_UNKNOWN" tags="SVGFilters" type="unsigned short" value="0"/>
        <constant name="SVG_EDGEMODE_WRAP" tags="SVGFilters" type="unsigned short" value="2"/>
      </constants>
      <element name="feConvolveMatrix" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="bias" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="bias" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="divisor" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="divisor" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="edgeMode" content-attribute-enum-values="duplicate wrap none" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="edgeMode" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="kernelMatrix" content-attribute-reflects="1" content-attribute-value-syntax="comma_or_space_separated_floating_point_numbers" name="kernelMatrix" read-only="1" tags="SVGFilters" type="SVGAnimatedNumberList"/>
        <property content-attribute="kernelUnitLength" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="kernelUnitLengthX" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="kernelUnitLength" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="kernelUnitLengthY" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="order" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="orderX" read-only="1" tags="SVGFilters" type="SVGAnimatedInteger"/>
        <property content-attribute="order" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="orderY" read-only="1" tags="SVGFilters" type="SVGAnimatedInteger"/>
        <property content-attribute="preserveAlpha" content-attribute-enum-values="false true" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="preserveAlpha" read-only="1" tags="SVGFilters" type="SVGAnimatedBoolean"/>
        <property content-attribute="targetX" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" name="targetX" read-only="1" tags="SVGFilters" type="SVGAnimatedInteger"/>
        <property content-attribute="targetY" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" name="targetY" read-only="1" tags="SVGFilters" type="SVGAnimatedInteger"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEDiffuseLightingElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
        <parsedattribute enum-values="currentColor inherit" name="lighting-color" value-syntax="css_color"/>
      </anonymous-content-attributes>
      <element name="feDiffuseLighting" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="diffuseConstant" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="diffuseConstant" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="kernelUnitLength" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="kernelUnitLengthX" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="kernelUnitLength" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="kernelUnitLengthY" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="surfaceScale" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="surfaceScale" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEDisplacementMapElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <constants>
        <constant name="SVG_CHANNEL_A" tags="SVGFilters" type="unsigned short" value="4"/>
        <constant name="SVG_CHANNEL_B" tags="SVGFilters" type="unsigned short" value="3"/>
        <constant name="SVG_CHANNEL_G" tags="SVGFilters" type="unsigned short" value="2"/>
        <constant name="SVG_CHANNEL_R" tags="SVGFilters" type="unsigned short" value="1"/>
        <constant name="SVG_CHANNEL_UNKNOWN" tags="SVGFilters" type="unsigned short" value="0"/>
      </constants>
      <element name="feDisplacementMap" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="in2" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in2" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="scale" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="scale" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="xChannelSelector" content-attribute-enum-values="A R G B" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="xChannelSelector" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
        <property content-attribute="yChannelSelector" content-attribute-enum-values="A R G B" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="yChannelSelector" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEDistantLightElement" tags="SVGFilters">
      <element name="feDistantLight" namespace="SVG" specs="SVG1.1"/>
      <properties>
        <property content-attribute="azimuth" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="azimuth" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="elevation" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="elevation" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEFloodElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
        <parsedattribute enum-values="currentColor inherit" name="flood-color" value-syntax="css_color"/>
        <parsedattribute enum-values="inherit" name="flood-opacity" value-syntax="0_to_1_floating_point_number"/>
      </anonymous-content-attributes>
      <element name="feFlood" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
    </interface>
    <interface extends="SVGComponentTransferFunctionElement" name="SVGFEFuncAElement">
      <element name="feFuncA" namespace="SVG" specs="SVG1.1"/>
    </interface>
    <interface extends="SVGComponentTransferFunctionElement" name="SVGFEFuncBElement">
      <element name="feFuncB" namespace="SVG" specs="SVG1.1"/>
    </interface>
    <interface extends="SVGComponentTransferFunctionElement" name="SVGFEFuncGElement">
      <element name="feFuncG" namespace="SVG" specs="SVG1.1"/>
    </interface>
    <interface extends="SVGComponentTransferFunctionElement" name="SVGFEFuncRElement">
      <element name="feFuncR" namespace="SVG" specs="SVG1.1"/>
    </interface>
    <interface extends="SVGElement" name="SVGFEGaussianBlurElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="feGaussianBlur" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <methods>
        <method name="setStdDeviation" tags="SVGFilters" type="void">
          <param name="stdDeviationX" type="float"/>
          <param name="stdDeviationY" type="float"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="stdDeviation" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="stdDeviationX" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="stdDeviation" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="stdDeviationY" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEImageElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="feImage" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGURIReference</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <properties>
        <property name="preserveAspectRatio" read-only="1" tags="SVGFilters" type="SVGAnimatedPreserveAspectRatio"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEMergeElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="feMerge" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
    </interface>
    <interface extends="SVGElement" name="SVGFEMergeNodeElement" tags="SVGFilters">
      <element name="feMergeNode" namespace="SVG" specs="SVG1.1"/>
      <properties>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEMorphologyElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <constants>
        <constant name="SVG_MORPHOLOGY_OPERATOR_DILATE" tags="SVGFilters" type="unsigned short" value="2"/>
        <constant name="SVG_MORPHOLOGY_OPERATOR_ERODE" tags="SVGFilters" type="unsigned short" value="1"/>
        <constant name="SVG_MORPHOLOGY_OPERATOR_UNKNOWN" tags="SVGFilters" type="unsigned short" value="0"/>
      </constants>
      <element name="feMorphology" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="operator" content-attribute-enum-values="erode dilate" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="operator" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
        <property content-attribute="radius" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="radiusX" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="radius" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="radiusY" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEOffsetElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="feOffset" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="dx" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="dx" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="dy" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="dy" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFEPointLightElement" tags="SVGFilters">
      <element name="fePointLight" namespace="SVG" specs="SVG1.1"/>
      <properties>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="x" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="y" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="z" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="z" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFESpecularLightingElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
        <parsedattribute enum-values="currentColor inherit" name="lighting-color" value-syntax="css_color"/>
      </anonymous-content-attributes>
      <element name="feSpecularLighting" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="kernelUnitLength" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="kernelUnitLengthX" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="kernelUnitLength" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="kernelUnitLengthY" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="specularConstant" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="specularConstant" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="specularExponent" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="specularExponent" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="surfaceScale" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="surfaceScale" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFESpotLightElement" tags="SVGFilters">
      <element name="feSpotLight" namespace="SVG" specs="SVG1.1"/>
      <properties>
        <property content-attribute="limitingConeAngle" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="limitingConeAngle" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="pointsAtX" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="pointsAtX" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="pointsAtY" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="pointsAtY" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="pointsAtZ" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="pointsAtZ" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="specularExponent" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="specularExponent" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="x" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="y" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="z" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="z" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFETileElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="feTile" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="in" content-attribute-enum-values="SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint" content-attribute-reflects="1" content-attribute-value-syntax="filter_result_ref" name="in1" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFETurbulenceElement" tags="SVGFilters">
      <anonymous-content-attributes>
        <parsedattribute enum-values="linearRGB auto sRGB inherit" name="color-interpolation-filters" value-syntax="enum"/>
      </anonymous-content-attributes>
      <constants>
        <constant name="SVG_STITCHTYPE_NOSTITCH" tags="SVGFilters" type="unsigned short" value="2"/>
        <constant name="SVG_STITCHTYPE_STITCH" tags="SVGFilters" type="unsigned short" value="1"/>
        <constant name="SVG_STITCHTYPE_UNKNOWN" tags="SVGFilters" type="unsigned short" value="0"/>
        <constant name="SVG_TURBULENCE_TYPE_FRACTALNOISE" tags="SVGFilters" type="unsigned short" value="1"/>
        <constant name="SVG_TURBULENCE_TYPE_TURBULENCE" tags="SVGFilters" type="unsigned short" value="2"/>
        <constant name="SVG_TURBULENCE_TYPE_UNKNOWN" tags="SVGFilters" type="unsigned short" value="0"/>
      </constants>
      <element name="feTurbulence" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGFilterPrimitiveStandardAttributes</implements>
      <properties>
        <property content-attribute="baseFrequency" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="baseFrequencyX" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="baseFrequency" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="baseFrequencyY" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="numOctaves" content-attribute-reflects="1" content-attribute-value-syntax="signed_integer" name="numOctaves" read-only="1" tags="SVGFilters" type="SVGAnimatedInteger"/>
        <property content-attribute="seed" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="seed" read-only="1" tags="SVGFilters" type="SVGAnimatedNumber"/>
        <property content-attribute="stitchTiles" content-attribute-enum-values="noStitch stitch" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="stitchTiles" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
        <property content-attribute="type" content-attribute-enum-values="turbulence fractalNoise" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="type" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGFilterElement" tags="SVGFilters">
      <element name="filter" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGUnitTypes</implements>
      <implements>SVGStylable</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGURIReference</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <methods>
        <method name="setFilterRes" tags="SVGFilters" type="void">
          <param name="filterResX" type="unsigned long"/>
          <param name="filterResY" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="filterRes" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="filterResX" read-only="1" tags="SVGFilters" type="SVGAnimatedInteger"/>
        <property content-attribute="filterRes" content-attribute-reflects="1" content-attribute-value-syntax="svg_x_y_pair" name="filterResY" read-only="1" tags="SVGFilters" type="SVGAnimatedInteger"/>
        <property content-attribute="filterUnits" content-attribute-enum-values="objectBoundingBox userSpaceOnUse" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="filterUnits" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="height" read-only="1" tags="SVGFilters" type="SVGAnimatedLength"/>
        <property content-attribute="primitiveUnits" content-attribute-enum-values="userSpaceOnUse objectBoundingBox" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="primitiveUnits" read-only="1" tags="SVGFilters" type="SVGAnimatedEnumeration"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="width" read-only="1" tags="SVGFilters" type="SVGAnimatedLength"/>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x" read-only="1" tags="SVGFilters" type="SVGAnimatedLength"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y" read-only="1" tags="SVGFilters" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGForeignObjectElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="auto inherit" name="clip" value-syntax="css_shape_rect"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="visible hidden scroll auto inherit" name="overflow" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="foreignObject" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <properties>
        <property name="height" read-only="1" type="SVGAnimatedLength"/>
        <property name="width" read-only="1" type="SVGAnimatedLength"/>
        <property name="x" read-only="1" type="SVGAnimatedLength"/>
        <property name="y" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGGElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="accumulate inherit" name="enable-background" value-syntax="svg_enum_new_followed_by_svg_viewbox"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
      </anonymous-content-attributes>
      <element name="g" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
    </interface>
    <interface extends="SVGElement" name="SVGGradientElement">
      <constants>
        <constant name="SVG_SPREADMETHOD_PAD" type="unsigned short" value="1"/>
        <constant name="SVG_SPREADMETHOD_REFLECT" type="unsigned short" value="2"/>
        <constant name="SVG_SPREADMETHOD_REPEAT" type="unsigned short" value="3"/>
        <constant name="SVG_SPREADMETHOD_UNKNOWN" type="unsigned short" value="0"/>
      </constants>
      <implements>SVGStylable</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGURIReference</implements>
      <implements>SVGUnitTypes</implements>
      <properties>
        <property content-attribute="gradientTransform" content-attribute-reflects="1" content-attribute-value-syntax="svg_transform_list" name="gradientTransform" read-only="1" type="SVGAnimatedTransformList"/>
        <property content-attribute="gradientUnits" content-attribute-enum-values="objectBoundingBox userSpaceOnUse" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="gradientUnits" read-only="1" type="SVGAnimatedEnumeration"/>
        <property content-attribute="spreadMethod" content-attribute-enum-values="pad reflect repeat" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="spreadMethod" read-only="1" type="SVGAnimatedEnumeration"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGImageElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="auto inherit" name="clip" value-syntax="css_shape_rect"/>
        <parsedattribute enum-values="visible hidden scroll auto inherit" name="overflow" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
      </anonymous-content-attributes>
      <element name="image" namespace="SVG" specs="SVG1.1"/>
      <events>
        <event bubbles="1" dispatch="sync" name="SVGAbort" specs="SVG1.1" type="Event"/>
        <event bubbles="1" dispatch="sync" name="SVGError" specs="SVG1.1" type="Event"/>
        <event bubbles="1" dispatch="async" name="error" specs="none" tags="IEOnly" type="Event"/>
      </events>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGURIReference</implements>
      <properties>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="height" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="preserveAspectRatio" content-attribute-reflects="1" content-attribute-value-syntax="svg_aspect_ratio" name="preserveAspectRatio" read-only="1" type="SVGAnimatedPreserveAspectRatio"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="width" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGLength">
      <constants>
        <constant name="SVG_LENGTHTYPE_CM" type="unsigned short" value="6"/>
        <constant name="SVG_LENGTHTYPE_EMS" type="unsigned short" value="3"/>
        <constant name="SVG_LENGTHTYPE_EXS" type="unsigned short" value="4"/>
        <constant name="SVG_LENGTHTYPE_IN" type="unsigned short" value="8"/>
        <constant name="SVG_LENGTHTYPE_MM" type="unsigned short" value="7"/>
        <constant name="SVG_LENGTHTYPE_NUMBER" type="unsigned short" value="1"/>
        <constant name="SVG_LENGTHTYPE_PC" type="unsigned short" value="10"/>
        <constant name="SVG_LENGTHTYPE_PERCENTAGE" type="unsigned short" value="2"/>
        <constant name="SVG_LENGTHTYPE_PT" type="unsigned short" value="9"/>
        <constant name="SVG_LENGTHTYPE_PX" type="unsigned short" value="5"/>
        <constant name="SVG_LENGTHTYPE_UNKNOWN" type="unsigned short" value="0"/>
      </constants>
      <methods>
        <method name="convertToSpecifiedUnits" type="void">
          <param name="unitType" type="unsigned short"/>
        </method>
        <method name="newValueSpecifiedUnits" type="void">
          <param name="unitType" type="unsigned short"/>
          <param name="valueInSpecifiedUnits" type="float"/>
        </method>
      </methods>
      <properties>
        <property name="unitType" read-only="1" type="unsigned short"/>
        <property name="value" type="float"/>
        <property name="valueAsString" type="DOMString"/>
        <property name="valueInSpecifiedUnits" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGLengthList">
      <methods>
        <method name="appendItem" type="SVGLength">
          <param name="newItem" type="SVGLength"/>
        </method>
        <method name="clear" type="void"/>
        <method name="getItem" type="SVGLength">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="initialize" type="SVGLength">
          <param name="newItem" type="SVGLength"/>
        </method>
        <method name="insertItemBefore" type="SVGLength">
          <param name="newItem" type="SVGLength"/>
          <param name="index" type="unsigned long"/>
        </method>
        <method name="removeItem" type="SVGLength">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="replaceItem" type="SVGLength">
          <param name="newItem" type="SVGLength"/>
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="numberOfItems" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGLineElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="clip-rule" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="fill" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="inherit" name="fill-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="fill-rule" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-end" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-mid" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-start" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit" name="pointer-events" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="stroke" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="none inherit" name="stroke-dasharray" value-syntax="comma_or_space_separated_css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="stroke-dashoffset" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="butt round square inherit" name="stroke-linecap" value-syntax="enum"/>
        <parsedattribute enum-values="miter round bevel inherit" name="stroke-linejoin" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="stroke-miterlimit" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-width" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="line" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <properties>
        <property content-attribute="x1" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x1" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="x2" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x2" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="y1" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y1" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="y2" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y2" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGGradientElement" name="SVGLinearGradientElement">
      <element name="linearGradient" namespace="SVG" specs="SVG1.1"/>
      <properties>
        <property content-attribute="x1" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x1" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="x2" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x2" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="y1" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y1" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="y2" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y2" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGMarkerElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="auto inherit" name="clip" value-syntax="css_shape_rect"/>
        <parsedattribute enum-values="visible hidden scroll auto inherit" name="overflow" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="accumulate inherit" name="enable-background" value-syntax="svg_enum_new_followed_by_svg_viewbox"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
      </anonymous-content-attributes>
      <constants>
        <constant name="SVG_MARKERUNITS_STROKEWIDTH" type="unsigned short" value="2"/>
        <constant name="SVG_MARKERUNITS_UNKNOWN" type="unsigned short" value="0"/>
        <constant name="SVG_MARKERUNITS_USERSPACEONUSE" type="unsigned short" value="1"/>
        <constant name="SVG_MARKER_ORIENT_ANGLE" type="unsigned short" value="2"/>
        <constant name="SVG_MARKER_ORIENT_AUTO" type="unsigned short" value="1"/>
        <constant name="SVG_MARKER_ORIENT_UNKNOWN" type="unsigned short" value="0"/>
      </constants>
      <element name="marker" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGFitToViewBox</implements>
      <methods>
        <method name="setOrientToAngle" type="void">
          <param name="angle" type="SVGAngle"/>
        </method>
        <method name="setOrientToAuto" type="void"/>
      </methods>
      <properties>
        <property content-attribute="markerHeight" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="markerHeight" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="markerUnits" content-attribute-enum-values="strokeWidth userSpaceOnUse" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="markerUnits" read-only="1" type="SVGAnimatedEnumeration"/>
        <property content-attribute="markerWidth" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="markerWidth" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="orient" content-attribute-enum-values="auto" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="orientAngle" read-only="1" type="SVGAnimatedAngle"/>
        <property content-attribute="orient" content-attribute-enum-values="auto" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="orientType" read-only="1" type="SVGAnimatedEnumeration"/>
        <property content-attribute="refX" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="refX" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="refY" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="refY" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGMaskElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="accumulate inherit" name="enable-background" value-syntax="svg_enum_new_followed_by_svg_viewbox"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
      </anonymous-content-attributes>
      <element name="mask" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGUnitTypes</implements>
      <properties>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="height" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="maskContentUnits" content-attribute-enum-values="userSpaceOnUse objectBoundingBox" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="maskContentUnits" read-only="1" type="SVGAnimatedEnumeration"/>
        <property content-attribute="maskUnits" content-attribute-enum-values="objectBoundingBox userSpaceOnUse" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="maskUnits" read-only="1" type="SVGAnimatedEnumeration"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="width" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGMatrix">
      <methods>
        <method name="flipX" type="SVGMatrix"/>
        <method name="flipY" type="SVGMatrix"/>
        <method name="inverse" type="SVGMatrix"/>
        <method name="multiply" type="SVGMatrix">
          <param name="secondMatrix" type="SVGMatrix"/>
        </method>
        <method name="rotate" type="SVGMatrix">
          <param name="angle" type="float"/>
        </method>
        <method name="rotateFromVector" type="SVGMatrix">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="scale" type="SVGMatrix">
          <param name="scaleFactor" type="float"/>
        </method>
        <method name="scaleNonUniform" type="SVGMatrix">
          <param name="scaleFactorX" type="float"/>
          <param name="scaleFactorY" type="float"/>
        </method>
        <method name="skewX" type="SVGMatrix">
          <param name="angle" type="float"/>
        </method>
        <method name="skewY" type="SVGMatrix">
          <param name="angle" type="float"/>
        </method>
        <method name="translate" type="SVGMatrix">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
      </methods>
      <properties>
        <property name="a" type="float"/>
        <property name="b" type="float"/>
        <property name="c" type="float"/>
        <property name="d" type="float"/>
        <property name="e" type="float"/>
        <property name="f" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGMetadataElement">
      <element name="metadata" namespace="SVG" specs="SVG1.1"/>
    </interface>
    <interface extends="Object" name="SVGNumber">
      <properties>
        <property name="value" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGNumberList">
      <methods>
        <method name="appendItem" type="SVGNumber">
          <param name="newItem" type="SVGNumber"/>
        </method>
        <method name="clear" type="void"/>
        <method name="getItem" type="SVGNumber">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="initialize" type="SVGNumber">
          <param name="newItem" type="SVGNumber"/>
        </method>
        <method name="insertItemBefore" type="SVGNumber">
          <param name="newItem" type="SVGNumber"/>
          <param name="index" type="unsigned long"/>
        </method>
        <method name="removeItem" type="SVGNumber">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="replaceItem" type="SVGNumber">
          <param name="newItem" type="SVGNumber"/>
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="numberOfItems" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGPathElement">
      <anonymous-content-attributes>
        <parsedattribute name="d" value-syntax="svg_path_data"/>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="clip-rule" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="fill" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="inherit" name="fill-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="fill-rule" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-end" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-mid" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-start" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit" name="pointer-events" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="stroke" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="none inherit" name="stroke-dasharray" value-syntax="comma_or_space_separated_css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="stroke-dashoffset" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="butt round square inherit" name="stroke-linecap" value-syntax="enum"/>
        <parsedattribute enum-values="miter round bevel inherit" name="stroke-linejoin" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="stroke-miterlimit" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-width" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="path" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGAnimatedPathData</implements>
      <methods>
        <method name="createSVGPathSegArcAbs" type="SVGPathSegArcAbs">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="r1" type="float"/>
          <param name="r2" type="float"/>
          <param name="angle" type="float"/>
          <param name="largeArcFlag" type="boolean"/>
          <param name="sweepFlag" type="boolean"/>
        </method>
        <method name="createSVGPathSegArcRel" type="SVGPathSegArcRel">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="r1" type="float"/>
          <param name="r2" type="float"/>
          <param name="angle" type="float"/>
          <param name="largeArcFlag" type="boolean"/>
          <param name="sweepFlag" type="boolean"/>
        </method>
        <method name="createSVGPathSegClosePath" type="SVGPathSegClosePath"/>
        <method name="createSVGPathSegCurvetoCubicAbs" type="SVGPathSegCurvetoCubicAbs">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="x1" type="float"/>
          <param name="y1" type="float"/>
          <param name="x2" type="float"/>
          <param name="y2" type="float"/>
        </method>
        <method name="createSVGPathSegCurvetoCubicRel" type="SVGPathSegCurvetoCubicRel">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="x1" type="float"/>
          <param name="y1" type="float"/>
          <param name="x2" type="float"/>
          <param name="y2" type="float"/>
        </method>
        <method name="createSVGPathSegCurvetoCubicSmoothAbs" type="SVGPathSegCurvetoCubicSmoothAbs">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="x2" type="float"/>
          <param name="y2" type="float"/>
        </method>
        <method name="createSVGPathSegCurvetoCubicSmoothRel" type="SVGPathSegCurvetoCubicSmoothRel">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="x2" type="float"/>
          <param name="y2" type="float"/>
        </method>
        <method name="createSVGPathSegCurvetoQuadraticAbs" type="SVGPathSegCurvetoQuadraticAbs">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="x1" type="float"/>
          <param name="y1" type="float"/>
        </method>
        <method name="createSVGPathSegCurvetoQuadraticRel" type="SVGPathSegCurvetoQuadraticRel">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="x1" type="float"/>
          <param name="y1" type="float"/>
        </method>
        <method name="createSVGPathSegCurvetoQuadraticSmoothAbs" type="SVGPathSegCurvetoQuadraticSmoothAbs">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="createSVGPathSegCurvetoQuadraticSmoothRel" type="SVGPathSegCurvetoQuadraticSmoothRel">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="createSVGPathSegLinetoAbs" type="SVGPathSegLinetoAbs">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="createSVGPathSegLinetoHorizontalAbs" type="SVGPathSegLinetoHorizontalAbs">
          <param name="x" type="float"/>
        </method>
        <method name="createSVGPathSegLinetoHorizontalRel" type="SVGPathSegLinetoHorizontalRel">
          <param name="x" type="float"/>
        </method>
        <method name="createSVGPathSegLinetoRel" type="SVGPathSegLinetoRel">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="createSVGPathSegLinetoVerticalAbs" type="SVGPathSegLinetoVerticalAbs">
          <param name="y" type="float"/>
        </method>
        <method name="createSVGPathSegLinetoVerticalRel" type="SVGPathSegLinetoVerticalRel">
          <param name="y" type="float"/>
        </method>
        <method name="createSVGPathSegMovetoAbs" type="SVGPathSegMovetoAbs">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="createSVGPathSegMovetoRel" type="SVGPathSegMovetoRel">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
        </method>
        <method name="getPathSegAtLength" type="unsigned long">
          <param name="distance" type="float"/>
        </method>
        <method name="getPointAtLength" type="SVGPoint">
          <param name="distance" type="float"/>
        </method>
        <method name="getTotalLength" type="float"/>
      </methods>
    </interface>
    <interface extends="Object" name="SVGPathSeg">
      <constants>
        <constant name="PATHSEG_ARC_ABS" type="unsigned short" value="10"/>
        <constant name="PATHSEG_ARC_REL" type="unsigned short" value="11"/>
        <constant name="PATHSEG_CLOSEPATH" type="unsigned short" value="1"/>
        <constant name="PATHSEG_CURVETO_CUBIC_ABS" type="unsigned short" value="6"/>
        <constant name="PATHSEG_CURVETO_CUBIC_REL" type="unsigned short" value="7"/>
        <constant name="PATHSEG_CURVETO_CUBIC_SMOOTH_ABS" type="unsigned short" value="16"/>
        <constant name="PATHSEG_CURVETO_CUBIC_SMOOTH_REL" type="unsigned short" value="17"/>
        <constant name="PATHSEG_CURVETO_QUADRATIC_ABS" type="unsigned short" value="8"/>
        <constant name="PATHSEG_CURVETO_QUADRATIC_REL" type="unsigned short" value="9"/>
        <constant name="PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS" type="unsigned short" value="18"/>
        <constant name="PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL" type="unsigned short" value="19"/>
        <constant name="PATHSEG_LINETO_ABS" type="unsigned short" value="4"/>
        <constant name="PATHSEG_LINETO_HORIZONTAL_ABS" type="unsigned short" value="12"/>
        <constant name="PATHSEG_LINETO_HORIZONTAL_REL" type="unsigned short" value="13"/>
        <constant name="PATHSEG_LINETO_REL" type="unsigned short" value="5"/>
        <constant name="PATHSEG_LINETO_VERTICAL_ABS" type="unsigned short" value="14"/>
        <constant name="PATHSEG_LINETO_VERTICAL_REL" type="unsigned short" value="15"/>
        <constant name="PATHSEG_MOVETO_ABS" type="unsigned short" value="2"/>
        <constant name="PATHSEG_MOVETO_REL" type="unsigned short" value="3"/>
        <constant name="PATHSEG_UNKNOWN" type="unsigned short" value="0"/>
      </constants>
      <properties>
        <property name="pathSegType" read-only="1" type="unsigned short"/>
        <property name="pathSegTypeAsLetter" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegArcAbs">
      <properties>
        <property name="angle" type="float"/>
        <property name="largeArcFlag" type="boolean"/>
        <property name="r1" type="float"/>
        <property name="r2" type="float"/>
        <property name="sweepFlag" type="boolean"/>
        <property name="x" type="float"/>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegArcRel">
      <properties>
        <property name="angle" type="float"/>
        <property name="largeArcFlag" type="boolean"/>
        <property name="r1" type="float"/>
        <property name="r2" type="float"/>
        <property name="sweepFlag" type="boolean"/>
        <property name="x" type="float"/>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegClosePath"/>
    <interface extends="SVGPathSeg" name="SVGPathSegCurvetoCubicAbs">
      <properties>
        <property name="x" type="float"/>
        <property name="x1" type="float"/>
        <property name="x2" type="float"/>
        <property name="y" type="float"/>
        <property name="y1" type="float"/>
        <property name="y2" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegCurvetoCubicRel">
      <properties>
        <property name="x" type="float"/>
        <property name="x1" type="float"/>
        <property name="x2" type="float"/>
        <property name="y" type="float"/>
        <property name="y1" type="float"/>
        <property name="y2" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegCurvetoCubicSmoothAbs">
      <properties>
        <property name="x" type="float"/>
        <property name="x2" type="float"/>
        <property name="y" type="float"/>
        <property name="y2" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegCurvetoCubicSmoothRel">
      <properties>
        <property name="x" type="float"/>
        <property name="x2" type="float"/>
        <property name="y" type="float"/>
        <property name="y2" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegCurvetoQuadraticAbs">
      <properties>
        <property name="x" type="float"/>
        <property name="x1" type="float"/>
        <property name="y" type="float"/>
        <property name="y1" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegCurvetoQuadraticRel">
      <properties>
        <property name="x" type="float"/>
        <property name="x1" type="float"/>
        <property name="y" type="float"/>
        <property name="y1" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegCurvetoQuadraticSmoothAbs">
      <properties>
        <property name="x" type="float"/>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegCurvetoQuadraticSmoothRel">
      <properties>
        <property name="x" type="float"/>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegLinetoAbs">
      <properties>
        <property name="x" type="float"/>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegLinetoHorizontalAbs">
      <properties>
        <property name="x" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegLinetoHorizontalRel">
      <properties>
        <property name="x" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegLinetoRel">
      <properties>
        <property name="x" type="float"/>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegLinetoVerticalAbs">
      <properties>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegLinetoVerticalRel">
      <properties>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGPathSegList">
      <methods>
        <method name="appendItem" type="SVGPathSeg">
          <param name="newItem" type="SVGPathSeg"/>
        </method>
        <method name="clear" type="void"/>
        <method name="getItem" type="SVGPathSeg">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="initialize" type="SVGPathSeg">
          <param name="newItem" type="SVGPathSeg"/>
        </method>
        <method name="insertItemBefore" type="SVGPathSeg">
          <param name="newItem" type="SVGPathSeg"/>
          <param name="index" type="unsigned long"/>
        </method>
        <method name="removeItem" type="SVGPathSeg">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="replaceItem" type="SVGPathSeg">
          <param name="newItem" type="SVGPathSeg"/>
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="numberOfItems" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegMovetoAbs">
      <properties>
        <property name="x" type="float"/>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGPathSeg" name="SVGPathSegMovetoRel">
      <properties>
        <property name="x" type="float"/>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGPatternElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="auto inherit" name="clip" value-syntax="css_shape_rect"/>
        <parsedattribute enum-values="visible hidden scroll auto inherit" name="overflow" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="accumulate inherit" name="enable-background" value-syntax="svg_enum_new_followed_by_svg_viewbox"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
      </anonymous-content-attributes>
      <element name="pattern" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGFitToViewBox</implements>
      <implements>SVGURIReference</implements>
      <implements>SVGUnitTypes</implements>
      <properties>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="height" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="patternContentUnits" content-attribute-enum-values="userSpaceOnUse objectBoundingBox" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="patternContentUnits" read-only="1" type="SVGAnimatedEnumeration"/>
        <property content-attribute="patternTransform" content-attribute-reflects="1" content-attribute-value-syntax="svg_transform_list" name="patternTransform" read-only="1" type="SVGAnimatedTransformList"/>
        <property content-attribute="patternUnits" content-attribute-enum-values="objectBoundingBox userSpaceOnUse" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="patternUnits" read-only="1" type="SVGAnimatedEnumeration"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="width" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGPoint">
      <methods>
        <method name="matrixTransform" type="SVGPoint">
          <param name="matrix" type="SVGMatrix"/>
        </method>
      </methods>
      <properties>
        <property name="x" type="float"/>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGPointList">
      <methods>
        <method name="appendItem" type="SVGPoint">
          <param name="newItem" type="SVGPoint"/>
        </method>
        <method name="clear" type="void"/>
        <method name="getItem" type="SVGPoint">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="initialize" type="SVGPoint">
          <param name="newItem" type="SVGPoint"/>
        </method>
        <method name="insertItemBefore" type="SVGPoint">
          <param name="newItem" type="SVGPoint"/>
          <param name="index" type="unsigned long"/>
        </method>
        <method name="removeItem" type="SVGPoint">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="replaceItem" type="SVGPoint">
          <param name="newItem" type="SVGPoint"/>
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="numberOfItems" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGPolygonElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="clip-rule" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="fill" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="inherit" name="fill-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="fill-rule" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-end" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-mid" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-start" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit" name="pointer-events" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="stroke" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="none inherit" name="stroke-dasharray" value-syntax="comma_or_space_separated_css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="stroke-dashoffset" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="butt round square inherit" name="stroke-linecap" value-syntax="enum"/>
        <parsedattribute enum-values="miter round bevel inherit" name="stroke-linejoin" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="stroke-miterlimit" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-width" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="polygon" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGAnimatedPoints</implements>
    </interface>
    <interface extends="SVGElement" name="SVGPolylineElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="clip-rule" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="fill" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="inherit" name="fill-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="fill-rule" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-end" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-mid" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="marker-start" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit" name="pointer-events" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="stroke" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="none inherit" name="stroke-dasharray" value-syntax="comma_or_space_separated_css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="stroke-dashoffset" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="butt round square inherit" name="stroke-linecap" value-syntax="enum"/>
        <parsedattribute enum-values="miter round bevel inherit" name="stroke-linejoin" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="stroke-miterlimit" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-width" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="polyline" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGAnimatedPoints</implements>
    </interface>
    <interface extends="Object" name="SVGPreserveAspectRatio">
      <constants>
        <constant name="SVG_MEETORSLICE_MEET" type="unsigned short" value="1"/>
        <constant name="SVG_MEETORSLICE_SLICE" type="unsigned short" value="2"/>
        <constant name="SVG_MEETORSLICE_UNKNOWN" type="unsigned short" value="0"/>
        <constant name="SVG_PRESERVEASPECTRATIO_NONE" type="unsigned short" value="1"/>
        <constant name="SVG_PRESERVEASPECTRATIO_UNKNOWN" type="unsigned short" value="0"/>
        <constant name="SVG_PRESERVEASPECTRATIO_XMAXYMAX" type="unsigned short" value="10"/>
        <constant name="SVG_PRESERVEASPECTRATIO_XMAXYMID" type="unsigned short" value="7"/>
        <constant name="SVG_PRESERVEASPECTRATIO_XMAXYMIN" type="unsigned short" value="4"/>
        <constant name="SVG_PRESERVEASPECTRATIO_XMIDYMAX" type="unsigned short" value="9"/>
        <constant name="SVG_PRESERVEASPECTRATIO_XMIDYMID" type="unsigned short" value="6"/>
        <constant name="SVG_PRESERVEASPECTRATIO_XMIDYMIN" type="unsigned short" value="3"/>
        <constant name="SVG_PRESERVEASPECTRATIO_XMINYMAX" type="unsigned short" value="8"/>
        <constant name="SVG_PRESERVEASPECTRATIO_XMINYMID" type="unsigned short" value="5"/>
        <constant name="SVG_PRESERVEASPECTRATIO_XMINYMIN" type="unsigned short" value="2"/>
      </constants>
      <properties>
        <property name="align" type="unsigned short"/>
        <property name="meetOrSlice" type="unsigned short"/>
      </properties>
    </interface>
    <interface extends="SVGGradientElement" name="SVGRadialGradientElement">
      <element name="radialGradient" namespace="SVG" specs="SVG1.1"/>
      <properties>
        <property content-attribute="cx" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="cx" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="cy" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="cy" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="fx" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="fx" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="fy" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="fy" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="r" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="r" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGRect">
      <properties>
        <property name="height" type="float"/>
        <property name="width" type="float"/>
        <property name="x" type="float"/>
        <property name="y" type="float"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGRectElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="clip-rule" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="fill" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="inherit" name="fill-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="fill-rule" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit" name="pointer-events" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="stroke" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="none inherit" name="stroke-dasharray" value-syntax="comma_or_space_separated_css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="stroke-dashoffset" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="butt round square inherit" name="stroke-linecap" value-syntax="enum"/>
        <parsedattribute enum-values="miter round bevel inherit" name="stroke-linejoin" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="stroke-miterlimit" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-width" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="rect" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <properties>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="height" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="rx" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="rx" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="ry" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="ry" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="width" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGSVGElement">
      <anonymous-content-attributes>
        <parsedattribute name="version" value-syntax="floating_point_number"/>
        <parsedattribute name="baseProfile"/>
        <parsedattribute enum-values="auto inherit" name="clip" value-syntax="css_shape_rect"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="visible hidden scroll auto inherit" name="overflow" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="accumulate inherit" name="enable-background" value-syntax="svg_enum_new_followed_by_svg_viewbox"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
      </anonymous-content-attributes>
      <element name="svg" namespace="SVG" specs="SVG1.1"/>
      <events>
        <event bubbles="1" dispatch="sync-or-async" name="SVGScroll" specs="SVG1.1" type="Event"/>
        <event bubbles="1" dispatch="sync" name="SVGZoom" specs="SVG1.1" type="SVGZoomEvent"/>
      </events>
      <implements>DocumentEvent</implements>
      <implements>SVGLocatable</implements>
      <implements>SVGTests</implements>
      <implements>SVGStylable</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGFitToViewBox</implements>
      <implements>SVGZoomAndPan</implements>
      <methods>
        <method name="checkEnclosure" type="boolean">
          <param name="element" type="SVGElement"/>
          <param name="rect" type="SVGRect"/>
        </method>
        <method name="checkIntersection" type="boolean">
          <param name="element" type="SVGElement"/>
          <param name="rect" type="SVGRect"/>
        </method>
        <method name="createSVGAngle" type="SVGAngle"/>
        <method name="createSVGLength" type="SVGLength"/>
        <method name="createSVGMatrix" type="SVGMatrix"/>
        <method name="createSVGNumber" type="SVGNumber"/>
        <method name="createSVGPoint" type="SVGPoint"/>
        <method name="createSVGRect" type="SVGRect"/>
        <method name="createSVGTransform" type="SVGTransform"/>
        <method name="createSVGTransformFromMatrix" type="SVGTransform">
          <param name="matrix" type="SVGMatrix"/>
        </method>
        <method name="deselectAll" type="void"/>
        <method name="forceRedraw" type="void"/>
        <method name="getComputedStyle" tags="CSSOM" type="CSSStyleDeclaration">
          <param name="elt" type="Element"/>
          <param name="pseudoElt" nullable="1" optional="1" type="DOMString"/>
        </method>
        <method name="getCurrentTime" type="float"/>
        <method name="getElementById" type="Element">
          <param name="elementId" type="DOMString"/>
        </method>
        <method name="getEnclosureList" type="NodeList">
          <param name="rect" type="SVGRect"/>
          <param name="referenceElement" type="SVGElement"/>
        </method>
        <method name="getIntersectionList" type="NodeList">
          <param name="rect" type="SVGRect"/>
          <param name="referenceElement" type="SVGElement"/>
        </method>
        <method name="pauseAnimations" type="void"/>
        <method name="setCurrentTime" type="void">
          <param name="seconds" type="float"/>
        </method>
        <method name="suspendRedraw" type="unsigned long">
          <param name="maxWaitMilliseconds" type="unsigned long"/>
        </method>
        <method name="unpauseAnimations" type="void"/>
        <method name="unsuspendRedraw" type="void">
          <param name="suspendHandleID" type="unsigned long"/>
        </method>
        <method name="unsuspendRedrawAll" type="void"/>
      </methods>
      <properties>
        <property content-attribute="contentScriptType" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="contentScriptType" type="DOMString"/>
        <property content-attribute="contentStyleType" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="contentStyleType" type="DOMString"/>
        <property name="currentScale" type="float"/>
        <property name="currentTranslate" read-only="1" type="SVGPoint"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="height" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="onabort" content-attribute-value-syntax="javascript" event-handler="SVGAbort" name="onabort" type="EventHandler"/>
        <property content-attribute="onerror" content-attribute-value-syntax="javascript" event-handler="SVGError" name="onerror" type="EventHandler"/>
        <property content-attribute="onresize" content-attribute-value-syntax="javascript" event-handler="resize" name="onresize" type="EventHandler"/>
        <property content-attribute="onscroll" content-attribute-value-syntax="javascript" event-handler="scroll" name="onscroll" type="EventHandler"/>
        <property content-attribute="onunload" content-attribute-value-syntax="javascript" event-handler="SVGUnload" name="onunload" type="EventHandler"/>
        <property content-attribute="onzoom" content-attribute-value-syntax="javascript" event-handler="SVGZoom" name="onzoom" type="EventHandler"/>
        <property name="pixelUnitToMillimeterX" read-only="1" type="float"/>
        <property name="pixelUnitToMillimeterY" read-only="1" type="float"/>
        <property name="screenPixelToMillimeterX" read-only="1" type="float"/>
        <property name="screenPixelToMillimeterY" read-only="1" type="float"/>
        <property name="viewport" read-only="1" type="SVGRect"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="width" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGScriptElement">
      <element name="script" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGURIReference</implements>
      <properties>
        <property content-attribute="type" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="type" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGStopElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="currentColor inherit" name="stop-color" value-syntax="css_color"/>
        <parsedattribute enum-values="inherit" name="stop-opacity" value-syntax="0_to_1_floating_point_number"/>
      </anonymous-content-attributes>
      <element name="stop" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <properties>
        <property content-attribute="offset" content-attribute-reflects="1" content-attribute-value-syntax="floating_point_number" name="offset" read-only="1" type="SVGAnimatedNumber"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGStringList">
      <methods>
        <method name="appendItem" type="DOMString">
          <param name="newItem" type="DOMString"/>
        </method>
        <method name="clear" type="void"/>
        <method name="getItem" type="DOMString">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="initialize" type="DOMString">
          <param name="newItem" type="DOMString"/>
        </method>
        <method name="insertItemBefore" type="DOMString">
          <param name="newItem" type="DOMString"/>
          <param name="index" type="unsigned long"/>
        </method>
        <method name="removeItem" type="DOMString">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="replaceItem" type="DOMString">
          <param name="newItem" type="DOMString"/>
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="numberOfItems" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGStyleElement">
      <element name="style" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGLangSpace</implements>
      <properties>
        <property content-attribute="media" content-attribute-reflects="1" content-attribute-value-syntax="media_query" name="media" type="DOMString"/>
        <property content-attribute="title" content-attribute-reflects="1" name="title" type="DOMString"/>
        <property content-attribute="type" content-attribute-reflects="1" content-attribute-value-syntax="mime_type" name="type" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGSwitchElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="accumulate inherit" name="enable-background" value-syntax="svg_enum_new_followed_by_svg_viewbox"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
      </anonymous-content-attributes>
      <element name="switch" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
    </interface>
    <interface extends="SVGElement" name="SVGSymbolElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="auto inherit" name="clip" value-syntax="css_shape_rect"/>
        <parsedattribute enum-values="visible hidden scroll auto inherit" name="overflow" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="accumulate inherit" name="enable-background" value-syntax="svg_enum_new_followed_by_svg_viewbox"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
      </anonymous-content-attributes>
      <element name="symbol" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGFitToViewBox</implements>
    </interface>
    <interface extends="SVGTextPositioningElement" name="SVGTSpanElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="auto baseline before-edge text-before-edge middle central after-edge text-after-edge ideographic alphabetic hanging mathematical inherit" name="alignment-baseline" value-syntax="enum"/>
        <parsedattribute enum-values="baseline sub super inherit" name="baseline-shift" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="ltr rtl inherit" name="direction" value-syntax="enum"/>
        <parsedattribute enum-values="auto use-script no-change reset-size ideographic alphabetic hanging mathematical central middle text-after-edge text-before-edge inherit" name="dominant-baseline" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="fill" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="inherit" name="fill-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="fill-rule" value-syntax="enum"/>
        <parsedattribute enum-values="caption icon menu message-box small-caption status-bar inherit" name="font" value-syntax="css_font"/>
        <parsedattribute enum-values="inherit" name="font-family" value-syntax="comma_separated_css_font_family_followed_by_generic_family"/>
        <parsedattribute enum-values="smaller larger xx-small x-small small medium large x-large xx-large inherit" name="font-size" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="none inherit" name="font-size-adjust" value-syntax="floating_point_number"/>
        <parsedattribute enum-values="normal wider narrower ultra-condensed extra-condensed condensed semi-condensed semi-expanded expanded extra-expanded ultra-expanded inherit" name="font-stretch" value-syntax="enum"/>
        <parsedattribute enum-values="normal italic oblique inherit" name="font-style" value-syntax="enum"/>
        <parsedattribute enum-values="normal small-caps inherit" name="font-variant" value-syntax="enum"/>
        <parsedattribute enum-values="normal bold bolder lighter 100 200 300 400 500 600 700 800 900 inherit" name="font-weight" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="glyph-orientation-horizontal" value-syntax="css_angle"/>
        <parsedattribute enum-values="auto inherit" name="glyph-orientation-vertical" value-syntax="css_angle"/>
        <parsedattribute enum-values="auto inherit" name="kerning" value-syntax="css_length"/>
        <parsedattribute enum-values="normal inherit" name="letter-spacing" value-syntax="css_length"/>
        <parsedattribute enum-values="none currentColor inherit" name="stroke" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="none inherit" name="stroke-dasharray" value-syntax="comma_or_space_separated_css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="stroke-dashoffset" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="butt round square inherit" name="stroke-linecap" value-syntax="enum"/>
        <parsedattribute enum-values="miter round bevel inherit" name="stroke-linejoin" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="stroke-miterlimit" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-width" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="start middle end inherit" name="text-anchor" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="text-decoration" value-syntax="space_separated_css_enum_underline_overline_line-through_blink"/>
        <parsedattribute enum-values="normal embed bidi-override inherit" name="unicode-bidi" value-syntax="enum"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
        <parsedattribute enum-values="normal inherit" name="word-spacing" value-syntax="css_length"/>
      </anonymous-content-attributes>
      <element name="tspan" namespace="SVG" specs="SVG1.1"/>
    </interface>
    <interface extends="SVGElement" name="SVGTextContentElement">
      <constants>
        <constant name="LENGTHADJUST_SPACING" type="unsigned short" value="1"/>
        <constant name="LENGTHADJUST_SPACINGANDGLYPHS" type="unsigned short" value="2"/>
        <constant name="LENGTHADJUST_UNKNOWN" type="unsigned short" value="0"/>
      </constants>
      <implements>SVGStylable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <methods>
        <method name="getCharNumAtPosition" type="long">
          <param name="point" type="SVGPoint"/>
        </method>
        <method name="getComputedTextLength" type="float"/>
        <method name="getEndPositionOfChar" type="SVGPoint">
          <param name="charnum" type="unsigned long"/>
        </method>
        <method name="getExtentOfChar" type="SVGRect">
          <param name="charnum" type="unsigned long"/>
        </method>
        <method name="getNumberOfChars" type="long"/>
        <method name="getRotationOfChar" type="float">
          <param name="charnum" type="unsigned long"/>
        </method>
        <method name="getStartPositionOfChar" type="SVGPoint">
          <param name="charnum" type="unsigned long"/>
        </method>
        <method name="getSubStringLength" type="float">
          <param name="charnum" type="unsigned long"/>
          <param name="nchars" type="unsigned long"/>
        </method>
        <method name="selectSubString" type="void">
          <param name="charnum" type="unsigned long"/>
          <param name="nchars" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="lengthAdjust" content-attribute-enum-values="spacing spacingAndGlyphs" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="lengthAdjust" read-only="1" type="SVGAnimatedEnumeration"/>
        <property content-attribute="textLength" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="textLength" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGTextPositioningElement" name="SVGTextElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="clip-rule" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="ltr rtl inherit" name="direction" value-syntax="enum"/>
        <parsedattribute enum-values="auto use-script no-change reset-size ideographic alphabetic hanging mathematical central middle text-after-edge text-before-edge inherit" name="dominant-baseline" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="fill" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="inherit" name="fill-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="fill-rule" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="caption icon menu message-box small-caption status-bar inherit" name="font" value-syntax="css_font"/>
        <parsedattribute enum-values="inherit" name="font-family" value-syntax="comma_separated_css_font_family_followed_by_generic_family"/>
        <parsedattribute enum-values="smaller larger xx-small x-small small medium large x-large xx-large inherit" name="font-size" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="none inherit" name="font-size-adjust" value-syntax="floating_point_number"/>
        <parsedattribute enum-values="normal wider narrower ultra-condensed extra-condensed condensed semi-condensed semi-expanded expanded extra-expanded ultra-expanded inherit" name="font-stretch" value-syntax="enum"/>
        <parsedattribute enum-values="normal italic oblique inherit" name="font-style" value-syntax="enum"/>
        <parsedattribute enum-values="normal small-caps inherit" name="font-variant" value-syntax="enum"/>
        <parsedattribute enum-values="normal bold bolder lighter 100 200 300 400 500 600 700 800 900 inherit" name="font-weight" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="glyph-orientation-horizontal" value-syntax="css_angle"/>
        <parsedattribute enum-values="auto inherit" name="glyph-orientation-vertical" value-syntax="css_angle"/>
        <parsedattribute enum-values="auto inherit" name="kerning" value-syntax="css_length"/>
        <parsedattribute enum-values="normal inherit" name="letter-spacing" value-syntax="css_length"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit" name="pointer-events" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="stroke" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="none inherit" name="stroke-dasharray" value-syntax="comma_or_space_separated_css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="stroke-dashoffset" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="butt round square inherit" name="stroke-linecap" value-syntax="enum"/>
        <parsedattribute enum-values="miter round bevel inherit" name="stroke-linejoin" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="stroke-miterlimit" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-width" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="start middle end inherit" name="text-anchor" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="text-decoration" value-syntax="space_separated_css_enum_underline_overline_line-through_blink"/>
        <parsedattribute enum-values="normal embed bidi-override inherit" name="unicode-bidi" value-syntax="enum"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
        <parsedattribute enum-values="normal inherit" name="word-spacing" value-syntax="css_length"/>
        <parsedattribute enum-values="lr-tb tb-rl rl-tb bt-rl tb-lr bt-lr lr-bt rl-bt lr rl tb horizontal-tb vertical-lr vertical-rl inherit" name="writing-mode" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="text" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGTransformable</implements>
    </interface>
    <interface extends="SVGTextContentElement" name="SVGTextPathElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="auto baseline before-edge text-before-edge middle central after-edge text-after-edge ideographic alphabetic hanging mathematical inherit" name="alignment-baseline" value-syntax="enum"/>
        <parsedattribute enum-values="baseline sub super inherit" name="baseline-shift" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="color" value-syntax="css_color"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="ltr rtl inherit" name="direction" value-syntax="enum"/>
        <parsedattribute enum-values="auto use-script no-change reset-size ideographic alphabetic hanging mathematical central middle text-after-edge text-before-edge inherit" name="dominant-baseline" value-syntax="enum"/>
        <parsedattribute enum-values="none currentColor inherit" name="fill" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="inherit" name="fill-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="fill-rule" value-syntax="enum"/>
        <parsedattribute enum-values="caption icon menu message-box small-caption status-bar inherit" name="font" value-syntax="css_font"/>
        <parsedattribute enum-values="inherit" name="font-family" value-syntax="comma_separated_css_font_family_followed_by_generic_family"/>
        <parsedattribute enum-values="smaller larger xx-small x-small small medium large x-large xx-large inherit" name="font-size" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="none inherit" name="font-size-adjust" value-syntax="floating_point_number"/>
        <parsedattribute enum-values="normal wider narrower ultra-condensed extra-condensed condensed semi-condensed semi-expanded expanded extra-expanded ultra-expanded inherit" name="font-stretch" value-syntax="enum"/>
        <parsedattribute enum-values="normal italic oblique inherit" name="font-style" value-syntax="enum"/>
        <parsedattribute enum-values="normal small-caps inherit" name="font-variant" value-syntax="enum"/>
        <parsedattribute enum-values="normal bold bolder lighter 100 200 300 400 500 600 700 800 900 inherit" name="font-weight" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="glyph-orientation-horizontal" value-syntax="css_angle"/>
        <parsedattribute enum-values="auto inherit" name="glyph-orientation-vertical" value-syntax="css_angle"/>
        <parsedattribute enum-values="auto inherit" name="kerning" value-syntax="css_length"/>
        <parsedattribute enum-values="normal inherit" name="letter-spacing" value-syntax="css_length"/>
        <parsedattribute enum-values="none currentColor inherit" name="stroke" value-syntax="svg_paint_or_css_color"/>
        <parsedattribute enum-values="none inherit" name="stroke-dasharray" value-syntax="comma_or_space_separated_css_percentage_or_length"/>
        <parsedattribute enum-values="inherit" name="stroke-dashoffset" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="butt round square inherit" name="stroke-linecap" value-syntax="enum"/>
        <parsedattribute enum-values="miter round bevel inherit" name="stroke-linejoin" value-syntax="enum"/>
        <parsedattribute enum-values="inherit" name="stroke-miterlimit" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="inherit" name="stroke-width" value-syntax="css_percentage_or_length"/>
        <parsedattribute enum-values="start middle end inherit" name="text-anchor" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="text-decoration" value-syntax="space_separated_css_enum_underline_overline_line-through_blink"/>
        <parsedattribute enum-values="normal embed bidi-override inherit" name="unicode-bidi" value-syntax="enum"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
        <parsedattribute enum-values="normal inherit" name="word-spacing" value-syntax="css_length"/>
      </anonymous-content-attributes>
      <constants>
        <constant name="TEXTPATH_METHODTYPE_ALIGN" type="unsigned short" value="1"/>
        <constant name="TEXTPATH_METHODTYPE_STRETCH" type="unsigned short" value="2"/>
        <constant name="TEXTPATH_METHODTYPE_UNKNOWN" type="unsigned short" value="0"/>
        <constant name="TEXTPATH_SPACINGTYPE_AUTO" type="unsigned short" value="1"/>
        <constant name="TEXTPATH_SPACINGTYPE_EXACT" type="unsigned short" value="2"/>
        <constant name="TEXTPATH_SPACINGTYPE_UNKNOWN" type="unsigned short" value="0"/>
      </constants>
      <element name="textPath" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGURIReference</implements>
      <properties>
        <property content-attribute="method" content-attribute-enum-values="align stretch" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="method" read-only="1" type="SVGAnimatedEnumeration"/>
        <property content-attribute="spacing" content-attribute-enum-values="auto exact" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="spacing" read-only="1" type="SVGAnimatedEnumeration"/>
        <property content-attribute="startOffset" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="startOffset" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGTextContentElement" name="SVGTextPositioningElement">
      <properties>
        <property content-attribute="dx" content-attribute-reflects="1" content-attribute-value-syntax="comma_or_space_separated_svg_number_with_optional_units" name="dx" read-only="1" type="SVGAnimatedLengthList"/>
        <property content-attribute="dy" content-attribute-reflects="1" content-attribute-value-syntax="comma_or_space_separated_svg_number_with_optional_units" name="dy" read-only="1" type="SVGAnimatedLengthList"/>
        <property content-attribute="rotate" content-attribute-reflects="1" content-attribute-value-syntax="comma_or_space_separated_floating_point_numbers" name="rotate" read-only="1" type="SVGAnimatedNumberList"/>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="comma_or_space_separated_svg_number_with_optional_units" name="x" read-only="1" type="SVGAnimatedLengthList"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="comma_or_space_separated_svg_number_with_optional_units" name="y" read-only="1" type="SVGAnimatedLengthList"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGTitleElement">
      <element name="title" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGLangSpace</implements>
    </interface>
    <interface extends="Object" name="SVGTransform">
      <constants>
        <constant name="SVG_TRANSFORM_MATRIX" type="unsigned short" value="1"/>
        <constant name="SVG_TRANSFORM_ROTATE" type="unsigned short" value="4"/>
        <constant name="SVG_TRANSFORM_SCALE" type="unsigned short" value="3"/>
        <constant name="SVG_TRANSFORM_SKEWX" type="unsigned short" value="5"/>
        <constant name="SVG_TRANSFORM_SKEWY" type="unsigned short" value="6"/>
        <constant name="SVG_TRANSFORM_TRANSLATE" type="unsigned short" value="2"/>
        <constant name="SVG_TRANSFORM_UNKNOWN" type="unsigned short" value="0"/>
      </constants>
      <methods>
        <method name="setMatrix" type="void">
          <param name="matrix" type="SVGMatrix"/>
        </method>
        <method name="setRotate" type="void">
          <param name="angle" type="float"/>
          <param name="cx" type="float"/>
          <param name="cy" type="float"/>
        </method>
        <method name="setScale" type="void">
          <param name="sx" type="float"/>
          <param name="sy" type="float"/>
        </method>
        <method name="setSkewX" type="void">
          <param name="angle" type="float"/>
        </method>
        <method name="setSkewY" type="void">
          <param name="angle" type="float"/>
        </method>
        <method name="setTranslate" type="void">
          <param name="tx" type="float"/>
          <param name="ty" type="float"/>
        </method>
      </methods>
      <properties>
        <property name="angle" read-only="1" type="float"/>
        <property name="matrix" read-only="1" type="SVGMatrix"/>
        <property name="type" read-only="1" type="unsigned short"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGTransformList">
      <methods>
        <method name="appendItem" type="SVGTransform">
          <param name="newItem" type="SVGTransform"/>
        </method>
        <method name="clear" type="void"/>
        <method name="consolidate" type="SVGTransform"/>
        <method name="createSVGTransformFromMatrix" type="SVGTransform">
          <param name="matrix" type="SVGMatrix"/>
        </method>
        <method name="getItem" type="SVGTransform">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="initialize" type="SVGTransform">
          <param name="newItem" type="SVGTransform"/>
        </method>
        <method name="insertItemBefore" type="SVGTransform">
          <param name="newItem" type="SVGTransform"/>
          <param name="index" type="unsigned long"/>
        </method>
        <method name="removeItem" type="SVGTransform">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="replaceItem" type="SVGTransform">
          <param name="newItem" type="SVGTransform"/>
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="numberOfItems" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGUnitTypes" static="1">
      <constants>
        <constant name="SVG_UNIT_TYPE_OBJECTBOUNDINGBOX" type="unsigned short" value="2"/>
        <constant name="SVG_UNIT_TYPE_UNKNOWN" type="unsigned short" value="0"/>
        <constant name="SVG_UNIT_TYPE_USERSPACEONUSE" type="unsigned short" value="1"/>
      </constants>
    </interface>
    <interface extends="SVGElement" name="SVGUseElement">
      <anonymous-content-attributes>
        <parsedattribute enum-values="none inherit" name="clip-path" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="nonzero evenodd inherit" name="clip-rule" value-syntax="enum"/>
        <parsedattribute enum-values="auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit" name="cursor" value-syntax="comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"/>
        <parsedattribute enum-values="inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit" name="display" value-syntax="enum"/>
        <parsedattribute enum-values="none inherit" name="filter" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="none inherit" name="mask" value-syntax="css_url_of_local_id_ref"/>
        <parsedattribute enum-values="inherit" name="opacity" value-syntax="0_to_1_floating_point_number"/>
        <parsedattribute enum-values="auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit" name="pointer-events" value-syntax="enum"/>
        <parsedattribute enum-values="visible hidden collapse inherit" name="visibility" value-syntax="enum"/>
      </anonymous-content-attributes>
      <element name="use" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGStylable</implements>
      <implements>SVGTransformable</implements>
      <implements>SVGTests</implements>
      <implements>SVGLangSpace</implements>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGURIReference</implements>
      <properties>
        <property name="animatedInstanceRoot" read-only="1" type="SVGElementInstance"/>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="height" read-only="1" type="SVGAnimatedLength"/>
        <property name="instanceRoot" read-only="1" type="SVGElementInstance"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="width" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x" read-only="1" type="SVGAnimatedLength"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y" read-only="1" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="SVGElement" name="SVGViewElement">
      <element name="view" namespace="SVG" specs="SVG1.1"/>
      <implements>SVGExternalResourcesRequired</implements>
      <implements>SVGFitToViewBox</implements>
      <implements>SVGZoomAndPan</implements>
      <properties>
        <property content-attribute="viewTarget" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_urls" name="viewTarget" read-only="1" type="SVGStringList"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGZoomAndPan" static="1">
      <constants>
        <constant name="SVG_ZOOMANDPAN_DISABLE" type="unsigned short" value="1"/>
        <constant name="SVG_ZOOMANDPAN_MAGNIFY" type="unsigned short" value="2"/>
        <constant name="SVG_ZOOMANDPAN_UNKNOWN" type="unsigned short" value="0"/>
      </constants>
      <properties>
        <property content-attribute="zoomAndPan" content-attribute-enum-values="disable magnify" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="zoomAndPan" read-only="1" type="unsigned short"/>
      </properties>
    </interface>
    <interface extends="UIEvent" name="SVGZoomEvent">
      <properties>
        <property name="newScale" read-only="1" tags="Events" type="float"/>
        <property name="newTranslate" read-only="1" tags="Events" type="SVGPoint"/>
        <property name="previousScale" read-only="1" tags="Events" type="float"/>
        <property name="previousTranslate" read-only="1" tags="Events" type="SVGPoint"/>
        <property name="zoomRectScreen" read-only="1" tags="Events" type="SVGRect"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="Screen">
      <events>
        <event dispatch="async" name="MSOrientationChange" skips-window="1" specs="none" tags="IEOnly" type="Event"/>
      </events>
      <methods>
        <method name="msLockOrientation" type="boolean">
          <param name="orientations" type="(DOMString or sequence&lt;DOMString&gt;)"/>
        </method>
        <method name="msUnlockOrientation" type="void"/>
      </methods>
      <properties>
        <property name="availHeight" read-only="1" tags="CSSOM" type="unsigned long"/>
        <property name="availWidth" read-only="1" tags="CSSOM" type="unsigned long"/>
        <property deprecated="1" name="bufferDepth" tags="CSSOM" type="long"/>
        <property name="colorDepth" read-only="1" tags="CSSOM" type="unsigned long"/>
        <property name="deviceXDPI" read-only="1" tags="CSSOM" type="long"/>
        <property name="deviceYDPI" read-only="1" tags="CSSOM" type="long"/>
        <property name="fontSmoothingEnabled" read-only="1" tags="CSSOM" type="boolean"/>
        <property name="height" read-only="1" tags="CSSOM" type="unsigned long"/>
        <property name="logicalXDPI" read-only="1" tags="CSSOM" type="long"/>
        <property name="logicalYDPI" read-only="1" tags="CSSOM" type="long"/>
        <property name="msOrientation" read-only="1" type="DOMString"/>
        <property event-handler="MSOrientationChange" name="onmsorientationchange" type="EventHandler"/>
        <property name="pixelDepth" read-only="1" tags="CSSOM" type="unsigned long"/>
        <property name="systemXDPI" read-only="1" tags="CSSOM" type="long"/>
        <property name="systemYDPI" read-only="1" tags="CSSOM" type="long"/>
        <property name="width" read-only="1" tags="CSSOM" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Event" name="ScriptNotifyEvent" tags="MSAppOnly">
      <properties>
        <property name="callingUri" read-only="1" tags="MSAppOnly" type="DOMString"/>
        <property name="value" read-only="1" tags="MSAppOnly" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="ScriptProcessorNode">
      <events>
        <event dispatch="sync" name="audioprocess" skips-window="1" specs="Audio" type="AudioProcessingEvent"/>
      </events>
      <properties>
        <property name="bufferSize" read-only="1" type="long"/>
        <property event-handler="audioprocess" name="onaudioprocess" type="EventHandler"/>
      </properties>
    </interface>
    <interface extends="Object" name="Selection" tags="Editing">
      <methods>
        <method name="addRange" type="void">
          <param name="range" type="Range"/>
        </method>
        <method name="collapse" type="void">
          <param name="parentNode" type="Node"/>
          <param name="offset" type="long"/>
        </method>
        <method name="collapseToEnd" type="void"/>
        <method name="collapseToStart" type="void"/>
        <method name="containsNode" type="boolean">
          <param name="node" type="Node"/>
          <param name="partlyContained" type="boolean"/>
        </method>
        <method name="deleteFromDocument" type="void"/>
        <method name="empty" type="void"/>
        <method name="extend" type="void">
          <param name="newNode" type="Node"/>
          <param name="offset" type="long"/>
        </method>
        <method name="getRangeAt" type="Range">
          <param name="index" type="long"/>
        </method>
        <method name="removeAllRanges" type="void"/>
        <method name="removeRange" type="void">
          <param name="range" type="Range"/>
        </method>
        <method name="selectAllChildren" type="void">
          <param name="parentNode" type="Node"/>
        </method>
        <method name="setBaseAndExtent" type="void">
          <param name="baseNode" type="Node"/>
          <param name="baseOffset" type="long"/>
          <param name="extentNode" type="Node"/>
          <param name="extentOffset" type="long"/>
        </method>
        <method name="toString" stringifier="1" type="DOMString"/>
      </methods>
      <properties>
        <property name="anchorNode" read-only="1" type="Node"/>
        <property name="anchorOffset" read-only="1" type="long"/>
        <property name="focusNode" read-only="1" type="Node"/>
        <property name="focusOffset" read-only="1" type="long"/>
        <property name="isCollapsed" read-only="1" type="boolean"/>
        <property name="rangeCount" read-only="1" type="long"/>
        <property name="type" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="SourceBuffer" specs="MSE">
      <events>
        <event dispatch="sync" name="error" skips-window="1" specs="MSE" type="Event"/>
        <event dispatch="sync" name="abort" skips-window="1" specs="MSE" type="Event"/>
        <event dispatch="sync" name="updatestart" skips-window="1" specs="MSE" type="Event"/>
        <event dispatch="sync" name="update" skips-window="1" specs="MSE" type="Event"/>
        <event dispatch="sync" name="updateend" skips-window="1" specs="MSE" type="Event"/>
      </events>
      <methods>
        <method name="abort" specs="MSE" type="void"/>
        <method name="appendBuffer" specs="MSE" type="void">
          <param name="data" type="(ArrayBuffer or ArrayBufferView)"/>
        </method>
        <method name="appendStream" specs="MSE" type="void">
          <param name="stream" type="MSStream"/>
          <param name="maxSize" optional="1" type="unsigned long long"/>
        </method>
        <method name="remove" specs="MSE" type="void">
          <param name="start" type="double"/>
          <param name="end" type="double"/>
        </method>
      </methods>
      <properties>
        <property name="appendWindowEnd" specs="MSE" type="double"/>
        <property name="appendWindowStart" specs="MSE" type="double"/>
        <property name="audioTracks" read-only="1" specs="MSE" type="AudioTrackList"/>
        <property name="buffered" read-only="1" specs="MSE" type="TimeRanges"/>
        <property name="mode" specs="MSE" type="AppendMode"/>
        <property name="timestampOffset" specs="MSE" type="double"/>
        <property name="updating" read-only="1" specs="MSE" type="boolean"/>
        <property name="videoTracks" read-only="1" specs="MSE" type="VideoTrackList"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="SourceBufferList" specs="MSE">
      <events>
        <event dispatch="sync" name="addsourcebuffer" skips-window="1" specs="MSE" type="Event"/>
        <event dispatch="sync" name="removesourcebuffer" skips-window="1" specs="MSE" type="Event"/>
      </events>
      <methods>
        <method getter="1" name="item" specs="MSE" type="SourceBuffer">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" specs="MSE" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="AudioNode" name="StereoPannerNode">
      <properties>
        <property name="pan" read-only="1" type="AudioParam"/>
      </properties>
    </interface>
    <interface extends="Object" name="Storage" override-builtins="1">
      <methods>
        <method name="clear" property-descriptor-not-enumerable="1" tags="Offline" type="void"/>
        <method getter="1" name="getItem" property-descriptor-not-enumerable="1" tags="Offline" type="any">
          <param name="key" type="DOMString"/>
        </method>
        <method getter="1" name="key" property-descriptor-not-enumerable="1" tags="Offline" type="DOMString">
          <param name="index" type="unsigned long"/>
        </method>
        <method deleter="1" name="removeItem" property-descriptor-not-enumerable="1" tags="Offline" type="void">
          <param name="key" type="DOMString"/>
        </method>
        <method creator="1" name="setItem" property-descriptor-not-enumerable="1" setter="1" tags="Offline" type="void">
          <param name="key" type="DOMString"/>
          <param name="data" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="length" property-descriptor-not-enumerable="1" read-only="1" tags="Offline" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Event" name="StorageEvent">
      <methods>
        <method name="initStorageEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="keyArg" type="DOMString"/>
          <param name="oldValueArg" type="any"/>
          <param name="newValueArg" type="any"/>
          <param name="urlArg" type="DOMString"/>
          <param name="storageAreaArg" type="Storage"/>
        </method>
      </methods>
      <properties>
        <property name="key" read-only="1" tags="Events" type="DOMString"/>
        <property name="newValue" read-only="1" tags="Events" type="any"/>
        <property name="oldValue" read-only="1" tags="Events" type="any"/>
        <property name="storageArea" read-only="1" tags="Events" type="Storage"/>
        <property name="url" read-only="1" tags="Events" type="DOMString"/>
      </properties>
    </interface>
    <interface deprecated="1" extends="Object" name="StyleMedia">
      <methods>
        <method name="matchMedium" tags="CSSOM" type="boolean">
          <param name="mediaquery" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="type" read-only="1" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="StyleSheet">
      <properties>
        <property name="disabled" tags="CSSOM" type="boolean"/>
        <property name="href" read-only="1" tags="CSSOM" type="DOMString"/>
        <property name="media" put-forwards="mediaText" read-only="1" tags="CSSOM" type="MediaList"/>
        <property name="ownerNode" read-only="1" tags="TreeNavigation" type="Node"/>
        <property name="parentStyleSheet" read-only="1" tags="CSSOM" type="StyleSheet"/>
        <property name="title" read-only="1" tags="CSSOM" type="DOMString"/>
        <property name="type" read-only="1" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="StyleSheetList">
      <methods>
        <method getter="1" name="item" tags="CSSOM" type="StyleSheet">
          <param default="0" name="index" optional="1" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="CSSOM" type="long"/>
      </properties>
    </interface>
    <interface extends="Object" name="StyleSheetPageList">
      <methods>
        <method getter="1" name="item" tags="TreeNavigation" type="CSSPageRule">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="TreeNavigation" type="long"/>
      </properties>
    </interface>
    <interface extends="Object" name="SubtleCrypto">
      <methods>
        <method name="decrypt" type="Promise&lt;any&gt;">
          <param name="algorithm" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="key" type="Key"/>
          <param name="data" type="ArrayBufferView" type-original="CryptoOperationData"/>
        </method>
        <method name="deriveBits" type="Promise&lt;any&gt;">
          <param name="algorithm" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="baseKey" type="Key"/>
          <param name="length" type="unsigned long"/>
        </method>
        <method name="deriveKey" type="Promise&lt;any&gt;">
          <param name="algorithm" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="baseKey" type="Key"/>
          <param name="derivedKeyType" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="extractable" type="boolean"/>
          <param name="keyUsages" type="sequence&lt;DOMString&gt;"/>
        </method>
        <method name="digest" type="Promise&lt;any&gt;">
          <param name="algorithm" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="data" type="ArrayBufferView" type-original="CryptoOperationData"/>
        </method>
        <method name="encrypt" type="Promise&lt;any&gt;">
          <param name="algorithm" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="key" type="Key"/>
          <param name="data" type="ArrayBufferView" type-original="CryptoOperationData"/>
        </method>
        <method name="exportKey" type="Promise&lt;any&gt;">
          <param name="format" type="DOMString" type-original="KeyFormat"/>
          <param name="key" type="Key"/>
        </method>
        <method name="generateKey" type="Promise&lt;any&gt;">
          <param name="algorithm" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="extractable" type="boolean"/>
          <param name="keyUsages" type="sequence&lt;DOMString&gt;"/>
        </method>
        <method name="importKey" type="Promise&lt;any&gt;">
          <param name="format" type="DOMString" type-original="KeyFormat"/>
          <param name="keyData" type="ArrayBufferView" type-original="CryptoOperationData"/>
          <param name="algorithm" nullable="1" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="extractable" type="boolean"/>
          <param name="keyUsages" type="sequence&lt;DOMString&gt;"/>
        </method>
        <method name="sign" type="Promise&lt;any&gt;">
          <param name="algorithm" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="key" type="Key"/>
          <param name="data" type="ArrayBufferView" type-original="CryptoOperationData"/>
        </method>
        <method name="unwrapKey" type="Promise&lt;any&gt;">
          <param name="format" type="DOMString" type-original="KeyFormat"/>
          <param name="wrappedKey" type="ArrayBufferView" type-original="CryptoOperationData"/>
          <param name="unwrappingKey" type="Key"/>
          <param name="unwrapAlgorithm" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="unwrappedKeyAlgorithm" nullable="1" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="extractable" type="boolean"/>
          <param name="keyUsages" type="sequence&lt;DOMString&gt;"/>
        </method>
        <method name="verify" type="Promise&lt;any&gt;">
          <param name="algorithm" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
          <param name="key" type="Key"/>
          <param name="signature" type="ArrayBufferView" type-original="CryptoOperationData"/>
          <param name="data" type="ArrayBufferView" type-original="CryptoOperationData"/>
        </method>
        <method name="wrapKey" type="Promise&lt;any&gt;">
          <param name="format" type="DOMString" type-original="KeyFormat"/>
          <param name="key" type="Key"/>
          <param name="wrappingKey" type="Key"/>
          <param name="wrapAlgorithm" type="(DOMString or Algorithm)" type-original="AlgorithmIdentifier"/>
        </method>
      </methods>
    </interface>
    <interface extends="CharacterData" name="Text">
      <events>
        <event bubbles="1" dispatch="sync" name="DOMNodeInserted" specs="DOM3E" type="MutationEvent"/>
        <event bubbles="1" dispatch="sync" name="DOMNodeRemoved" specs="DOM3E" type="MutationEvent"/>
      </events>
      <methods>
        <method name="replaceWholeText" tags="TreeMutation" type="Text">
          <param name="content" type="DOMString"/>
        </method>
        <method name="splitText" tags="TreeMutation" type="Text">
          <param name="offset" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="wholeText" read-only="1" tags="TreeIdentity" type="DOMString"/>
      </properties>
    </interface>
    <interface deprecated="1" extends="UIEvent" name="TextEvent">
      <constants>
        <constant name="DOM_INPUT_METHOD_DROP" type="unsigned long" value="0x03"/>
        <constant name="DOM_INPUT_METHOD_HANDWRITING" type="unsigned long" value="0x06"/>
        <constant name="DOM_INPUT_METHOD_IME" type="unsigned long" value="0x04"/>
        <constant name="DOM_INPUT_METHOD_KEYBOARD" type="unsigned long" value="0x01"/>
        <constant name="DOM_INPUT_METHOD_MULTIMODAL" type="unsigned long" value="0x08"/>
        <constant name="DOM_INPUT_METHOD_OPTION" type="unsigned long" value="0x05"/>
        <constant name="DOM_INPUT_METHOD_PASTE" type="unsigned long" value="0x02"/>
        <constant name="DOM_INPUT_METHOD_SCRIPT" type="unsigned long" value="0x09"/>
        <constant name="DOM_INPUT_METHOD_UNKNOWN" type="unsigned long" value="0x00"/>
        <constant name="DOM_INPUT_METHOD_VOICE" type="unsigned long" value="0x07"/>
      </constants>
      <methods>
        <method name="initTextEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="dataArg" type="DOMString"/>
          <param name="inputMethod" type="unsigned long"/>
          <param name="locale" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="data" read-only="1" tags="Events" type="DOMString"/>
        <property name="inputMethod" read-only="1" tags="Events" type="unsigned long"/>
        <property name="locale" read-only="1" tags="Events" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="TextMetrics">
      <properties>
        <property name="width" read-only="1" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="TextRange">
      <methods>
        <method name="collapse" tags="Editing" type="void">
          <param default="true" name="start" optional="1" type="boolean"/>
        </method>
        <method name="compareEndPoints" tags="Editing" type="long">
          <param name="how" type="DOMString"/>
          <param name="sourceRange" type="TextRange"/>
        </method>
        <method name="duplicate" tags="Editing" type="TextRange"/>
        <method name="execCommand" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
          <param default="false" name="showUI" optional="1" type="boolean"/>
          <param name="value" optional="1" type="any"/>
        </method>
        <method name="execCommandShowHelp" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="expand" tags="Editing" type="boolean">
          <param name="Unit" type="DOMString"/>
        </method>
        <method name="findText" tags="Editing" type="boolean">
          <param name="string" type="DOMString"/>
          <param default="1073741823" name="count" optional="1" type="long"/>
          <param default="0" name="flags" optional="1" type="long"/>
        </method>
        <method name="getBookmark" tags="Editing" type="DOMString"/>
        <method name="getBoundingClientRect" tags="Editing" type="ClientRect"/>
        <method name="getClientRects" tags="Editing" type="ClientRectList"/>
        <method name="inRange" tags="Editing" type="boolean">
          <param name="range" type="TextRange"/>
        </method>
        <method name="isEqual" tags="Editing" type="boolean">
          <param name="range" type="TextRange"/>
        </method>
        <method name="move" tags="Editing" type="long">
          <param name="unit" type="DOMString"/>
          <param default="1" name="count" optional="1" type="long"/>
        </method>
        <method name="moveEnd" tags="Editing" type="long">
          <param name="unit" type="DOMString"/>
          <param default="1" name="count" optional="1" type="long"/>
        </method>
        <method name="moveStart" tags="Editing" type="long">
          <param name="unit" type="DOMString"/>
          <param default="1" name="count" optional="1" type="long"/>
        </method>
        <method name="moveToBookmark" tags="Editing" type="boolean">
          <param name="bookmark" type="DOMString"/>
        </method>
        <method name="moveToElementText" tags="Editing" type="void">
          <param name="element" type="Element"/>
        </method>
        <method name="moveToPoint" tags="Editing" type="void">
          <param name="x" type="long"/>
          <param name="y" type="long"/>
        </method>
        <method name="parentElement" tags="Editing" type="Element"/>
        <method name="pasteHTML" tags="Editing" type="void">
          <param name="html" type="DOMString"/>
        </method>
        <method name="queryCommandEnabled" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="queryCommandIndeterm" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="queryCommandState" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="queryCommandSupported" tags="Editing" type="boolean">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="queryCommandText" tags="Editing" type="DOMString">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="queryCommandValue" tags="Editing" type="any">
          <param name="cmdID" type="DOMString"/>
        </method>
        <method name="scrollIntoView" tags="Editing" type="void">
          <param default="true" name="fStart" optional="1" type="boolean"/>
        </method>
        <method name="select" tags="Editing" type="void"/>
        <method name="setEndPoint" tags="Editing" type="void">
          <param name="how" type="DOMString"/>
          <param name="SourceRange" type="TextRange"/>
        </method>
      </methods>
      <properties>
        <property name="boundingHeight" read-only="1" tags="Editing" type="long"/>
        <property name="boundingLeft" read-only="1" tags="Editing" type="long"/>
        <property name="boundingTop" read-only="1" tags="Editing" type="long"/>
        <property name="boundingWidth" read-only="1" tags="Editing" type="long"/>
        <property name="htmlText" read-only="1" tags="Editing" type="DOMString"/>
        <property name="offsetLeft" read-only="1" tags="Editing" type="long"/>
        <property name="offsetTop" read-only="1" tags="Editing" type="long"/>
        <property name="text" tags="Editing" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="TextRangeCollection">
      <methods>
        <method getter="1" name="item" tags="TreeNavigation" type="TextRange">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="TreeNavigation" type="long"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="TextTrack" tags="Media">
      <constants>
        <constant name="DISABLED" type="unsigned short" value="0"/>
        <constant name="ERROR" type="unsigned short" value="3"/>
        <constant name="HIDDEN" type="unsigned short" value="1"/>
        <constant name="LOADED" type="unsigned short" value="2"/>
        <constant name="LOADING" type="unsigned short" value="1"/>
        <constant name="NONE" type="unsigned short" value="0"/>
        <constant name="SHOWING" type="unsigned short" value="2"/>
      </constants>
      <events>
        <event dispatch="sync" name="cuechange" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="error" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="load" skips-window="1" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="addCue" type="void">
          <param name="cue" type="TextTrackCue"/>
        </method>
        <method name="removeCue" type="void">
          <param name="cue" type="TextTrackCue"/>
        </method>
      </methods>
      <properties>
        <property name="activeCues" read-only="1" type="TextTrackCueList"/>
        <property name="cues" read-only="1" type="TextTrackCueList"/>
        <property name="kind" read-only="1" type="DOMString"/>
        <property name="label" read-only="1" type="DOMString"/>
        <property name="language" read-only="1" type="DOMString"/>
        <property name="mode" type="(TextTrackMode or unsigned short)"/>
        <property event-handler="cuechange" name="oncuechange" type="EventHandler"/>
        <property event-handler="error" name="onerror" type="EventHandler"/>
        <property event-handler="load" name="onload" type="EventHandler"/>
        <property name="readyState" read-only="1" type="unsigned short"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="TextTrackCue" tags="Media">
      <constructor>
        <param name="startTime" type="double"/>
        <param name="endTime" type="double"/>
        <param name="text" type="DOMString"/>
      </constructor>
      <events>
        <event dispatch="sync" name="enter" skips-window="1" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="exit" skips-window="1" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="getCueAsHTML" type="DocumentFragment"/>
      </methods>
      <properties>
        <property name="endTime" type="double"/>
        <property name="id" type="DOMString"/>
        <property event-handler="enter" name="onenter" type="EventHandler"/>
        <property event-handler="exit" name="onexit" type="EventHandler"/>
        <property name="pauseOnExit" type="boolean"/>
        <property name="startTime" type="double"/>
        <property name="text" type="DOMString"/>
        <property name="track" read-only="1" type="TextTrack"/>
      </properties>
    </interface>
    <interface extends="Object" name="TextTrackCueList">
      <methods>
        <method name="getCueById" tags="Media" type="TextTrackCue">
          <param name="id" type="DOMString"/>
        </method>
        <method getter="1" name="item" tags="Media" type="TextTrackCue">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" tags="Media" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="TextTrackList">
      <events>
        <event dispatch="async" name="addtrack" skips-window="1" specs="HTML5" type="TrackEvent"/>
        <event dispatch="async" name="removetrack" skips-window="1" specs="HTML5" type="TrackEvent"/>
      </events>
      <methods>
        <method getter="1" name="item" type="TextTrack">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" type="unsigned long"/>
        <property event-handler="addtrack" name="onaddtrack" nullable="1" type="EventHandler"/>
      </properties>
    </interface>
    <interface extends="Object" name="TimeRanges">
      <methods>
        <method name="end" type="double">
          <param name="index" type="unsigned long"/>
        </method>
        <method name="start" type="double">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="Touch">
      <properties>
        <property name="clientX" read-only="1" type="long"/>
        <property name="clientY" read-only="1" type="long"/>
        <property name="identifier" read-only="1" type="long"/>
        <property name="pageX" read-only="1" type="long"/>
        <property name="pageY" read-only="1" type="long"/>
        <property name="screenX" read-only="1" type="long"/>
        <property name="screenY" read-only="1" type="long"/>
        <property name="target" read-only="1" type="EventTarget"/>
      </properties>
    </interface>
    <interface extends="UIEvent" name="TouchEvent">
      <properties>
        <property name="altKey" read-only="1" type="boolean"/>
        <property name="changedTouches" read-only="1" type="TouchList"/>
        <property name="ctrlKey" read-only="1" type="boolean"/>
        <property name="metaKey" read-only="1" type="boolean"/>
        <property name="shiftKey" read-only="1" type="boolean"/>
        <property name="targetTouches" read-only="1" type="TouchList"/>
        <property name="touches" read-only="1" type="TouchList"/>
      </properties>
    </interface>
    <interface extends="Object" name="TouchList">
      <methods>
        <method getter="1" name="item" nullable="1" type="Touch">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Event" name="TrackEvent">
      <properties>
        <property name="track" nullable="1" read-only="1" type="any"/>
      </properties>
    </interface>
    <interface extends="Event" name="TransitionEvent">
      <methods>
        <method name="initTransitionEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="propertyNameArg" type="DOMString"/>
          <param name="elapsedTimeArg" type="float"/>
        </method>
      </methods>
      <properties>
        <property name="elapsedTime" read-only="1" tags="Events" type="float"/>
        <property name="propertyName" read-only="1" tags="Events" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="TreeWalker">
      <methods>
        <method name="firstChild" tags="TreeNavigation" type="Node"/>
        <method name="lastChild" tags="TreeNavigation" type="Node"/>
        <method name="nextNode" tags="TreeNavigation" type="Node"/>
        <method name="nextSibling" tags="TreeNavigation" type="Node"/>
        <method name="parentNode" tags="TreeNavigation" type="Node"/>
        <method name="previousNode" tags="TreeNavigation" type="Node"/>
        <method name="previousSibling" tags="TreeNavigation" type="Node"/>
      </methods>
      <properties>
        <property name="currentNode" tags="TreeNavigation" type="Node"/>
        <property name="expandEntityReferences" read-only="1" tags="TreeNavigation" type="boolean"/>
        <property name="filter" read-only="1" tags="TreeNavigation" type="NodeFilter"/>
        <property name="root" read-only="1" tags="TreeNavigation" type="Node"/>
        <property name="whatToShow" read-only="1" tags="TreeNavigation" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Event" name="UIEvent">
      <constructor>
        <param name="type" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="UIEventInit"/>
      </constructor>
      <methods>
        <method name="initUIEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="detailArg" type="long"/>
        </method>
      </methods>
      <properties>
        <property name="detail" read-only="1" tags="Events" type="long"/>
        <property name="view" read-only="1" tags="Events" type="Window"/>
      </properties>
    </interface>
    <interface extends="Object" name="URL" static="1">
      <methods>
        <method name="createObjectURL" static="1" tags="FileAPI" type="DOMString">
          <param name="object" type="any"/>
          <param default="0" name="options" optional="1" type="ObjectURLOptions"/>
        </method>
        <method name="revokeObjectURL" static="1" tags="FileAPI" type="void">
          <param name="url" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="NavigationEventWithReferrer" name="UnviewableContentIdentifiedEvent" tags="MSAppOnly">
      <properties>
        <property name="mediaType" read-only="1" tags="MSAppOnly" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="ValidityState">
      <properties>
        <property name="badInput" read-only="1" tags="Editing" type="boolean"/>
        <property name="customError" read-only="1" tags="Editing" type="boolean"/>
        <property name="patternMismatch" read-only="1" tags="Editing" type="boolean"/>
        <property name="rangeOverflow" read-only="1" tags="Editing" type="boolean"/>
        <property name="rangeUnderflow" read-only="1" tags="Editing" type="boolean"/>
        <property name="stepMismatch" read-only="1" tags="Editing" type="boolean"/>
        <property name="tooLong" read-only="1" tags="Editing" type="boolean"/>
        <property name="typeMismatch" read-only="1" tags="Editing" type="boolean"/>
        <property name="valid" read-only="1" tags="Editing" type="boolean"/>
        <property name="valueMissing" read-only="1" tags="Editing" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Object" name="VideoPlaybackQuality" specs="MSE">
      <properties>
        <property name="corruptedVideoFrames" read-only="1" specs="MSE" type="unsigned long"/>
        <property name="creationTime" read-only="1" specs="MSE" type="DOMHighResTimeStamp"/>
        <property name="droppedVideoFrames" read-only="1" specs="MSE" type="unsigned long"/>
        <property name="totalFrameDelay" read-only="1" specs="MSE" type="double"/>
        <property name="totalVideoFrames" read-only="1" specs="MSE" type="unsigned long"/>
      </properties>
    </interface>
    <interface extends="Object" name="VideoTrack">
      <properties>
        <property name="id" read-only="1" type="DOMString"/>
        <property name="kind" type="DOMString"/>
        <property name="label" read-only="1" type="DOMString"/>
        <property name="language" type="DOMString"/>
        <property name="selected" type="boolean"/>
        <property name="sourceBuffer" read-only="1" specs="MSE" type="SourceBuffer"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="VideoTrackList">
      <events>
        <event dispatch="async" name="addtrack" skips-window="1" specs="HTML5" type="TrackEvent"/>
        <event dispatch="async" name="removetrack" skips-window="1" specs="HTML5" type="TrackEvent"/>
        <event dispatch="async" name="change" skips-window="1" specs="HTML5" type="Event"/>
      </events>
      <methods>
        <method name="getTrackById" nullable="1" type="VideoTrack">
          <param name="id" type="DOMString"/>
        </method>
        <method getter="1" name="item" type="VideoTrack">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="length" read-only="1" type="unsigned long"/>
        <property event-handler="addtrack" name="onaddtrack" type="EventHandler"/>
        <property event-handler="change" name="onchange" type="EventHandler"/>
        <property event-handler="removetrack" name="onremovetrack" type="EventHandler"/>
        <property name="selectedIndex" read-only="1" type="long"/>
      </properties>
    </interface>
    <interface extends="Object" name="WEBGL_compressed_texture_s3tc">
      <constants>
        <constant name="COMPRESSED_RGBA_S3TC_DXT1_EXT" type="unsigned long" type-original="GLenum" value="0x83F1"/>
        <constant name="COMPRESSED_RGBA_S3TC_DXT3_EXT" type="unsigned long" type-original="GLenum" value="0x83F2"/>
        <constant name="COMPRESSED_RGBA_S3TC_DXT5_EXT" type="unsigned long" type-original="GLenum" value="0x83F3"/>
        <constant name="COMPRESSED_RGB_S3TC_DXT1_EXT" type="unsigned long" type-original="GLenum" value="0x83F0"/>
      </constants>
    </interface>
    <interface extends="Object" name="WEBGL_debug_renderer_info">
      <constants>
        <constant name="UNMASKED_RENDERER_WEBGL" type="unsigned long" type-original="GLenum" value="0x9246"/>
        <constant name="UNMASKED_VENDOR_WEBGL" type="unsigned long" type-original="GLenum" value="0x9245"/>
      </constants>
    </interface>
    <interface extends="Object" name="WEBGL_depth_texture">
      <constants>
        <constant name="UNSIGNED_INT_24_8_WEBGL" type="unsigned long" type-original="GLenum" value="0x84FA"/>
      </constants>
    </interface>
    <interface extends="AudioNode" name="WaveShaperNode">
      <properties>
        <property name="curve" nullable="1" type="Float32Array"/>
        <property name="oversample" type="OverSampleType"/>
      </properties>
    </interface>
    <interface extends="Object" name="WebGLActiveInfo">
      <properties>
        <property name="name" read-only="1" type="DOMString"/>
        <property name="size" read-only="1" type="long" type-original="GLint"/>
        <property name="type" read-only="1" type="unsigned long" type-original="GLenum"/>
      </properties>
    </interface>
    <interface extends="WebGLObject" name="WebGLBuffer"/>
    <interface extends="Event" name="WebGLContextEvent">
      <constructor/>
      <properties>
        <property name="statusMessage" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="WebGLObject" name="WebGLFramebuffer"/>
    <interface extends="Object" name="WebGLObject"/>
    <interface extends="WebGLObject" name="WebGLProgram"/>
    <interface extends="WebGLObject" name="WebGLRenderbuffer"/>
    <interface extends="Object" name="WebGLRenderingContext">
      <constants>
        <constant name="ACTIVE_ATTRIBUTES" type="unsigned long" type-original="GLenum" value="0x8B89"/>
        <constant name="ACTIVE_TEXTURE" type="unsigned long" type-original="GLenum" value="0x84E0"/>
        <constant name="ACTIVE_UNIFORMS" type="unsigned long" type-original="GLenum" value="0x8B86"/>
        <constant name="ALIASED_LINE_WIDTH_RANGE" type="unsigned long" type-original="GLenum" value="0x846E"/>
        <constant name="ALIASED_POINT_SIZE_RANGE" type="unsigned long" type-original="GLenum" value="0x846D"/>
        <constant name="ALPHA" type="unsigned long" type-original="GLenum" value="0x1906"/>
        <constant name="ALPHA_BITS" type="unsigned long" type-original="GLenum" value="0x0D55"/>
        <constant name="ALWAYS" type="unsigned long" type-original="GLenum" value="0x0207"/>
        <constant name="ARRAY_BUFFER" type="unsigned long" type-original="GLenum" value="0x8892"/>
        <constant name="ARRAY_BUFFER_BINDING" type="unsigned long" type-original="GLenum" value="0x8894"/>
        <constant name="ATTACHED_SHADERS" type="unsigned long" type-original="GLenum" value="0x8B85"/>
        <constant name="BACK" type="unsigned long" type-original="GLenum" value="0x0405"/>
        <constant name="BLEND" type="unsigned long" type-original="GLenum" value="0x0BE2"/>
        <constant name="BLEND_COLOR" type="unsigned long" type-original="GLenum" value="0x8005"/>
        <constant name="BLEND_DST_ALPHA" type="unsigned long" type-original="GLenum" value="0x80CA"/>
        <constant name="BLEND_DST_RGB" type="unsigned long" type-original="GLenum" value="0x80C8"/>
        <constant name="BLEND_EQUATION" type="unsigned long" type-original="GLenum" value="0x8009"/>
        <constant name="BLEND_EQUATION_ALPHA" type="unsigned long" type-original="GLenum" value="0x883D"/>
        <constant name="BLEND_EQUATION_RGB" type="unsigned long" type-original="GLenum" value="0x8009"/>
        <constant name="BLEND_SRC_ALPHA" type="unsigned long" type-original="GLenum" value="0x80CB"/>
        <constant name="BLEND_SRC_RGB" type="unsigned long" type-original="GLenum" value="0x80C9"/>
        <constant name="BLUE_BITS" type="unsigned long" type-original="GLenum" value="0x0D54"/>
        <constant name="BOOL" type="unsigned long" type-original="GLenum" value="0x8B56"/>
        <constant name="BOOL_VEC2" type="unsigned long" type-original="GLenum" value="0x8B57"/>
        <constant name="BOOL_VEC3" type="unsigned long" type-original="GLenum" value="0x8B58"/>
        <constant name="BOOL_VEC4" type="unsigned long" type-original="GLenum" value="0x8B59"/>
        <constant name="BROWSER_DEFAULT_WEBGL" type="unsigned long" type-original="GLenum" value="0x9244"/>
        <constant name="BUFFER_SIZE" type="unsigned long" type-original="GLenum" value="0x8764"/>
        <constant name="BUFFER_USAGE" type="unsigned long" type-original="GLenum" value="0x8765"/>
        <constant name="BYTE" type="unsigned long" type-original="GLenum" value="0x1400"/>
        <constant name="CCW" type="unsigned long" type-original="GLenum" value="0x0901"/>
        <constant name="CLAMP_TO_EDGE" type="unsigned long" type-original="GLenum" value="0x812F"/>
        <constant name="COLOR_ATTACHMENT0" type="unsigned long" type-original="GLenum" value="0x8CE0"/>
        <constant name="COLOR_BUFFER_BIT" type="unsigned long" type-original="GLenum" value="0x00004000"/>
        <constant name="COLOR_CLEAR_VALUE" type="unsigned long" type-original="GLenum" value="0x0C22"/>
        <constant name="COLOR_WRITEMASK" type="unsigned long" type-original="GLenum" value="0x0C23"/>
        <constant name="COMPILE_STATUS" type="unsigned long" type-original="GLenum" value="0x8B81"/>
        <constant name="COMPRESSED_TEXTURE_FORMATS" type="unsigned long" type-original="GLenum" value="0x86A3"/>
        <constant name="CONSTANT_ALPHA" type="unsigned long" type-original="GLenum" value="0x8003"/>
        <constant name="CONSTANT_COLOR" type="unsigned long" type-original="GLenum" value="0x8001"/>
        <constant name="CONTEXT_LOST_WEBGL" type="unsigned long" type-original="GLenum" value="0x9242"/>
        <constant name="CULL_FACE" type="unsigned long" type-original="GLenum" value="0x0B44"/>
        <constant name="CULL_FACE_MODE" type="unsigned long" type-original="GLenum" value="0x0B45"/>
        <constant name="CURRENT_PROGRAM" type="unsigned long" type-original="GLenum" value="0x8B8D"/>
        <constant name="CURRENT_VERTEX_ATTRIB" type="unsigned long" type-original="GLenum" value="0x8626"/>
        <constant name="CW" type="unsigned long" type-original="GLenum" value="0x0900"/>
        <constant name="DECR" type="unsigned long" type-original="GLenum" value="0x1E03"/>
        <constant name="DECR_WRAP" type="unsigned long" type-original="GLenum" value="0x8508"/>
        <constant name="DELETE_STATUS" type="unsigned long" type-original="GLenum" value="0x8B80"/>
        <constant name="DEPTH_ATTACHMENT" type="unsigned long" type-original="GLenum" value="0x8D00"/>
        <constant name="DEPTH_BITS" type="unsigned long" type-original="GLenum" value="0x0D56"/>
        <constant name="DEPTH_BUFFER_BIT" type="unsigned long" type-original="GLenum" value="0x00000100"/>
        <constant name="DEPTH_CLEAR_VALUE" type="unsigned long" type-original="GLenum" value="0x0B73"/>
        <constant name="DEPTH_COMPONENT" type="unsigned long" type-original="GLenum" value="0x1902"/>
        <constant name="DEPTH_COMPONENT16" type="unsigned long" type-original="GLenum" value="0x81A5"/>
        <constant name="DEPTH_FUNC" type="unsigned long" type-original="GLenum" value="0x0B74"/>
        <constant name="DEPTH_RANGE" type="unsigned long" type-original="GLenum" value="0x0B70"/>
        <constant name="DEPTH_STENCIL" type="unsigned long" type-original="GLenum" value="0x84F9"/>
        <constant name="DEPTH_STENCIL_ATTACHMENT" type="unsigned long" type-original="GLenum" value="0x821A"/>
        <constant name="DEPTH_TEST" type="unsigned long" type-original="GLenum" value="0x0B71"/>
        <constant name="DEPTH_WRITEMASK" type="unsigned long" type-original="GLenum" value="0x0B72"/>
        <constant name="DITHER" type="unsigned long" type-original="GLenum" value="0x0BD0"/>
        <constant name="DONT_CARE" type="unsigned long" type-original="GLenum" value="0x1100"/>
        <constant name="DST_ALPHA" type="unsigned long" type-original="GLenum" value="0x0304"/>
        <constant name="DST_COLOR" type="unsigned long" type-original="GLenum" value="0x0306"/>
        <constant name="DYNAMIC_DRAW" type="unsigned long" type-original="GLenum" value="0x88E8"/>
        <constant name="ELEMENT_ARRAY_BUFFER" type="unsigned long" type-original="GLenum" value="0x8893"/>
        <constant name="ELEMENT_ARRAY_BUFFER_BINDING" type="unsigned long" type-original="GLenum" value="0x8895"/>
        <constant name="EQUAL" type="unsigned long" type-original="GLenum" value="0x0202"/>
        <constant name="FASTEST" type="unsigned long" type-original="GLenum" value="0x1101"/>
        <constant name="FLOAT" type="unsigned long" type-original="GLenum" value="0x1406"/>
        <constant name="FLOAT_MAT2" type="unsigned long" type-original="GLenum" value="0x8B5A"/>
        <constant name="FLOAT_MAT3" type="unsigned long" type-original="GLenum" value="0x8B5B"/>
        <constant name="FLOAT_MAT4" type="unsigned long" type-original="GLenum" value="0x8B5C"/>
        <constant name="FLOAT_VEC2" type="unsigned long" type-original="GLenum" value="0x8B50"/>
        <constant name="FLOAT_VEC3" type="unsigned long" type-original="GLenum" value="0x8B51"/>
        <constant name="FLOAT_VEC4" type="unsigned long" type-original="GLenum" value="0x8B52"/>
        <constant name="FRAGMENT_SHADER" type="unsigned long" type-original="GLenum" value="0x8B30"/>
        <constant name="FRAMEBUFFER" type="unsigned long" type-original="GLenum" value="0x8D40"/>
        <constant name="FRAMEBUFFER_ATTACHMENT_OBJECT_NAME" type="unsigned long" type-original="GLenum" value="0x8CD1"/>
        <constant name="FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE" type="unsigned long" type-original="GLenum" value="0x8CD0"/>
        <constant name="FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE" type="unsigned long" type-original="GLenum" value="0x8CD3"/>
        <constant name="FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL" type="unsigned long" type-original="GLenum" value="0x8CD2"/>
        <constant name="FRAMEBUFFER_BINDING" type="unsigned long" type-original="GLenum" value="0x8CA6"/>
        <constant name="FRAMEBUFFER_COMPLETE" type="unsigned long" type-original="GLenum" value="0x8CD5"/>
        <constant name="FRAMEBUFFER_INCOMPLETE_ATTACHMENT" type="unsigned long" type-original="GLenum" value="0x8CD6"/>
        <constant name="FRAMEBUFFER_INCOMPLETE_DIMENSIONS" type="unsigned long" type-original="GLenum" value="0x8CD9"/>
        <constant name="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT" type="unsigned long" type-original="GLenum" value="0x8CD7"/>
        <constant name="FRAMEBUFFER_UNSUPPORTED" type="unsigned long" type-original="GLenum" value="0x8CDD"/>
        <constant name="FRONT" type="unsigned long" type-original="GLenum" value="0x0404"/>
        <constant name="FRONT_AND_BACK" type="unsigned long" type-original="GLenum" value="0x0408"/>
        <constant name="FRONT_FACE" type="unsigned long" type-original="GLenum" value="0x0B46"/>
        <constant name="FUNC_ADD" type="unsigned long" type-original="GLenum" value="0x8006"/>
        <constant name="FUNC_REVERSE_SUBTRACT" type="unsigned long" type-original="GLenum" value="0x800B"/>
        <constant name="FUNC_SUBTRACT" type="unsigned long" type-original="GLenum" value="0x800A"/>
        <constant name="GENERATE_MIPMAP_HINT" type="unsigned long" type-original="GLenum" value="0x8192"/>
        <constant name="GEQUAL" type="unsigned long" type-original="GLenum" value="0x0206"/>
        <constant name="GREATER" type="unsigned long" type-original="GLenum" value="0x0204"/>
        <constant name="GREEN_BITS" type="unsigned long" type-original="GLenum" value="0x0D53"/>
        <constant name="HIGH_FLOAT" type="unsigned long" type-original="GLenum" value="0x8DF2"/>
        <constant name="HIGH_INT" type="unsigned long" type-original="GLenum" value="0x8DF5"/>
        <constant name="IMPLEMENTATION_COLOR_READ_FORMAT" type="unsigned long" type-original="GLenum" value="0x8B9B"/>
        <constant name="IMPLEMENTATION_COLOR_READ_TYPE" type="unsigned long" type-original="GLenum" value="0x8B9A"/>
        <constant name="INCR" type="unsigned long" type-original="GLenum" value="0x1E02"/>
        <constant name="INCR_WRAP" type="unsigned long" type-original="GLenum" value="0x8507"/>
        <constant name="INT" type="unsigned long" type-original="GLenum" value="0x1404"/>
        <constant name="INT_VEC2" type="unsigned long" type-original="GLenum" value="0x8B53"/>
        <constant name="INT_VEC3" type="unsigned long" type-original="GLenum" value="0x8B54"/>
        <constant name="INT_VEC4" type="unsigned long" type-original="GLenum" value="0x8B55"/>
        <constant name="INVALID_ENUM" type="unsigned long" type-original="GLenum" value="0x0500"/>
        <constant name="INVALID_FRAMEBUFFER_OPERATION" type="unsigned long" type-original="GLenum" value="0x0506"/>
        <constant name="INVALID_OPERATION" type="unsigned long" type-original="GLenum" value="0x0502"/>
        <constant name="INVALID_VALUE" type="unsigned long" type-original="GLenum" value="0x0501"/>
        <constant name="INVERT" type="unsigned long" type-original="GLenum" value="0x150A"/>
        <constant name="KEEP" type="unsigned long" type-original="GLenum" value="0x1E00"/>
        <constant name="LEQUAL" type="unsigned long" type-original="GLenum" value="0x0203"/>
        <constant name="LESS" type="unsigned long" type-original="GLenum" value="0x0201"/>
        <constant name="LINEAR" type="unsigned long" type-original="GLenum" value="0x2601"/>
        <constant name="LINEAR_MIPMAP_LINEAR" type="unsigned long" type-original="GLenum" value="0x2703"/>
        <constant name="LINEAR_MIPMAP_NEAREST" type="unsigned long" type-original="GLenum" value="0x2701"/>
        <constant name="LINES" type="unsigned long" type-original="GLenum" value="0x0001"/>
        <constant name="LINE_LOOP" type="unsigned long" type-original="GLenum" value="0x0002"/>
        <constant name="LINE_STRIP" type="unsigned long" type-original="GLenum" value="0x0003"/>
        <constant name="LINE_WIDTH" type="unsigned long" type-original="GLenum" value="0x0B21"/>
        <constant name="LINK_STATUS" type="unsigned long" type-original="GLenum" value="0x8B82"/>
        <constant name="LOW_FLOAT" type="unsigned long" type-original="GLenum" value="0x8DF0"/>
        <constant name="LOW_INT" type="unsigned long" type-original="GLenum" value="0x8DF3"/>
        <constant name="LUMINANCE" type="unsigned long" type-original="GLenum" value="0x1909"/>
        <constant name="LUMINANCE_ALPHA" type="unsigned long" type-original="GLenum" value="0x190A"/>
        <constant name="MAX_COMBINED_TEXTURE_IMAGE_UNITS" type="unsigned long" type-original="GLenum" value="0x8B4D"/>
        <constant name="MAX_CUBE_MAP_TEXTURE_SIZE" type="unsigned long" type-original="GLenum" value="0x851C"/>
        <constant name="MAX_FRAGMENT_UNIFORM_VECTORS" type="unsigned long" type-original="GLenum" value="0x8DFD"/>
        <constant name="MAX_RENDERBUFFER_SIZE" type="unsigned long" type-original="GLenum" value="0x84E8"/>
        <constant name="MAX_TEXTURE_IMAGE_UNITS" type="unsigned long" type-original="GLenum" value="0x8872"/>
        <constant name="MAX_TEXTURE_SIZE" type="unsigned long" type-original="GLenum" value="0x0D33"/>
        <constant name="MAX_VARYING_VECTORS" type="unsigned long" type-original="GLenum" value="0x8DFC"/>
        <constant name="MAX_VERTEX_ATTRIBS" type="unsigned long" type-original="GLenum" value="0x8869"/>
        <constant name="MAX_VERTEX_TEXTURE_IMAGE_UNITS" type="unsigned long" type-original="GLenum" value="0x8B4C"/>
        <constant name="MAX_VERTEX_UNIFORM_VECTORS" type="unsigned long" type-original="GLenum" value="0x8DFB"/>
        <constant name="MAX_VIEWPORT_DIMS" type="unsigned long" type-original="GLenum" value="0x0D3A"/>
        <constant name="MEDIUM_FLOAT" type="unsigned long" type-original="GLenum" value="0x8DF1"/>
        <constant name="MEDIUM_INT" type="unsigned long" type-original="GLenum" value="0x8DF4"/>
        <constant name="MIRRORED_REPEAT" type="unsigned long" type-original="GLenum" value="0x8370"/>
        <constant name="NEAREST" type="unsigned long" type-original="GLenum" value="0x2600"/>
        <constant name="NEAREST_MIPMAP_LINEAR" type="unsigned long" type-original="GLenum" value="0x2702"/>
        <constant name="NEAREST_MIPMAP_NEAREST" type="unsigned long" type-original="GLenum" value="0x2700"/>
        <constant name="NEVER" type="unsigned long" type-original="GLenum" value="0x0200"/>
        <constant name="NICEST" type="unsigned long" type-original="GLenum" value="0x1102"/>
        <constant name="NONE" type="unsigned long" type-original="GLenum" value="0"/>
        <constant name="NOTEQUAL" type="unsigned long" type-original="GLenum" value="0x0205"/>
        <constant name="NO_ERROR" type="unsigned long" type-original="GLenum" value="0"/>
        <constant name="ONE" type="unsigned long" type-original="GLenum" value="1"/>
        <constant name="ONE_MINUS_CONSTANT_ALPHA" type="unsigned long" type-original="GLenum" value="0x8004"/>
        <constant name="ONE_MINUS_CONSTANT_COLOR" type="unsigned long" type-original="GLenum" value="0x8002"/>
        <constant name="ONE_MINUS_DST_ALPHA" type="unsigned long" type-original="GLenum" value="0x0305"/>
        <constant name="ONE_MINUS_DST_COLOR" type="unsigned long" type-original="GLenum" value="0x0307"/>
        <constant name="ONE_MINUS_SRC_ALPHA" type="unsigned long" type-original="GLenum" value="0x0303"/>
        <constant name="ONE_MINUS_SRC_COLOR" type="unsigned long" type-original="GLenum" value="0x0301"/>
        <constant name="OUT_OF_MEMORY" type="unsigned long" type-original="GLenum" value="0x0505"/>
        <constant name="PACK_ALIGNMENT" type="unsigned long" type-original="GLenum" value="0x0D05"/>
        <constant name="POINTS" type="unsigned long" type-original="GLenum" value="0x0000"/>
        <constant name="POLYGON_OFFSET_FACTOR" type="unsigned long" type-original="GLenum" value="0x8038"/>
        <constant name="POLYGON_OFFSET_FILL" type="unsigned long" type-original="GLenum" value="0x8037"/>
        <constant name="POLYGON_OFFSET_UNITS" type="unsigned long" type-original="GLenum" value="0x2A00"/>
        <constant name="RED_BITS" type="unsigned long" type-original="GLenum" value="0x0D52"/>
        <constant name="RENDERBUFFER" type="unsigned long" type-original="GLenum" value="0x8D41"/>
        <constant name="RENDERBUFFER_ALPHA_SIZE" type="unsigned long" type-original="GLenum" value="0x8D53"/>
        <constant name="RENDERBUFFER_BINDING" type="unsigned long" type-original="GLenum" value="0x8CA7"/>
        <constant name="RENDERBUFFER_BLUE_SIZE" type="unsigned long" type-original="GLenum" value="0x8D52"/>
        <constant name="RENDERBUFFER_DEPTH_SIZE" type="unsigned long" type-original="GLenum" value="0x8D54"/>
        <constant name="RENDERBUFFER_GREEN_SIZE" type="unsigned long" type-original="GLenum" value="0x8D51"/>
        <constant name="RENDERBUFFER_HEIGHT" type="unsigned long" type-original="GLenum" value="0x8D43"/>
        <constant name="RENDERBUFFER_INTERNAL_FORMAT" type="unsigned long" type-original="GLenum" value="0x8D44"/>
        <constant name="RENDERBUFFER_RED_SIZE" type="unsigned long" type-original="GLenum" value="0x8D50"/>
        <constant name="RENDERBUFFER_STENCIL_SIZE" type="unsigned long" type-original="GLenum" value="0x8D55"/>
        <constant name="RENDERBUFFER_WIDTH" type="unsigned long" type-original="GLenum" value="0x8D42"/>
        <constant name="RENDERER" type="unsigned long" type-original="GLenum" value="0x1F01"/>
        <constant name="REPEAT" type="unsigned long" type-original="GLenum" value="0x2901"/>
        <constant name="REPLACE" type="unsigned long" type-original="GLenum" value="0x1E01"/>
        <constant name="RGB" type="unsigned long" type-original="GLenum" value="0x1907"/>
        <constant name="RGB565" type="unsigned long" type-original="GLenum" value="0x8D62"/>
        <constant name="RGB5_A1" type="unsigned long" type-original="GLenum" value="0x8057"/>
        <constant name="RGBA" type="unsigned long" type-original="GLenum" value="0x1908"/>
        <constant name="RGBA4" type="unsigned long" type-original="GLenum" value="0x8056"/>
        <constant name="SAMPLER_2D" type="unsigned long" type-original="GLenum" value="0x8B5E"/>
        <constant name="SAMPLER_CUBE" type="unsigned long" type-original="GLenum" value="0x8B60"/>
        <constant name="SAMPLES" type="unsigned long" type-original="GLenum" value="0x80A9"/>
        <constant name="SAMPLE_ALPHA_TO_COVERAGE" type="unsigned long" type-original="GLenum" value="0x809E"/>
        <constant name="SAMPLE_BUFFERS" type="unsigned long" type-original="GLenum" value="0x80A8"/>
        <constant name="SAMPLE_COVERAGE" type="unsigned long" type-original="GLenum" value="0x80A0"/>
        <constant name="SAMPLE_COVERAGE_INVERT" type="unsigned long" type-original="GLenum" value="0x80AB"/>
        <constant name="SAMPLE_COVERAGE_VALUE" type="unsigned long" type-original="GLenum" value="0x80AA"/>
        <constant name="SCISSOR_BOX" type="unsigned long" type-original="GLenum" value="0x0C10"/>
        <constant name="SCISSOR_TEST" type="unsigned long" type-original="GLenum" value="0x0C11"/>
        <constant name="SHADER_TYPE" type="unsigned long" type-original="GLenum" value="0x8B4F"/>
        <constant name="SHADING_LANGUAGE_VERSION" type="unsigned long" type-original="GLenum" value="0x8B8C"/>
        <constant name="SHORT" type="unsigned long" type-original="GLenum" value="0x1402"/>
        <constant name="SRC_ALPHA" type="unsigned long" type-original="GLenum" value="0x0302"/>
        <constant name="SRC_ALPHA_SATURATE" type="unsigned long" type-original="GLenum" value="0x0308"/>
        <constant name="SRC_COLOR" type="unsigned long" type-original="GLenum" value="0x0300"/>
        <constant name="STATIC_DRAW" type="unsigned long" type-original="GLenum" value="0x88E4"/>
        <constant name="STENCIL_ATTACHMENT" type="unsigned long" type-original="GLenum" value="0x8D20"/>
        <constant name="STENCIL_BACK_FAIL" type="unsigned long" type-original="GLenum" value="0x8801"/>
        <constant name="STENCIL_BACK_FUNC" type="unsigned long" type-original="GLenum" value="0x8800"/>
        <constant name="STENCIL_BACK_PASS_DEPTH_FAIL" type="unsigned long" type-original="GLenum" value="0x8802"/>
        <constant name="STENCIL_BACK_PASS_DEPTH_PASS" type="unsigned long" type-original="GLenum" value="0x8803"/>
        <constant name="STENCIL_BACK_REF" type="unsigned long" type-original="GLenum" value="0x8CA3"/>
        <constant name="STENCIL_BACK_VALUE_MASK" type="unsigned long" type-original="GLenum" value="0x8CA4"/>
        <constant name="STENCIL_BACK_WRITEMASK" type="unsigned long" type-original="GLenum" value="0x8CA5"/>
        <constant name="STENCIL_BITS" type="unsigned long" type-original="GLenum" value="0x0D57"/>
        <constant name="STENCIL_BUFFER_BIT" type="unsigned long" type-original="GLenum" value="0x00000400"/>
        <constant name="STENCIL_CLEAR_VALUE" type="unsigned long" type-original="GLenum" value="0x0B91"/>
        <constant name="STENCIL_FAIL" type="unsigned long" type-original="GLenum" value="0x0B94"/>
        <constant name="STENCIL_FUNC" type="unsigned long" type-original="GLenum" value="0x0B92"/>
        <constant name="STENCIL_INDEX" type="unsigned long" type-original="GLenum" value="0x1901"/>
        <constant name="STENCIL_INDEX8" type="unsigned long" type-original="GLenum" value="0x8D48"/>
        <constant name="STENCIL_PASS_DEPTH_FAIL" type="unsigned long" type-original="GLenum" value="0x0B95"/>
        <constant name="STENCIL_PASS_DEPTH_PASS" type="unsigned long" type-original="GLenum" value="0x0B96"/>
        <constant name="STENCIL_REF" type="unsigned long" type-original="GLenum" value="0x0B97"/>
        <constant name="STENCIL_TEST" type="unsigned long" type-original="GLenum" value="0x0B90"/>
        <constant name="STENCIL_VALUE_MASK" type="unsigned long" type-original="GLenum" value="0x0B93"/>
        <constant name="STENCIL_WRITEMASK" type="unsigned long" type-original="GLenum" value="0x0B98"/>
        <constant name="STREAM_DRAW" type="unsigned long" type-original="GLenum" value="0x88E0"/>
        <constant name="SUBPIXEL_BITS" type="unsigned long" type-original="GLenum" value="0x0D50"/>
        <constant name="TEXTURE" type="unsigned long" type-original="GLenum" value="0x1702"/>
        <constant name="TEXTURE0" type="unsigned long" type-original="GLenum" value="0x84C0"/>
        <constant name="TEXTURE1" type="unsigned long" type-original="GLenum" value="0x84C1"/>
        <constant name="TEXTURE10" type="unsigned long" type-original="GLenum" value="0x84CA"/>
        <constant name="TEXTURE11" type="unsigned long" type-original="GLenum" value="0x84CB"/>
        <constant name="TEXTURE12" type="unsigned long" type-original="GLenum" value="0x84CC"/>
        <constant name="TEXTURE13" type="unsigned long" type-original="GLenum" value="0x84CD"/>
        <constant name="TEXTURE14" type="unsigned long" type-original="GLenum" value="0x84CE"/>
        <constant name="TEXTURE15" type="unsigned long" type-original="GLenum" value="0x84CF"/>
        <constant name="TEXTURE16" type="unsigned long" type-original="GLenum" value="0x84D0"/>
        <constant name="TEXTURE17" type="unsigned long" type-original="GLenum" value="0x84D1"/>
        <constant name="TEXTURE18" type="unsigned long" type-original="GLenum" value="0x84D2"/>
        <constant name="TEXTURE19" type="unsigned long" type-original="GLenum" value="0x84D3"/>
        <constant name="TEXTURE2" type="unsigned long" type-original="GLenum" value="0x84C2"/>
        <constant name="TEXTURE20" type="unsigned long" type-original="GLenum" value="0x84D4"/>
        <constant name="TEXTURE21" type="unsigned long" type-original="GLenum" value="0x84D5"/>
        <constant name="TEXTURE22" type="unsigned long" type-original="GLenum" value="0x84D6"/>
        <constant name="TEXTURE23" type="unsigned long" type-original="GLenum" value="0x84D7"/>
        <constant name="TEXTURE24" type="unsigned long" type-original="GLenum" value="0x84D8"/>
        <constant name="TEXTURE25" type="unsigned long" type-original="GLenum" value="0x84D9"/>
        <constant name="TEXTURE26" type="unsigned long" type-original="GLenum" value="0x84DA"/>
        <constant name="TEXTURE27" type="unsigned long" type-original="GLenum" value="0x84DB"/>
        <constant name="TEXTURE28" type="unsigned long" type-original="GLenum" value="0x84DC"/>
        <constant name="TEXTURE29" type="unsigned long" type-original="GLenum" value="0x84DD"/>
        <constant name="TEXTURE3" type="unsigned long" type-original="GLenum" value="0x84C3"/>
        <constant name="TEXTURE30" type="unsigned long" type-original="GLenum" value="0x84DE"/>
        <constant name="TEXTURE31" type="unsigned long" type-original="GLenum" value="0x84DF"/>
        <constant name="TEXTURE4" type="unsigned long" type-original="GLenum" value="0x84C4"/>
        <constant name="TEXTURE5" type="unsigned long" type-original="GLenum" value="0x84C5"/>
        <constant name="TEXTURE6" type="unsigned long" type-original="GLenum" value="0x84C6"/>
        <constant name="TEXTURE7" type="unsigned long" type-original="GLenum" value="0x84C7"/>
        <constant name="TEXTURE8" type="unsigned long" type-original="GLenum" value="0x84C8"/>
        <constant name="TEXTURE9" type="unsigned long" type-original="GLenum" value="0x84C9"/>
        <constant name="TEXTURE_2D" type="unsigned long" type-original="GLenum" value="0x0DE1"/>
        <constant name="TEXTURE_BINDING_2D" type="unsigned long" type-original="GLenum" value="0x8069"/>
        <constant name="TEXTURE_BINDING_CUBE_MAP" type="unsigned long" type-original="GLenum" value="0x8514"/>
        <constant name="TEXTURE_CUBE_MAP" type="unsigned long" type-original="GLenum" value="0x8513"/>
        <constant name="TEXTURE_CUBE_MAP_NEGATIVE_X" type="unsigned long" type-original="GLenum" value="0x8516"/>
        <constant name="TEXTURE_CUBE_MAP_NEGATIVE_Y" type="unsigned long" type-original="GLenum" value="0x8518"/>
        <constant name="TEXTURE_CUBE_MAP_NEGATIVE_Z" type="unsigned long" type-original="GLenum" value="0x851A"/>
        <constant name="TEXTURE_CUBE_MAP_POSITIVE_X" type="unsigned long" type-original="GLenum" value="0x8515"/>
        <constant name="TEXTURE_CUBE_MAP_POSITIVE_Y" type="unsigned long" type-original="GLenum" value="0x8517"/>
        <constant name="TEXTURE_CUBE_MAP_POSITIVE_Z" type="unsigned long" type-original="GLenum" value="0x8519"/>
        <constant name="TEXTURE_MAG_FILTER" type="unsigned long" type-original="GLenum" value="0x2800"/>
        <constant name="TEXTURE_MIN_FILTER" type="unsigned long" type-original="GLenum" value="0x2801"/>
        <constant name="TEXTURE_WRAP_S" type="unsigned long" type-original="GLenum" value="0x2802"/>
        <constant name="TEXTURE_WRAP_T" type="unsigned long" type-original="GLenum" value="0x2803"/>
        <constant name="TRIANGLES" type="unsigned long" type-original="GLenum" value="0x0004"/>
        <constant name="TRIANGLE_FAN" type="unsigned long" type-original="GLenum" value="0x0006"/>
        <constant name="TRIANGLE_STRIP" type="unsigned long" type-original="GLenum" value="0x0005"/>
        <constant name="UNPACK_ALIGNMENT" type="unsigned long" type-original="GLenum" value="0x0CF5"/>
        <constant name="UNPACK_COLORSPACE_CONVERSION_WEBGL" type="unsigned long" type-original="GLenum" value="0x9243"/>
        <constant name="UNPACK_FLIP_Y_WEBGL" type="unsigned long" type-original="GLenum" value="0x9240"/>
        <constant name="UNPACK_PREMULTIPLY_ALPHA_WEBGL" type="unsigned long" type-original="GLenum" value="0x9241"/>
        <constant name="UNSIGNED_BYTE" type="unsigned long" type-original="GLenum" value="0x1401"/>
        <constant name="UNSIGNED_INT" type="unsigned long" type-original="GLenum" value="0x1405"/>
        <constant name="UNSIGNED_SHORT" type="unsigned long" type-original="GLenum" value="0x1403"/>
        <constant name="UNSIGNED_SHORT_4_4_4_4" type="unsigned long" type-original="GLenum" value="0x8033"/>
        <constant name="UNSIGNED_SHORT_5_5_5_1" type="unsigned long" type-original="GLenum" value="0x8034"/>
        <constant name="UNSIGNED_SHORT_5_6_5" type="unsigned long" type-original="GLenum" value="0x8363"/>
        <constant name="VALIDATE_STATUS" type="unsigned long" type-original="GLenum" value="0x8B83"/>
        <constant name="VENDOR" type="unsigned long" type-original="GLenum" value="0x1F00"/>
        <constant name="VERSION" type="unsigned long" type-original="GLenum" value="0x1F02"/>
        <constant name="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING" type="unsigned long" type-original="GLenum" value="0x889F"/>
        <constant name="VERTEX_ATTRIB_ARRAY_ENABLED" type="unsigned long" type-original="GLenum" value="0x8622"/>
        <constant name="VERTEX_ATTRIB_ARRAY_NORMALIZED" type="unsigned long" type-original="GLenum" value="0x886A"/>
        <constant name="VERTEX_ATTRIB_ARRAY_POINTER" type="unsigned long" type-original="GLenum" value="0x8645"/>
        <constant name="VERTEX_ATTRIB_ARRAY_SIZE" type="unsigned long" type-original="GLenum" value="0x8623"/>
        <constant name="VERTEX_ATTRIB_ARRAY_STRIDE" type="unsigned long" type-original="GLenum" value="0x8624"/>
        <constant name="VERTEX_ATTRIB_ARRAY_TYPE" type="unsigned long" type-original="GLenum" value="0x8625"/>
        <constant name="VERTEX_SHADER" type="unsigned long" type-original="GLenum" value="0x8B31"/>
        <constant name="VIEWPORT" type="unsigned long" type-original="GLenum" value="0x0BA2"/>
        <constant name="ZERO" type="unsigned long" type-original="GLenum" value="0"/>
      </constants>
      <methods>
        <method name="activeTexture" type="void">
          <param name="texture" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="attachShader" type="void">
          <param name="program" nullable="1" type="WebGLProgram"/>
          <param name="shader" nullable="1" type="WebGLShader"/>
        </method>
        <method name="bindAttribLocation" type="void">
          <param name="program" nullable="1" type="WebGLProgram"/>
          <param name="index" type="unsigned long" type-original="GLuint"/>
          <param name="name" type="DOMString"/>
        </method>
        <method name="bindBuffer" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="buffer" nullable="1" type="WebGLBuffer"/>
        </method>
        <method name="bindFramebuffer" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="framebuffer" nullable="1" type="WebGLFramebuffer"/>
        </method>
        <method name="bindRenderbuffer" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="renderbuffer" nullable="1" type="WebGLRenderbuffer"/>
        </method>
        <method name="bindTexture" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="texture" nullable="1" type="WebGLTexture"/>
        </method>
        <method name="blendColor" type="void">
          <param name="red" type="float" type-original="GLclampf"/>
          <param name="green" type="float" type-original="GLclampf"/>
          <param name="blue" type="float" type-original="GLclampf"/>
          <param name="alpha" type="float" type-original="GLclampf"/>
        </method>
        <method name="blendEquation" type="void">
          <param name="mode" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="blendEquationSeparate" type="void">
          <param name="modeRGB" type="unsigned long" type-original="GLenum"/>
          <param name="modeAlpha" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="blendFunc" type="void">
          <param name="sfactor" type="unsigned long" type-original="GLenum"/>
          <param name="dfactor" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="blendFuncSeparate" type="void">
          <param name="srcRGB" type="unsigned long" type-original="GLenum"/>
          <param name="dstRGB" type="unsigned long" type-original="GLenum"/>
          <param name="srcAlpha" type="unsigned long" type-original="GLenum"/>
          <param name="dstAlpha" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="bufferData" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="size" type="(signed long long or ArrayBufferView or ArrayBuffer?)"/>
          <param name="usage" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="bufferSubData" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="offset" type="signed long long" type-original="GLintptr"/>
          <param name="data" type="(ArrayBufferView or ArrayBuffer?)"/>
        </method>
        <method name="checkFramebufferStatus" type="unsigned long" type-original="GLenum">
          <param name="target" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="clear" type="void">
          <param name="mask" type="unsigned long" type-original="GLbitfield"/>
        </method>
        <method name="clearColor" type="void">
          <param name="red" type="float" type-original="GLclampf"/>
          <param name="green" type="float" type-original="GLclampf"/>
          <param name="blue" type="float" type-original="GLclampf"/>
          <param name="alpha" type="float" type-original="GLclampf"/>
        </method>
        <method name="clearDepth" type="void">
          <param name="depth" type="float" type-original="GLclampf"/>
        </method>
        <method name="clearStencil" type="void">
          <param name="s" type="long" type-original="GLint"/>
        </method>
        <method name="colorMask" type="void">
          <param name="red" type="boolean" type-original="GLboolean"/>
          <param name="green" type="boolean" type-original="GLboolean"/>
          <param name="blue" type="boolean" type-original="GLboolean"/>
          <param name="alpha" type="boolean" type-original="GLboolean"/>
        </method>
        <method name="compileShader" type="void">
          <param name="shader" nullable="1" type="WebGLShader"/>
        </method>
        <method name="compressedTexImage2D" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="level" type="long" type-original="GLint"/>
          <param name="internalformat" type="unsigned long" type-original="GLenum"/>
          <param name="width" type="long" type-original="GLsizei"/>
          <param name="height" type="long" type-original="GLsizei"/>
          <param name="border" type="long" type-original="GLint"/>
          <param name="data" type="ArrayBufferView"/>
        </method>
        <method name="compressedTexSubImage2D" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="level" type="long" type-original="GLint"/>
          <param name="xoffset" type="long" type-original="GLint"/>
          <param name="yoffset" type="long" type-original="GLint"/>
          <param name="width" type="long" type-original="GLsizei"/>
          <param name="height" type="long" type-original="GLsizei"/>
          <param name="format" type="unsigned long" type-original="GLenum"/>
          <param name="data" type="ArrayBufferView"/>
        </method>
        <method name="copyTexImage2D" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="level" type="long" type-original="GLint"/>
          <param name="internalformat" type="unsigned long" type-original="GLenum"/>
          <param name="x" type="long" type-original="GLint"/>
          <param name="y" type="long" type-original="GLint"/>
          <param name="width" type="long" type-original="GLsizei"/>
          <param name="height" type="long" type-original="GLsizei"/>
          <param name="border" type="long" type-original="GLint"/>
        </method>
        <method name="copyTexSubImage2D" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="level" type="long" type-original="GLint"/>
          <param name="xoffset" type="long" type-original="GLint"/>
          <param name="yoffset" type="long" type-original="GLint"/>
          <param name="x" type="long" type-original="GLint"/>
          <param name="y" type="long" type-original="GLint"/>
          <param name="width" type="long" type-original="GLsizei"/>
          <param name="height" type="long" type-original="GLsizei"/>
        </method>
        <method name="createBuffer" nullable="1" type="WebGLBuffer"/>
        <method name="createFramebuffer" nullable="1" type="WebGLFramebuffer"/>
        <method name="createProgram" nullable="1" type="WebGLProgram"/>
        <method name="createRenderbuffer" nullable="1" type="WebGLRenderbuffer"/>
        <method name="createShader" nullable="1" type="WebGLShader">
          <param name="type" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="createTexture" nullable="1" type="WebGLTexture"/>
        <method name="cullFace" type="void">
          <param name="mode" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="deleteBuffer" type="void">
          <param name="buffer" nullable="1" type="WebGLBuffer"/>
        </method>
        <method name="deleteFramebuffer" type="void">
          <param name="framebuffer" nullable="1" type="WebGLFramebuffer"/>
        </method>
        <method name="deleteProgram" type="void">
          <param name="program" nullable="1" type="WebGLProgram"/>
        </method>
        <method name="deleteRenderbuffer" type="void">
          <param name="renderbuffer" nullable="1" type="WebGLRenderbuffer"/>
        </method>
        <method name="deleteShader" type="void">
          <param name="shader" nullable="1" type="WebGLShader"/>
        </method>
        <method name="deleteTexture" type="void">
          <param name="texture" nullable="1" type="WebGLTexture"/>
        </method>
        <method name="depthFunc" type="void">
          <param name="func" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="depthMask" type="void">
          <param name="flag" type="boolean" type-original="GLboolean"/>
        </method>
        <method name="depthRange" type="void">
          <param name="zNear" type="float" type-original="GLclampf"/>
          <param name="zFar" type="float" type-original="GLclampf"/>
        </method>
        <method name="detachShader" type="void">
          <param name="program" nullable="1" type="WebGLProgram"/>
          <param name="shader" nullable="1" type="WebGLShader"/>
        </method>
        <method name="disable" type="void">
          <param name="cap" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="disableVertexAttribArray" type="void">
          <param name="index" type="unsigned long" type-original="GLuint"/>
        </method>
        <method name="drawArrays" type="void">
          <param name="mode" type="unsigned long" type-original="GLenum"/>
          <param name="first" type="long" type-original="GLint"/>
          <param name="count" type="long" type-original="GLsizei"/>
        </method>
        <method name="drawElements" type="void">
          <param name="mode" type="unsigned long" type-original="GLenum"/>
          <param name="count" type="long" type-original="GLsizei"/>
          <param name="type" type="unsigned long" type-original="GLenum"/>
          <param name="offset" type="signed long long" type-original="GLintptr"/>
        </method>
        <method name="enable" type="void">
          <param name="cap" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="enableVertexAttribArray" type="void">
          <param name="index" type="unsigned long" type-original="GLuint"/>
        </method>
        <method name="finish" type="void"/>
        <method name="flush" type="void"/>
        <method name="framebufferRenderbuffer" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="attachment" type="unsigned long" type-original="GLenum"/>
          <param name="renderbuffertarget" type="unsigned long" type-original="GLenum"/>
          <param name="renderbuffer" nullable="1" type="WebGLRenderbuffer"/>
        </method>
        <method name="framebufferTexture2D" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="attachment" type="unsigned long" type-original="GLenum"/>
          <param name="textarget" type="unsigned long" type-original="GLenum"/>
          <param name="texture" nullable="1" type="WebGLTexture"/>
          <param name="level" type="long" type-original="GLint"/>
        </method>
        <method name="frontFace" type="void">
          <param name="mode" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="generateMipmap" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="getActiveAttrib" nullable="1" type="WebGLActiveInfo">
          <param name="program" nullable="1" type="WebGLProgram"/>
          <param name="index" type="unsigned long" type-original="GLuint"/>
        </method>
        <method name="getActiveUniform" nullable="1" type="WebGLActiveInfo">
          <param name="program" nullable="1" type="WebGLProgram"/>
          <param name="index" type="unsigned long" type-original="GLuint"/>
        </method>
        <method name="getAttachedShaders" nullable="1" type="sequence&lt;WebGLShader&gt;">
          <param name="program" nullable="1" type="WebGLProgram"/>
        </method>
        <method name="getAttribLocation" type="long" type-original="GLint">
          <param name="program" nullable="1" type="WebGLProgram"/>
          <param name="name" type="DOMString"/>
        </method>
        <method name="getBufferParameter" type="any">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="pname" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="getContextAttributes" type="WebGLContextAttributes"/>
        <method name="getError" type="unsigned long" type-original="GLenum"/>
        <method name="getExtension" nullable="1" type="object">
          <param name="name" type="DOMString"/>
        </method>
        <method name="getFramebufferAttachmentParameter" type="any">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="attachment" type="unsigned long" type-original="GLenum"/>
          <param name="pname" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="getParameter" type="any">
          <param name="pname" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="getProgramInfoLog" nullable="1" type="DOMString">
          <param name="program" nullable="1" type="WebGLProgram"/>
        </method>
        <method name="getProgramParameter" type="any">
          <param name="program" nullable="1" type="WebGLProgram"/>
          <param name="pname" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="getRenderbufferParameter" type="any">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="pname" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="getShaderInfoLog" nullable="1" type="DOMString">
          <param name="shader" nullable="1" type="WebGLShader"/>
        </method>
        <method name="getShaderParameter" type="any">
          <param name="shader" nullable="1" type="WebGLShader"/>
          <param name="pname" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="getShaderPrecisionFormat" nullable="1" type="WebGLShaderPrecisionFormat">
          <param name="shadertype" type="unsigned long" type-original="GLenum"/>
          <param name="precisiontype" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="getShaderSource" nullable="1" type="DOMString">
          <param name="shader" nullable="1" type="WebGLShader"/>
        </method>
        <method name="getSupportedExtensions" nullable="1" type="sequence&lt;DOMString&gt;"/>
        <method name="getTexParameter" type="any">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="pname" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="getUniform" type="any">
          <param name="program" nullable="1" type="WebGLProgram"/>
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
        </method>
        <method name="getUniformLocation" nullable="1" type="WebGLUniformLocation">
          <param name="program" nullable="1" type="WebGLProgram"/>
          <param name="name" type="DOMString"/>
        </method>
        <method name="getVertexAttrib" type="any">
          <param name="index" type="unsigned long" type-original="GLuint"/>
          <param name="pname" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="getVertexAttribOffset" type="signed long long" type-original="GLsizeiptr">
          <param name="index" type="unsigned long" type-original="GLuint"/>
          <param name="pname" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="hint" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="mode" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="isBuffer" type="boolean" type-original="GLboolean">
          <param name="buffer" nullable="1" type="WebGLBuffer"/>
        </method>
        <method name="isContextLost" type="boolean"/>
        <method name="isEnabled" type="boolean" type-original="GLboolean">
          <param name="cap" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="isFramebuffer" type="boolean" type-original="GLboolean">
          <param name="framebuffer" nullable="1" type="WebGLFramebuffer"/>
        </method>
        <method name="isProgram" type="boolean" type-original="GLboolean">
          <param name="program" nullable="1" type="WebGLProgram"/>
        </method>
        <method name="isRenderbuffer" type="boolean" type-original="GLboolean">
          <param name="renderbuffer" nullable="1" type="WebGLRenderbuffer"/>
        </method>
        <method name="isShader" type="boolean" type-original="GLboolean">
          <param name="shader" nullable="1" type="WebGLShader"/>
        </method>
        <method name="isTexture" type="boolean" type-original="GLboolean">
          <param name="texture" nullable="1" type="WebGLTexture"/>
        </method>
        <method name="lineWidth" type="void">
          <param name="width" type="float" type-original="GLfloat"/>
        </method>
        <method name="linkProgram" type="void">
          <param name="program" nullable="1" type="WebGLProgram"/>
        </method>
        <method name="pixelStorei" type="void">
          <param name="pname" type="unsigned long" type-original="GLenum"/>
          <param name="param" type="long" type-original="GLint"/>
        </method>
        <method name="polygonOffset" type="void">
          <param name="factor" type="float" type-original="GLfloat"/>
          <param name="units" type="float" type-original="GLfloat"/>
        </method>
        <method name="readPixels" type="void">
          <param name="x" type="long" type-original="GLint"/>
          <param name="y" type="long" type-original="GLint"/>
          <param name="width" type="long" type-original="GLsizei"/>
          <param name="height" type="long" type-original="GLsizei"/>
          <param name="format" type="unsigned long" type-original="GLenum"/>
          <param name="type" type="unsigned long" type-original="GLenum"/>
          <param name="pixels" nullable="1" type="ArrayBufferView"/>
        </method>
        <method name="renderbufferStorage" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="internalformat" type="unsigned long" type-original="GLenum"/>
          <param name="width" type="long" type-original="GLsizei"/>
          <param name="height" type="long" type-original="GLsizei"/>
        </method>
        <method name="sampleCoverage" type="void">
          <param name="value" type="float" type-original="GLclampf"/>
          <param name="invert" type="boolean" type-original="GLboolean"/>
        </method>
        <method name="scissor" type="void">
          <param name="x" type="long" type-original="GLint"/>
          <param name="y" type="long" type-original="GLint"/>
          <param name="width" type="long" type-original="GLsizei"/>
          <param name="height" type="long" type-original="GLsizei"/>
        </method>
        <method name="shaderSource" type="void">
          <param name="shader" nullable="1" type="WebGLShader"/>
          <param name="source" type="DOMString"/>
        </method>
        <method name="stencilFunc" type="void">
          <param name="func" type="unsigned long" type-original="GLenum"/>
          <param name="ref" type="long" type-original="GLint"/>
          <param name="mask" type="unsigned long" type-original="GLuint"/>
        </method>
        <method name="stencilFuncSeparate" type="void">
          <param name="face" type="unsigned long" type-original="GLenum"/>
          <param name="func" type="unsigned long" type-original="GLenum"/>
          <param name="ref" type="long" type-original="GLint"/>
          <param name="mask" type="unsigned long" type-original="GLuint"/>
        </method>
        <method name="stencilMask" type="void">
          <param name="mask" type="unsigned long" type-original="GLuint"/>
        </method>
        <method name="stencilMaskSeparate" type="void">
          <param name="face" type="unsigned long" type-original="GLenum"/>
          <param name="mask" type="unsigned long" type-original="GLuint"/>
        </method>
        <method name="stencilOp" type="void">
          <param name="fail" type="unsigned long" type-original="GLenum"/>
          <param name="zfail" type="unsigned long" type-original="GLenum"/>
          <param name="zpass" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="stencilOpSeparate" type="void">
          <param name="face" type="unsigned long" type-original="GLenum"/>
          <param name="fail" type="unsigned long" type-original="GLenum"/>
          <param name="zfail" type="unsigned long" type-original="GLenum"/>
          <param name="zpass" type="unsigned long" type-original="GLenum"/>
        </method>
        <method name="texImage2D" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="level" type="long" type-original="GLint"/>
          <param name="internalformat" type="unsigned long" type-original="GLenum"/>
          <param name="format" type="unsigned long" type-original="GLenum"/>
          <param name="type" type="unsigned long" type-original="GLenum"/>
          <param name="pixels" nullable="1" type="ImageData"/>
        </method>
        <method name="texParameterf" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="pname" type="unsigned long" type-original="GLenum"/>
          <param name="param" type="float" type-original="GLfloat"/>
        </method>
        <method name="texParameteri" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="pname" type="unsigned long" type-original="GLenum"/>
          <param name="param" type="long" type-original="GLint"/>
        </method>
        <method name="texSubImage2D" type="void">
          <param name="target" type="unsigned long" type-original="GLenum"/>
          <param name="level" type="long" type-original="GLint"/>
          <param name="xoffset" type="long" type-original="GLint"/>
          <param name="yoffset" type="long" type-original="GLint"/>
          <param name="format" type="unsigned long" type-original="GLenum"/>
          <param name="type" type="unsigned long" type-original="GLenum"/>
          <param name="pixels" nullable="1" type="ImageData"/>
        </method>
        <method name="uniform1f" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="x" type="float" type-original="GLfloat"/>
        </method>
        <method name="uniform1fv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="v" type="Float32Array"/>
        </method>
        <method name="uniform1i" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="x" type="long" type-original="GLint"/>
        </method>
        <method name="uniform1iv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="v" type="Int32Array"/>
        </method>
        <method name="uniform2f" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="x" type="float" type-original="GLfloat"/>
          <param name="y" type="float" type-original="GLfloat"/>
        </method>
        <method name="uniform2fv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="v" type="Float32Array"/>
        </method>
        <method name="uniform2i" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="x" type="long" type-original="GLint"/>
          <param name="y" type="long" type-original="GLint"/>
        </method>
        <method name="uniform2iv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="v" type="Int32Array"/>
        </method>
        <method name="uniform3f" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="x" type="float" type-original="GLfloat"/>
          <param name="y" type="float" type-original="GLfloat"/>
          <param name="z" type="float" type-original="GLfloat"/>
        </method>
        <method name="uniform3fv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="v" type="Float32Array"/>
        </method>
        <method name="uniform3i" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="x" type="long" type-original="GLint"/>
          <param name="y" type="long" type-original="GLint"/>
          <param name="z" type="long" type-original="GLint"/>
        </method>
        <method name="uniform3iv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="v" type="Int32Array"/>
        </method>
        <method name="uniform4f" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="x" type="float" type-original="GLfloat"/>
          <param name="y" type="float" type-original="GLfloat"/>
          <param name="z" type="float" type-original="GLfloat"/>
          <param name="w" type="float" type-original="GLfloat"/>
        </method>
        <method name="uniform4fv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="v" type="Float32Array"/>
        </method>
        <method name="uniform4i" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="x" type="long" type-original="GLint"/>
          <param name="y" type="long" type-original="GLint"/>
          <param name="z" type="long" type-original="GLint"/>
          <param name="w" type="long" type-original="GLint"/>
        </method>
        <method name="uniform4iv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="v" type="Int32Array"/>
        </method>
        <method name="uniformMatrix2fv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="transpose" type="boolean" type-original="GLboolean"/>
          <param name="value" type="Float32Array"/>
        </method>
        <method name="uniformMatrix3fv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="transpose" type="boolean" type-original="GLboolean"/>
          <param name="value" type="Float32Array"/>
        </method>
        <method name="uniformMatrix4fv" type="void">
          <param name="location" nullable="1" type="WebGLUniformLocation"/>
          <param name="transpose" type="boolean" type-original="GLboolean"/>
          <param name="value" type="Float32Array"/>
        </method>
        <method name="useProgram" type="void">
          <param name="program" nullable="1" type="WebGLProgram"/>
        </method>
        <method name="validateProgram" type="void">
          <param name="program" nullable="1" type="WebGLProgram"/>
        </method>
        <method name="vertexAttrib1f" type="void">
          <param name="indx" type="unsigned long" type-original="GLuint"/>
          <param name="x" type="float" type-original="GLfloat"/>
        </method>
        <method name="vertexAttrib1fv" type="void">
          <param name="indx" type="unsigned long" type-original="GLuint"/>
          <param name="values" type="Float32Array"/>
        </method>
        <method name="vertexAttrib2f" type="void">
          <param name="indx" type="unsigned long" type-original="GLuint"/>
          <param name="x" type="float" type-original="GLfloat"/>
          <param name="y" type="float" type-original="GLfloat"/>
        </method>
        <method name="vertexAttrib2fv" type="void">
          <param name="indx" type="unsigned long" type-original="GLuint"/>
          <param name="values" type="Float32Array"/>
        </method>
        <method name="vertexAttrib3f" type="void">
          <param name="indx" type="unsigned long" type-original="GLuint"/>
          <param name="x" type="float" type-original="GLfloat"/>
          <param name="y" type="float" type-original="GLfloat"/>
          <param name="z" type="float" type-original="GLfloat"/>
        </method>
        <method name="vertexAttrib3fv" type="void">
          <param name="indx" type="unsigned long" type-original="GLuint"/>
          <param name="values" type="Float32Array"/>
        </method>
        <method name="vertexAttrib4f" type="void">
          <param name="indx" type="unsigned long" type-original="GLuint"/>
          <param name="x" type="float" type-original="GLfloat"/>
          <param name="y" type="float" type-original="GLfloat"/>
          <param name="z" type="float" type-original="GLfloat"/>
          <param name="w" type="float" type-original="GLfloat"/>
        </method>
        <method name="vertexAttrib4fv" type="void">
          <param name="indx" type="unsigned long" type-original="GLuint"/>
          <param name="values" type="Float32Array"/>
        </method>
        <method name="vertexAttribPointer" type="void">
          <param name="indx" type="unsigned long" type-original="GLuint"/>
          <param name="size" type="long" type-original="GLint"/>
          <param name="type" type="unsigned long" type-original="GLenum"/>
          <param name="normalized" type="boolean" type-original="GLboolean"/>
          <param name="stride" type="long" type-original="GLsizei"/>
          <param name="offset" type="signed long long" type-original="GLintptr"/>
        </method>
        <method name="viewport" type="void">
          <param name="x" type="long" type-original="GLint"/>
          <param name="y" type="long" type-original="GLint"/>
          <param name="width" type="long" type-original="GLsizei"/>
          <param name="height" type="long" type-original="GLsizei"/>
        </method>
      </methods>
      <properties>
        <property name="canvas" read-only="1" type="HTMLCanvasElement"/>
        <property name="drawingBufferHeight" read-only="1" type="long" type-original="GLsizei"/>
        <property name="drawingBufferWidth" read-only="1" type="long" type-original="GLsizei"/>
      </properties>
    </interface>
    <interface extends="WebGLObject" name="WebGLShader"/>
    <interface extends="Object" name="WebGLShaderPrecisionFormat">
      <properties>
        <property name="precision" read-only="1" type="long" type-original="GLint"/>
        <property name="rangeMax" read-only="1" type="long" type-original="GLint"/>
        <property name="rangeMin" read-only="1" type="long" type-original="GLint"/>
      </properties>
    </interface>
    <interface extends="WebGLObject" name="WebGLTexture"/>
    <interface extends="Object" name="WebGLUniformLocation"/>
    <interface extends="Object" name="WebKitCSSMatrix">
      <constructor>
        <param name="text" optional="1" type="DOMString"/>
      </constructor>
      <methods>
        <method name="inverse" tags="CSSOM" type="WebKitCSSMatrix"/>
        <method name="multiply" tags="CSSOM" type="WebKitCSSMatrix">
          <param name="secondMatrix" type="WebKitCSSMatrix"/>
        </method>
        <method name="rotate" tags="CSSOM" type="WebKitCSSMatrix">
          <param name="angleX" type="float"/>
          <param default="0" name="angleY" optional="1" type="float"/>
          <param default="0" name="angleZ" optional="1" type="float"/>
        </method>
        <method name="rotateAxisAngle" tags="CSSOM" type="WebKitCSSMatrix">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param name="z" type="float"/>
          <param name="angle" type="float"/>
        </method>
        <method name="scale" tags="CSSOM" type="WebKitCSSMatrix">
          <param name="scaleX" type="float"/>
          <param name="scaleY" optional="1" type="float"/>
          <param default="1" name="scaleZ" optional="1" type="float"/>
        </method>
        <method name="setMatrixValue" tags="CSSOM" type="void">
          <param name="value" type="DOMString"/>
        </method>
        <method name="skewX" tags="CSSOM" type="WebKitCSSMatrix">
          <param name="angle" type="float"/>
        </method>
        <method name="skewY" tags="CSSOM" type="WebKitCSSMatrix">
          <param name="angle" type="float"/>
        </method>
        <method name="toString" stringifier="1" tags="CSSOM" type="DOMString"/>
        <method name="translate" tags="CSSOM" type="WebKitCSSMatrix">
          <param name="x" type="float"/>
          <param name="y" type="float"/>
          <param default="0" name="z" optional="1" type="float"/>
        </method>
      </methods>
      <properties>
        <property name="a" tags="CSSOM" type="float"/>
        <property name="b" tags="CSSOM" type="float"/>
        <property name="c" tags="CSSOM" type="float"/>
        <property name="d" tags="CSSOM" type="float"/>
        <property name="e" tags="CSSOM" type="float"/>
        <property name="f" tags="CSSOM" type="float"/>
        <property name="m11" tags="CSSOM" type="float"/>
        <property name="m12" tags="CSSOM" type="float"/>
        <property name="m13" tags="CSSOM" type="float"/>
        <property name="m14" tags="CSSOM" type="float"/>
        <property name="m21" tags="CSSOM" type="float"/>
        <property name="m22" tags="CSSOM" type="float"/>
        <property name="m23" tags="CSSOM" type="float"/>
        <property name="m24" tags="CSSOM" type="float"/>
        <property name="m31" tags="CSSOM" type="float"/>
        <property name="m32" tags="CSSOM" type="float"/>
        <property name="m33" tags="CSSOM" type="float"/>
        <property name="m34" tags="CSSOM" type="float"/>
        <property name="m41" tags="CSSOM" type="float"/>
        <property name="m42" tags="CSSOM" type="float"/>
        <property name="m43" tags="CSSOM" type="float"/>
        <property name="m44" tags="CSSOM" type="float"/>
      </properties>
    </interface>
    <interface extends="Object" name="WebKitPoint">
      <constructor>
        <param default="0" name="x" optional="1" type="float"/>
        <param default="0" name="y" optional="1" type="float"/>
      </constructor>
      <properties>
        <property name="x" tags="CSSOM" type="float"/>
        <property name="y" tags="CSSOM" type="float"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="WebSocket" tags="NetworkAccess">
      <constants>
        <constant name="CLOSED" tags="NetworkAccess" type="unsigned short" value="3"/>
        <constant name="CLOSING" tags="NetworkAccess" type="unsigned short" value="2"/>
        <constant name="CONNECTING" tags="NetworkAccess" type="unsigned short" value="0"/>
        <constant name="OPEN" tags="NetworkAccess" type="unsigned short" value="1"/>
      </constants>
      <constructor>
        <param name="url" type="DOMString"/>
        <param name="protocols" optional="1" type="(DOMString or DOMString[])"/>
      </constructor>
      <events>
        <event dispatch="sync" name="error" skips-window="1" specs="Sockets" type="Event"/>
        <event dispatch="async" name="message" skips-window="1" specs="Sockets" type="MessageEvent"/>
        <event dispatch="sync" name="open" skips-window="1" specs="Sockets" type="Event"/>
        <event dispatch="sync" name="close" skips-window="1" specs="Sockets" type="CloseEvent"/>
      </events>
      <methods>
        <method name="close" tags="NetworkAccess" type="void">
          <param name="code" optional="1" type="unsigned short"/>
          <param name="reason" optional="1" type="DOMString"/>
        </method>
        <method name="send" tags="NetworkAccess" type="void">
          <param name="data" type="any"/>
        </method>
      </methods>
      <properties>
        <property name="binaryType" tags="NetworkAccess" type="DOMString"/>
        <property name="bufferedAmount" read-only="1" tags="NetworkAccess" type="unsigned long"/>
        <property name="extensions" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property event-handler="close" name="onclose" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="error" name="onerror" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="message" name="onmessage" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="open" name="onopen" tags="NetworkAccess" type="EventHandler"/>
        <property name="protocol" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="readyState" read-only="1" tags="NetworkAccess" type="unsigned short"/>
        <property name="url" read-only="1" tags="NetworkAccess" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="MouseEvent" name="WheelEvent">
      <constants>
        <constant name="DOM_DELTA_LINE" type="unsigned long" value="0x01"/>
        <constant name="DOM_DELTA_PAGE" type="unsigned long" value="0x02"/>
        <constant name="DOM_DELTA_PIXEL" type="unsigned long" value="0x00"/>
      </constants>
      <constructor>
        <param name="typeArg" type="DOMString"/>
        <param name="eventInitDict" optional="1" type="WheelEventInit"/>
      </constructor>
      <methods>
        <method name="getCurrentPoint" tags="Events" type="void">
          <param name="element" type="Element"/>
        </method>
        <method name="initWheelEvent" tags="Events" type="void">
          <param name="typeArg" type="DOMString"/>
          <param name="canBubbleArg" type="boolean"/>
          <param name="cancelableArg" type="boolean"/>
          <param name="viewArg" type="Window"/>
          <param name="detailArg" type="long"/>
          <param name="screenXArg" type="long"/>
          <param name="screenYArg" type="long"/>
          <param name="clientXArg" type="long"/>
          <param name="clientYArg" type="long"/>
          <param name="buttonArg" type="unsigned short"/>
          <param name="relatedTargetArg" type="EventTarget"/>
          <param name="modifiersListArg" type="DOMString"/>
          <param name="deltaXArg" type="long"/>
          <param name="deltaYArg" type="long"/>
          <param name="deltaZArg" type="long"/>
          <param name="deltaMode" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="deltaMode" read-only="1" tags="Events" type="unsigned long"/>
        <property name="deltaX" read-only="1" tags="Events" type="long"/>
        <property name="deltaY" read-only="1" tags="Events" type="long"/>
        <property name="deltaZ" read-only="1" tags="Events" type="long"/>
      </properties>
    </interface>
    <interface extends="EventTarget" global="Worker" name="WorkerGlobalScope">
      <implements>WorkerUtils</implements>
      <implements>DedicatedWorkerGlobalScope</implements>
      <implements>WindowConsole</implements>
      <methods>
        <method name="close" type="void"/>
        <method name="msWriteProfilerMark" type="void">
          <param name="profilerMarkName" type="DOMString"/>
        </method>
        <method name="toString" stringifier="1" type="DOMString"/>
      </methods>
      <properties>
        <property name="location" property-descriptor-not-configurable="1" read-only="1" type="WorkerLocation"/>
        <property event-handler="error" name="onerror" type="EventHandler"/>
        <property name="self" property-descriptor-not-configurable="1" read-only="1" type="WorkerGlobalScope"/>
      </properties>
    </interface>
    <interface extends="EventTarget" implicit-this="1" name="Window" primary-global="Window"  specs="HTML5">
      <anonymous-methods>
        <method getter="1" specs="HTML5" type="Window">
          <param name="index" type="unsigned long"/>
        </method>
        <method deprecated="1" getter="1" specs="HTML5" type="(Window or Element or HTMLCollection)">
          <param name="name" type="DOMString"/>
        </method>
      </anonymous-methods>
      <events>
        <event alternate-target="Document" dispatch="sync" follows="DOMContentLoaded readystatechange" name="load" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="SVGUnload" specs="SVG1.1" type="Event"/>
        <event dispatch="sync" follows="beforeunload" name="unload" specs="HTML5" type="Event"/>
        <event cancelable="1" dispatch="sync" name="beforeunload" precedes="unload" specs="HTML5" type="BeforeUnloadEvent"/>
        <event dispatch="async" name="hashchange" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="popstate" specs="HTML5" type="PopStateEvent"/>
        <event dispatch="sync" name="SVGResize" specs="SVG1.1" type="Event"/>
        <event dispatch="async" name="resize" specs="HTML5" type="UIEvent"/>
        <event dispatch="sync" name="beforeprint" precedes="afterprint" specs="HTML5" type="Event"/>
        <event dispatch="sync" follows="beforeprint" name="afterprint" specs="HTML5" type="Event"/>
        <event dispatch="sync" name="focus" specs="HTML5" type="FocusEvent"/>
        <event dispatch="sync" name="blur" specs="HTML5" type="FocusEvent"/>
        <event dispatch="sync" name="storage" precedes="storagecommit" specs="Storage" type="StorageEvent"/>
        <event dispatch="sync" name="error" specs="HTML5" type="ErrorEvent"/>
        <event dispatch="async" name="message" specs="PostMsg" type="MessageEvent"/>
        <event dispatch="async" name="orientationchange" specs="Orient" type="Event"/>
        <event dispatch="sync" name="deviceorientation" specs="Orient" tags="NotOnWin7" type="DeviceOrientationEvent"/>
        <event dispatch="sync" name="devicemotion" specs="Orient" tags="NotOnWin7" type="DeviceMotionEvent"/>
        <event dispatch="async" name="compassneedscalibration" specs="Orient" tags="NotOnWin7" type="Event"/>
        <event dispatch="sync" name="pageshow" specs="HTML5" type="PageTransitionEvent"/>
        <event dispatch="sync" name="pagehide" specs="HTML5" type="PageTransitionEvent"/>
        <event dispatch="sync" name="gamepadconnected" specs="GamePad" type="GamepadEvent"/>
        <event dispatch="sync" name="gamepaddisconnected" specs="GamePad" type="GamepadEvent"/>
      </events>
      <implements>WindowTimers</implements>
      <implements>WindowSessionStorage</implements>
      <implements>WindowLocalStorage</implements>
      <implements>WindowConsole</implements>
      <implements>GlobalEventHandlers</implements>
      <implements>IDBEnvironment</implements>
      <implements>WindowBase64</implements>
      <methods>
        <method name="alert" specs="HTML5" type="void">
          <param default="&quot;&quot;" name="message" optional="1" type="DOMString"/>
        </method>
        <method do-not-check-domain-security="1" name="blur" specs="HTML5" type="void"/>
        <method name="cancelAnimationFrame" specs="HTML5" tags="Timers" type="void">
          <param name="handle" type="long"/>
        </method>
        <method name="captureEvents" specs="HTML5" type="void"/>
        <method do-not-check-domain-security="1" name="close" specs="HTML5" type="void"/>
        <method name="confirm" specs="HTML5" type="boolean">
          <param default="&quot;&quot;" name="message" optional="1" type="DOMString"/>
        </method>
        <method do-not-check-domain-security="1" name="focus" specs="HTML5" type="void"/>
        <method name="getComputedStyle" specs="HTML5" tags="CSSOM" type="CSSStyleDeclaration">
          <param name="elt" type="Element"/>
          <param name="pseudoElt" nullable="1" optional="1" type="DOMString"/>
        </method>
        <method name="getMatchedCSSRules" specs="HTML5" type="CSSRuleList">
          <param name="elt" type="Element"/>
          <param name="pseudoElt" nullable="1" optional="1" type="DOMString"/>
        </method>
        <method name="getSelection" specs="HTML5" tags="Editing" type="Selection"/>
        <method name="matchMedia" specs="HTML5" tags="CSSOM" type="MediaQueryList">
          <param name="mediaQuery" type="DOMString"/>
        </method>
        <method name="moveBy" specs="HTML5" type="void">
          <param default="0" name="x" optional="1" type="long"/>
          <param default="0" name="y" optional="1" type="long"/>
        </method>
        <method name="moveTo" specs="HTML5" type="void">
          <param default="0" name="x" optional="1" type="long"/>
          <param default="0" name="y" optional="1" type="long"/>
        </method>
        <method name="msCancelRequestAnimationFrame" specs="HTML5" tags="Timers" type="void">
          <param name="handle" type="long"/>
        </method>
        <method deprecated="1" name="msMatchMedia" specs="HTML5" tags="CSSOM" type="MediaQueryList">
          <param name="mediaQuery" type="DOMString"/>
        </method>
        <method name="msRequestAnimationFrame" specs="HTML5" tags="Timers" type="long">
          <param name="callback" type="FrameRequestCallback"/>
        </method>
        <method name="msWriteProfilerMark" specs="HTML5" type="void">
          <param name="profilerMarkName" type="DOMString"/>
        </method>
        <method name="open" specs="HTML5" type="Window">
          <param name="url" optional="1" type="DOMString"/>
          <param name="target" optional="1" type="DOMString"/>
          <param name="features" optional="1" type="DOMString"/>
          <param default="false" name="replace" optional="1" type="boolean"/>
        </method>
        <method do-not-check-domain-security="1" name="postMessage" specs="HTML5" type="void">
          <param name="message" type="any"/>
          <param name="targetOrigin" type="DOMString"/>
          <param name="ports" optional="1" type="any"/>
        </method>
        <method name="print" specs="HTML5" tags="Printing" type="void"/>
        <method name="prompt" nullable="1" specs="HTML5" type="DOMString">
          <param default="&quot;&quot;" name="message" optional="1" type="DOMString"/>
          <param default="&quot;&quot;" name="default" optional="1" type="DOMString"/>
        </method>
        <method name="releaseEvents" specs="HTML5" type="void"/>
        <method name="requestAnimationFrame" specs="HTML5" tags="Timers" type="long">
          <param name="callback" type="FrameRequestCallback"/>
        </method>
        <method name="resizeBy" specs="HTML5" type="void">
          <param default="0" name="x" optional="1" type="long"/>
          <param default="0" name="y" optional="1" type="long"/>
        </method>
        <method name="resizeTo" specs="HTML5" type="void">
          <param default="0" name="x" optional="1" type="long"/>
          <param default="0" name="y" optional="1" type="long"/>
        </method>
        <method name="scroll" specs="HTML5" tags="CSSOM" type="void">
          <param default="0" name="x" optional="1" type="long"/>
          <param default="0" name="y" optional="1" type="long"/>
        </method>
        <method name="scrollBy" specs="HTML5" tags="CSSOM" type="void">
          <param default="0" name="x" optional="1" type="long"/>
          <param default="0" name="y" optional="1" type="long"/>
        </method>
        <method name="scrollTo" specs="HTML5" tags="CSSOM" type="void">
          <param default="0" name="x" optional="1" type="long"/>
          <param default="0" name="y" optional="1" type="long"/>
        </method>
        <method name="webkitConvertPointFromNodeToPage" specs="HTML5" tags="CSSOM" type="WebKitPoint">
          <param name="node" type="Node"/>
          <param name="pt" type="WebKitPoint"/>
        </method>
        <method name="webkitConvertPointFromPageToNode" specs="HTML5" tags="CSSOM" type="WebKitPoint">
          <param name="node" type="Node"/>
          <param name="pt" type="WebKitPoint"/>
        </method>
      </methods>
      <properties>
        <property name="animationStartTime" read-only="1" specs="HTML5" tags="Timers" type="DOMHighResTimeStamp"/>
        <property name="applicationCache" read-only="1" specs="HTML5" tags="Offline" type="ApplicationCache"/>
        <property name="clientInformation" property-descriptor-not-configurable="1" read-only="1" specs="HTML5" type="Navigator" unforgeable="1"/>
        <property do-not-check-domain-security="1" name="closed" property-descriptor-not-configurable="1" read-only="1" specs="HTML5" type="boolean"/>
        <property name="crypto" read-only="1" specs="HTML5" type="Crypto"/>
        <property name="defaultStatus" specs="HTML5" type="DOMString"/>
        <property name="devicePixelRatio" read-only="1" specs="HTML5" type="double"/>
        <property name="doNotTrack" read-only="1" specs="HTML5" tags="DoNotTrack" type="DOMString"/>
        <property name="document" property-descriptor-not-configurable="1" read-only="1" specs="HTML5" tags="TreeNavigation" type="Document" unforgeable="1"/>
        <property name="event" specs="HTML5" tags="Events" type="Event"/>
        <property name="external" read-only="1" specs="HTML5" type="External"/>
        <property name="frameElement" read-only="1" specs="HTML5" tags="TreeNavigation" type="Element"/>
        <property do-not-check-domain-security="1" name="frames" property-descriptor-not-configurable="1" read-only="1" specs="HTML5" tags="TreeNavigation" type="Window"/>
        <property name="history" property-descriptor-not-configurable="1" read-only="1" specs="HTML5" tags="NetworkAccess" type="History" unforgeable="1"/>
        <property name="innerHeight" read-only="1" specs="HTML5" tags="CSSOM" type="long"/>
        <property name="innerWidth" read-only="1" specs="HTML5" tags="CSSOM" type="long"/>
        <property do-not-check-domain-security="1" name="length" read-only="1" replaceable="1" specs="HTML5" tags="TreeNavigation" type="unsigned long"/>
        <property do-not-check-domain-security="1" name="location" property-descriptor-not-configurable="1" put-forwards="href" read-only="1" specs="HTML5" tags="NetworkAccess" type="Location" unforgeable="1"/>
        <property name="locationbar" read-only="1" replaceable="1" specs="HTML5" tags="CSSOM" type="BarProp"/>
        <property name="menubar" read-only="1" replaceable="1" specs="HTML5" tags="CSSOM" type="BarProp"/>
        <property name="msAnimationStartTime" read-only="1" specs="HTML5" tags="Timers" type="DOMHighResTimeStamp"/>
        <property name="msTemplatePrinter" read-only="1" specs="HTML5" tags="Printing" type="MSTemplatePrinter"/>
        <property name="name" specs="HTML5" tags="TreeIdentity" type="DOMString"/>
        <property name="navigator" property-descriptor-not-configurable="1" read-only="1" specs="HTML5" type="Navigator" unforgeable="1"/>
        <property name="offscreenBuffering" specs="HTML5" type="(DOMString or boolean)"/>
        <property event-handler="abort" name="onabort" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="afterprint" name="onafterprint" specs="HTML5" tags="Printing" type="EventHandler"/>
        <property event-handler="beforeprint" name="onbeforeprint" specs="HTML5" tags="Printing" type="EventHandler"/>
        <property event-handler="beforeunload" name="onbeforeunload" specs="HTML5" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="blur" name="onblur" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="canplay" name="oncanplay" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="canplaythrough" name="oncanplaythrough" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="change" name="onchange" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="click" name="onclick" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="compassneedscalibration" name="oncompassneedscalibration" specs="HTML5" type="EventHandler"/>
        <property event-handler="contextmenu" name="oncontextmenu" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="dblclick" name="ondblclick" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="devicemotion" name="ondevicemotion" specs="HTML5" type="EventHandler"/>
        <property event-handler="deviceorientation" name="ondeviceorientation" specs="HTML5" type="EventHandler"/>
        <property event-handler="drag" name="ondrag" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="dragend" name="ondragend" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="dragenter" name="ondragenter" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="dragleave" name="ondragleave" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="dragover" name="ondragover" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="dragstart" name="ondragstart" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="drop" name="ondrop" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="durationchange" name="ondurationchange" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="emptied" name="onemptied" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="ended" name="onended" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="error" name="onerror" specs="HTML5" tags="Exceptions" type="ErrorEventHandler"/>
        <property event-handler="focus" name="onfocus" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="hashchange" name="onhashchange" specs="HTML5" tags="Offline" type="EventHandler"/>
        <property event-handler="input" name="oninput" specs="HTML5" type="EventHandler"/>
        <property event-handler="keydown" name="onkeydown" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="keypress" name="onkeypress" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="keyup" name="onkeyup" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="load" name="onload" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="loadeddata" name="onloadeddata" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="loadedmetadata" name="onloadedmetadata" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="loadstart" name="onloadstart" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="message" name="onmessage" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="mousedown" name="onmousedown" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="mouseenter" name="onmouseenter" specs="HTML5" type="EventHandler"/>
        <property event-handler="mouseleave" name="onmouseleave" specs="HTML5" type="EventHandler"/>
        <property event-handler="mousemove" name="onmousemove" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="mouseout" name="onmouseout" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="mouseover" name="onmouseover" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="mouseup" name="onmouseup" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="mousewheel" name="onmousewheel" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="MSGestureChange" name="onmsgesturechange" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSGestureDoubleTap" name="onmsgesturedoubletap" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSGestureEnd" name="onmsgestureend" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSGestureHold" name="onmsgesturehold" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSGestureStart" name="onmsgesturestart" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSGestureTap" name="onmsgesturetap" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSInertiaStart" name="onmsinertiastart" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSPointerCancel" name="onmspointercancel" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSPointerDown" name="onmspointerdown" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSPointerEnter" name="onmspointerenter" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSPointerLeave" name="onmspointerleave" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSPointerMove" name="onmspointermove" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSPointerOut" name="onmspointerout" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSPointerOver" name="onmspointerover" specs="HTML5" type="EventHandler"/>
        <property event-handler="MSPointerUp" name="onmspointerup" specs="HTML5" type="EventHandler"/>
        <property event-handler="offline" name="onoffline" specs="HTML5" tags="Offline" type="EventHandler"/>
        <property event-handler="online" name="ononline" specs="HTML5" tags="Offline" type="EventHandler"/>
        <property event-handler="orientationchange" name="onorientationchange" specs="HTML5" type="EventHandler"/>
        <property event-handler="pagehide" name="onpagehide" specs="HTML5" type="EventHandler"/>
        <property event-handler="pageshow" name="onpageshow" specs="HTML5" type="EventHandler"/>
        <property event-handler="pause" name="onpause" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="play" name="onplay" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="playing" name="onplaying" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="popstate" name="onpopstate" specs="HTML5" type="EventHandler"/>
        <property event-handler="progress" name="onprogress" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="ratechange" name="onratechange" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="readystatechange" name="onreadystatechange" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="reset" name="onreset" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="resize" name="onresize" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="scroll" name="onscroll" specs="HTML5" tags="CSSOM" type="EventHandler"/>
        <property event-handler="seeked" name="onseeked" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="seeking" name="onseeking" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="select" name="onselect" specs="HTML5" tags="Editing" type="EventHandler"/>
        <property event-handler="stalled" name="onstalled" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="storage" name="onstorage" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="submit" name="onsubmit" specs="HTML5" tags="Events" type="EventHandler"/>
        <property event-handler="suspend" name="onsuspend" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="timeupdate" name="ontimeupdate" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="touchcancel" name="ontouchcancel" specs="HTML5" type="any"/>
        <property event-handler="touchend" name="ontouchend" specs="HTML5" type="any"/>
        <property event-handler="touchmove" name="ontouchmove" specs="HTML5" type="any"/>
        <property event-handler="touchstart" name="ontouchstart" specs="HTML5" type="any"/>
        <property event-handler="unload" name="onunload" specs="HTML5" tags="NetworkAccess" type="EventHandler"/>
        <property event-handler="volumechange" name="onvolumechange" specs="HTML5" tags="Media" type="EventHandler"/>
        <property event-handler="waiting" name="onwaiting" specs="HTML5" tags="Media" type="EventHandler"/>
        <property do-not-check-domain-security="1" name="opener" read-only="1" replaceable="1" specs="HTML5" type="Window"/>
        <property name="orientation" read-only="1" specs="HTML5" type="DOMString"/>
        <property name="outerHeight" read-only="1" specs="HTML5" tags="CSSOM" type="long"/>
        <property name="outerWidth" read-only="1" specs="HTML5" tags="CSSOM" type="long"/>
        <property name="pageXOffset" read-only="1" specs="HTML5" tags="CSSOM" type="long"/>
        <property name="pageYOffset" read-only="1" specs="HTML5" tags="CSSOM" type="long"/>
        <property do-not-check-domain-security="1" name="parent" read-only="1" replaceable="1" specs="HTML5" tags="TreeNavigation" type="Window"/>
        <property name="performance" read-only="1" replaceable="1" specs="HTML5" tags="Performance" type="Performance"/>
        <property name="personalbar" read-only="1" replaceable="1" specs="HTML5" tags="CSSOM" type="BarProp"/>
        <property name="screen" property-descriptor-not-configurable="1" read-only="1" specs="HTML5" tags="CSSOM" type="Screen" unforgeable="1"/>
        <property name="screenLeft" read-only="1" specs="HTML5" type="long"/>
        <property name="screenTop" read-only="1" specs="HTML5" type="long"/>
        <property name="screenX" read-only="1" specs="HTML5" tags="CSSOM" type="long"/>
        <property name="screenY" read-only="1" specs="HTML5" tags="CSSOM" type="long"/>
        <property name="scrollX" read-only="1" replaceable="1" specs="HTML5" tags="CSSOM" type="long"/>
        <property name="scrollY" read-only="1" replaceable="1" specs="HTML5" tags="CSSOM" type="long"/>
        <property name="scrollbars" read-only="1" replaceable="1" specs="HTML5" tags="CSSOM" type="BarProp"/>
        <property do-not-check-domain-security="1" name="self" read-only="1" replaceable="1" specs="HTML5" tags="TreeNavigation" type="Window"/>
        <property name="status" specs="HTML5" type="DOMString"/>
        <property name="statusbar" read-only="1" replaceable="1" specs="HTML5" tags="CSSOM" type="BarProp"/>
        <property deprecated="1" name="styleMedia" read-only="1" specs="HTML5" tags="CSSOM" type="StyleMedia"/>
        <property name="toolbar" read-only="1" replaceable="1" specs="HTML5" tags="CSSOM" type="BarProp"/>
        <property do-not-check-domain-security="1" name="top" property-descriptor-not-configurable="1" read-only="1" specs="HTML5" tags="TreeNavigation" type="Window"/>
        <property do-not-check-domain-security="1" name="window" property-descriptor-not-configurable="1" read-only="1" specs="HTML5" tags="TreeNavigation" type="Window" unforgeable="1"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="Worker">
      <constructor>
        <param name="stringUrl" type="DOMString"/>
      </constructor>
      <events>
        <event dispatch="async" name="error" skips-window="1" specs="Workers" type="ErrorEvent"/>
        <event dispatch="async" name="message" skips-window="1" specs="Workers" type="MessageEvent"/>
      </events>
      <implements>AbstractWorker</implements>
      <methods>
        <method name="postMessage" type="void">
          <param name="message" type="any"/>
          <param name="ports" optional="1" type="any"/>
        </method>
        <method name="terminate" type="void"/>
      </methods>
      <properties>
        <property event-handler="message" name="onmessage" type="EventHandler"/>
      </properties>
    </interface>
    <interface extends="Document" name="XMLDocument"/>
    <interface extends="EventTarget" name="XMLHttpRequest" tags="NetworkAccess">
      <constants>
        <constant name="DONE" tags="NetworkAccess" type="unsigned short" value="4"/>
        <constant name="HEADERS_RECEIVED" tags="NetworkAccess" type="unsigned short" value="2"/>
        <constant name="LOADING" tags="NetworkAccess" type="unsigned short" value="3"/>
        <constant name="OPENED" tags="NetworkAccess" type="unsigned short" value="1"/>
        <constant name="UNSENT" tags="NetworkAccess" type="unsigned short" value="0"/>
      </constants>
      <constructor/>
      <events>
        <event dispatch="sync-or-async" name="readystatechange" precedes="load" skips-window="1" specs="XHR" type="Event"/>
        <event dispatch="sync-or-async" follows="progress readystatechange" name="load" precedes="loadend" skips-window="1" specs="XHR" type="ProgressEvent"/>
        <event dispatch="sync-or-async" name="timeout" skips-window="1" specs="XHR" type="Event"/>
        <event dispatch="sync-or-async" follows="readystatechange" name="progress" precedes="load" skips-window="1" specs="XHR" type="ProgressEvent"/>
        <event dispatch="sync-or-async" name="abort" skips-window="1" specs="XHR" type="Event"/>
        <event dispatch="sync-or-async" name="error" skips-window="1" specs="XHR" type="Event"/>
        <event dispatch="sync-or-async" name="loadstart" precedes="readystatechange" skips-window="1" specs="XHR" type="ProgressEvent"/>
        <event dispatch="sync-or-async" follows="load" name="loadend" skips-window="1" specs="XHR" type="ProgressEvent"/>
      </events>
      <implements>XMLHttpRequestEventTarget</implements>
      <methods>
        <method name="abort" tags="Exceptions" type="void"/>
        <method name="create" static="1" tags="NetworkAccess" type="XMLHttpRequest"/>
        <method name="getAllResponseHeaders" tags="NetworkAccess" type="DOMString"/>
        <method name="getResponseHeader" nullable="1" tags="NetworkAccess" type="DOMString">
          <param name="header" type="DOMString"/>
        </method>
        <method name="msCachingEnabled" tags="NetworkAccess" type="boolean"/>
        <method name="open" tags="NetworkAccess" type="void">
          <param name="method" type="DOMString"/>
          <param name="url" type="DOMString"/>
          <param name="async" optional="1" type="boolean"/>
          <param name="user" nullable="1" optional="1" type="DOMString"/>
          <param name="password" nullable="1" optional="1" type="DOMString"/>
        </method>
        <method name="overrideMimeType" tags="NetworkAccess" type="void">
          <param name="mime" type="DOMString"/>
        </method>
        <method name="send" tags="NetworkAccess" type="void">
          <param name="data" optional="1" type="(Document or DOMString)"/>
        </method>
        <method name="setRequestHeader" tags="NetworkAccess" type="void">
          <param name="header" type="DOMString"/>
          <param name="value" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property name="msCaching" tags="NetworkAccess" type="DOMString"/>
        <property event-handler="readystatechange" name="onreadystatechange" tags="NetworkAccess" type="EventHandler"/>
        <property name="readyState" read-only="1" tags="TreeIdentity" type="unsigned short"/>
        <property name="response" read-only="1" tags="NetworkAccess" type="any"/>
        <property name="responseBody" read-only="1" tags="NetworkAccess" type="any"/>
        <property name="responseText" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="responseType" tags="NetworkAccess" type="DOMString"/>
        <property name="responseXML" read-only="1" tags="NetworkAccess" type="object"/>
        <property name="status" read-only="1" tags="NetworkAccess" type="unsigned short"/>
        <property name="statusText" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="timeout" tags="NetworkAccess" type="long"/>
        <property name="upload" read-only="1" tags="NetworkAccess" type="XMLHttpRequestUpload"/>
        <property name="withCredentials" tags="TreeIdentity" type="boolean"/>
      </properties>
    </interface>
    <interface extends="EventTarget" name="XMLHttpRequestUpload">
      <events>
        <event dispatch="sync-or-async" follows="loadstart" name="readystatechange" precedes="progress" skips-window="1" specs="XHR" type="ProgressEvent"/>
        <event dispatch="sync-or-async" follows="readystatechange" name="progress" precedes="load" skips-window="1" specs="XHR" type="ProgressEvent"/>
        <event dispatch="sync-or-async" name="abort" skips-window="1" specs="XHR" type="ProgressEvent"/>
        <event dispatch="sync-or-async" name="error" skips-window="1" specs="XHR" type="ProgressEvent"/>
        <event dispatch="sync-or-async" follows="progress" name="load" precedes="loadend" skips-window="1" specs="XHR" type="ProgressEvent"/>
        <event dispatch="sync-or-async" name="loadstart" precedes="readystatechange" skips-window="1" specs="XHR" type="ProgressEvent"/>
        <event dispatch="sync-or-async" follows="load" name="loadend" skips-window="1" specs="XHR" type="ProgressEvent"/>
        <event dispatch="sync-or-async" name="timeout" skips-window="1" specs="XHR" type="ProgressEvent"/>
      </events>
      <implements>XMLHttpRequestEventTarget</implements>
    </interface>
    <interface extends="Object" name="XMLSerializer">
      <constructor/>
      <methods>
        <method name="serializeToString" tags="TreeNavigation" type="DOMString">
          <param name="target" type="Node"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="XPathEvaluator">
      <constructor/>
      <methods>
        <method name="createExpression" type="XPathExpression">
          <param name="expression" type="DOMString"/>
          <param name="resolver" type="XPathNSResolver"/>
        </method>
        <method name="createNSResolver" type="XPathNSResolver">
          <param name="nodeResolver" optional="1" type="Node"/>
        </method>
        <method name="evaluate" type="XPathResult">
          <param name="expression" type="DOMString"/>
          <param name="contextNode" type="Node"/>
          <param name="resolver" type="XPathNSResolver"/>
          <param name="type" type="unsigned short"/>
          <param name="result" type="XPathResult"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="XPathExpression">
      <methods>
        <method name="evaluate" type="XPathExpression">
          <param name="contextNode" type="Node"/>
          <param name="type" type="unsigned short"/>
          <param name="result" type="XPathResult"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="XPathNSResolver">
      <methods>
        <method name="lookupNamespaceURI" type="DOMString">
          <param name="prefix" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="XPathResult">
      <constants>
        <constant name="ANY_TYPE" type="unsigned short" value="0"/>
        <constant name="ANY_UNORDERED_NODE_TYPE" type="unsigned short" value="8"/>
        <constant name="BOOLEAN_TYPE" type="unsigned short" value="3"/>
        <constant name="FIRST_ORDERED_NODE_TYPE" type="unsigned short" value="9"/>
        <constant name="NUMBER_TYPE" type="unsigned short" value="1"/>
        <constant name="ORDERED_NODE_ITERATOR_TYPE" type="unsigned short" value="5"/>
        <constant name="ORDERED_NODE_SNAPSHOT_TYPE" type="unsigned short" value="7"/>
        <constant name="STRING_TYPE" type="unsigned short" value="2"/>
        <constant name="UNORDERED_NODE_ITERATOR_TYPE" type="unsigned short" value="4"/>
        <constant name="UNORDERED_NODE_SNAPSHOT_TYPE" type="unsigned short" value="6"/>
      </constants>
      <methods>
        <method name="iterateNext" type="Node"/>
        <method name="snapshotItem" type="Node">
          <param name="index" type="unsigned long"/>
        </method>
      </methods>
      <properties>
        <property name="booleanValue" read-only="1" type="boolean"/>
        <property name="invalidIteratorState" read-only="1" type="boolean"/>
        <property name="numberValue" read-only="1" type="double"/>
        <property name="resultType" read-only="1" type="unsigned short"/>
        <property name="singleNodeValue" read-only="1" type="Node"/>
        <property name="snapshotLength" read-only="1" type="unsigned long"/>
        <property name="stringValue" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="XSLTProcessor">
      <constructor/>
      <methods>
        <method name="clearParameters" type="void"/>
        <method name="getParameter" type="any">
          <param name="namespaceURI" treat-null-as="EmptyString" type="DOMString"/>
          <param name="localName" type="DOMString"/>
        </method>
        <method name="importStylesheet" type="void">
          <param name="style" type="Node"/>
        </method>
        <method name="removeParameter" type="void">
          <param name="namespaceURI" treat-null-as="EmptyString" type="DOMString"/>
          <param name="localName" type="DOMString"/>
        </method>
        <method name="reset" type="void"/>
        <method name="setParameter" type="void">
          <param name="namespaceURI" treat-null-as="EmptyString" type="DOMString"/>
          <param name="localName" type="DOMString"/>
          <param name="value" type="any"/>
        </method>
        <method name="transformToDocument" type="Document">
          <param name="source" type="Node"/>
        </method>
        <method name="transformToFragment" type="DocumentFragment">
          <param name="source" type="Node"/>
          <param name="document" type="Document"/>
        </method>
      </methods>
    </interface>
  </interfaces>
  <mixin-interfaces>
    <interface extends="Object" name="AbstractWorker" no-interface-object="1">
      <properties>
        <property event-handler="error" name="onerror" type="EventHandler"/>
      </properties>
    </interface>
    <interface extends="Object" name="ChildNode" no-interface-object="1">
      <methods>
        <method name="remove" tags="TreeMutation" type="void"/>
      </methods>
    </interface>
    <interface extends="Object" name="DOML2DeprecatedColorProperty" no-interface-object="1">
      <properties>
        <property content-attribute="color" content-attribute-reflects="1" content-attribute-value-syntax="simple_color" name="color" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="DOML2DeprecatedSizeProperty" no-interface-object="1">
      <properties>
        <property content-attribute="size" content-attribute-reflects="1" content-attribute-value-syntax="1_or_greater_integer" name="size" tags="CSSOM" type="long"/>
      </properties>
    </interface>
    <interface extends="Object" name="DocumentEvent" no-interface-object="1">
      <methods>
        <method name="createEvent" tags="Events" type="Event">
          <param name="eventInterface" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="ElementTraversal" no-interface-object="1">
      <properties>
        <property name="childElementCount" read-only="1" tags="TreeNavigation" type="unsigned long"/>
        <property name="firstElementChild" read-only="1" tags="TreeNavigation" type="Element"/>
        <property name="lastElementChild" read-only="1" tags="TreeNavigation" type="Element"/>
        <property name="nextElementSibling" read-only="1" tags="TreeNavigation" type="Element"/>
        <property name="previousElementSibling" read-only="1" tags="TreeNavigation" type="Element"/>
      </properties>
    </interface>
    <interface extends="Object" name="GetSVGDocument" no-interface-object="1">
      <methods>
        <method name="getSVGDocument" type="Document"/>
      </methods>
    </interface>
    <interface extends="Object" name="GlobalEventHandlers" no-interface-object="1">
      <properties>
        <property content-attribute="onpointercancel" content-attribute-value-syntax="javascript" event-handler="pointercancel" name="onpointercancel" type="EventHandler"/>
        <property content-attribute="onpointerdown" content-attribute-value-syntax="javascript" event-handler="pointerdown" name="onpointerdown" type="EventHandler"/>
        <property content-attribute="onpointerenter" content-attribute-value-syntax="javascript" event-handler="pointerenter" name="onpointerenter" type="EventHandler"/>
        <property content-attribute="onpointerleave" content-attribute-value-syntax="javascript" event-handler="pointerleave" name="onpointerleave" type="EventHandler"/>
        <property content-attribute="onpointermove" content-attribute-value-syntax="javascript" event-handler="pointermove" name="onpointermove" type="EventHandler"/>
        <property content-attribute="onpointerout" content-attribute-value-syntax="javascript" event-handler="pointerout" name="onpointerout" type="EventHandler"/>
        <property content-attribute="onpointerover" content-attribute-value-syntax="javascript" event-handler="pointerover" name="onpointerover" type="EventHandler"/>
        <property content-attribute="onpointerup" content-attribute-value-syntax="javascript" event-handler="pointerup" name="onpointerup" type="EventHandler"/>
      </properties>
    </interface>
    <interface extends="Object" name="HTMLTableAlignment" no-interface-object="1">
      <properties>
        <property content-attribute="char" content-attribute-reflects="1" name="ch" tags="TableOM" type="DOMString"/>
        <property content-attribute="charoff" content-attribute-reflects="1" name="chOff" tags="TableOM" type="DOMString"/>
        <property content-attribute="valign" content-attribute-enum-values="middle baseline bottom top" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="vAlign" tags="CSSOM" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="IDBEnvironment" no-interface-object="1">
      <properties>
        <property name="indexedDB" read-only="1" tags="IndexedDB" type="IDBFactory"/>
        <property name="msIndexedDB" read-only="1" tags="IndexedDB" type="IDBFactory"/>
      </properties>
    </interface>
    <interface extends="Object" name="LinkStyle" no-interface-object="1">
      <properties>
        <property name="sheet" read-only="1" tags="CSSOM" type="StyleSheet"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSBaseReader" no-interface-object="1" tags="FileAPI">
      <constants>
        <constant name="DONE" type="unsigned short" value="2"/>
        <constant name="EMPTY" type="unsigned short" value="0"/>
        <constant name="LOADING" type="unsigned short" value="1"/>
      </constants>
      <methods>
        <method name="abort" type="void"/>
      </methods>
      <properties>
        <property event-handler="abort" name="onabort" type="EventHandler"/>
        <property event-handler="error" name="onerror" type="EventHandler"/>
        <property event-handler="load" name="onload" type="EventHandler"/>
        <property event-handler="loadend" name="onloadend" type="EventHandler"/>
        <property event-handler="loadstart" name="onloadstart" type="EventHandler"/>
        <property event-handler="progress" name="onprogress" type="EventHandler"/>
        <property name="readyState" read-only="1" type="unsigned short"/>
        <property name="result" read-only="1" type="any"/>
      </properties>
    </interface>
    <interface extends="Object" name="MSFileSaver" no-interface-object="1">
      <methods>
        <method name="msSaveBlob" tags="FileAPI" type="boolean">
          <param name="blob" type="any"/>
          <param name="defaultName" optional="1" type="DOMString"/>
        </method>
        <method name="msSaveOrOpenBlob" tags="FileAPI" type="boolean">
          <param name="blob" type="any"/>
          <param name="defaultName" optional="1" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="MSNavigatorDoNotTrack" no-interface-object="1">
      <methods>
        <method name="confirmSiteSpecificTrackingException" tags="DoNotTrack" type="boolean">
          <param name="args" type="ConfirmSiteSpecificExceptionsInformation"/>
        </method>
        <method name="confirmWebWideTrackingException" tags="DoNotTrack" type="boolean">
          <param name="args" type="ExceptionInformation"/>
        </method>
        <method name="removeSiteSpecificTrackingException" tags="DoNotTrack" type="void">
          <param name="args" type="ExceptionInformation"/>
        </method>
        <method name="removeWebWideTrackingException" tags="DoNotTrack" type="void">
          <param name="args" type="ExceptionInformation"/>
        </method>
        <method name="storeSiteSpecificTrackingException" tags="DoNotTrack" type="void">
          <param name="args" type="StoreSiteSpecificExceptionsInformation"/>
        </method>
        <method name="storeWebWideTrackingException" tags="DoNotTrack" type="void">
          <param name="args" type="StoreExceptionsInformation"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="NavigatorContentUtils" no-interface-object="1"/>
    <interface extends="Object" name="NavigatorGeolocation" no-interface-object="1">
      <properties>
        <property name="geolocation" read-only="1" tags="Geolocation" type="Geolocation"/>
      </properties>
    </interface>
    <interface extends="Object" name="NavigatorID" no-interface-object="1">
      <properties>
        <property name="appName" read-only="1" type="DOMString"/>
        <property name="appVersion" read-only="1" type="DOMString"/>
        <property name="platform" read-only="1" tags="NetworkAccess" type="DOMString"/>
        <property name="product" read-only="1" type="DOMString"/>
        <property name="productSub" read-only="1" type="DOMString"/>
        <property name="userAgent" property-descriptor-not-configurable="1" read-only="1" type="DOMString"/>
        <property name="vendor" read-only="1" type="DOMString"/>
        <property name="vendorSub" read-only="1" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="NavigatorOnLine" no-interface-object="1">
      <properties>
        <property name="onLine" read-only="1" tags="Offline" type="boolean"/>
      </properties>
    </interface>
    <interface extends="Object" name="NavigatorStorageUtils" no-interface-object="1"/>
    <interface extends="Object" name="NodeSelector" no-interface-object="1">
      <methods>
        <method name="querySelector" tags="TreeNavigation" type="Element">
          <param name="selectors" type="DOMString"/>
        </method>
        <method name="querySelectorAll" tags="TreeNavigation" type="NodeList">
          <param name="selectors" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="RandomSource" no-interface-object="1">
      <methods>
        <method name="getRandomValues" type="ArrayBufferView">
          <param name="array" type="ArrayBufferView"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="SVGAnimatedPathData" no-interface-object="1">
      <properties>
        <property name="pathSegList" read-only="1" type="SVGPathSegList"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGAnimatedPoints" no-interface-object="1">
      <properties>
        <property name="animatedPoints" read-only="1" type="SVGPointList"/>
        <property content-attribute="points" content-attribute-reflects="1" content-attribute-value-syntax="svg_coordinate_pair_list" name="points" read-only="1" type="SVGPointList"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGExternalResourcesRequired" no-interface-object="1">
      <properties>
        <property content-attribute="externalResourcesRequired" content-attribute-enum-values="false true" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="externalResourcesRequired" read-only="1" type="SVGAnimatedBoolean"/>
      </properties>
    </interface>
    <interface extends="SVGStylable" name="SVGFilterPrimitiveStandardAttributes" no-interface-object="1" tags="SVGFilters">
      <properties>
        <property content-attribute="height" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="height" read-only="1" tags="SVGFilters" type="SVGAnimatedLength"/>
        <property content-attribute="result" content-attribute-reflects="1" name="result" read-only="1" tags="SVGFilters" type="SVGAnimatedString"/>
        <property content-attribute="width" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="width" read-only="1" tags="SVGFilters" type="SVGAnimatedLength"/>
        <property content-attribute="x" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="x" read-only="1" tags="SVGFilters" type="SVGAnimatedLength"/>
        <property content-attribute="y" content-attribute-reflects="1" content-attribute-value-syntax="svg_number_with_optional_unit" name="y" read-only="1" tags="SVGFilters" type="SVGAnimatedLength"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGFitToViewBox" no-interface-object="1">
      <properties>
        <property content-attribute="preserveAspectRatio" content-attribute-reflects="1" content-attribute-value-syntax="svg_aspect_ratio" name="preserveAspectRatio" read-only="1" type="SVGAnimatedPreserveAspectRatio"/>
        <property content-attribute="viewBox" content-attribute-reflects="1" content-attribute-value-syntax="svg_viewbox" name="viewBox" read-only="1" type="SVGAnimatedRect"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGLangSpace" no-interface-object="1">
      <properties>
        <property name="xmllang" type="DOMString"/>
        <property content-attribute="xml:space" content-attribute-enum-values="default preserve" content-attribute-reflects="1" content-attribute-value-syntax="enum" name="xmlspace" type="DOMString"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGLocatable" no-interface-object="1">
      <methods>
        <method name="getBBox" type="SVGRect"/>
        <method name="getCTM" type="SVGMatrix"/>
        <method name="getScreenCTM" type="SVGMatrix"/>
        <method name="getTransformToElement" type="SVGMatrix">
          <param name="element" type="SVGElement"/>
        </method>
      </methods>
      <properties>
        <property name="farthestViewportElement" read-only="1" type="SVGElement"/>
        <property name="nearestViewportElement" read-only="1" type="SVGElement"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGStylable" no-interface-object="1">
      <properties>
        <property content-attribute="class" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_tokens" name="className" read-only="1" type="SVGAnimatedString"/>
        <property content-attribute="style" content-attribute-value-syntax="css" name="style" read-only="1" tags="CSSOM" type="CSSStyleDeclaration"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGTests" no-interface-object="1">
      <methods>
        <method name="hasExtension" type="boolean">
          <param name="extension" type="DOMString"/>
        </method>
      </methods>
      <properties>
        <property content-attribute="requiredExtensions" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_urls" name="requiredExtensions" read-only="1" type="SVGStringList"/>
        <property content-attribute="requiredFeatures" content-attribute-reflects="1" content-attribute-value-syntax="space_separated_tokens" name="requiredFeatures" read-only="1" type="SVGStringList"/>
        <property content-attribute="systemLanguage" content-attribute-reflects="1" content-attribute-value-syntax="comma_separated_bcp47_langs" name="systemLanguage" read-only="1" type="SVGStringList"/>
      </properties>
    </interface>
    <interface extends="SVGLocatable" name="SVGTransformable" no-interface-object="1">
      <properties>
        <property content-attribute="transform" content-attribute-reflects="1" content-attribute-value-syntax="svg_transform_list" name="transform" read-only="1" type="SVGAnimatedTransformList"/>
      </properties>
    </interface>
    <interface extends="Object" name="SVGURIReference" no-interface-object="1">
      <properties>
        <property content-attribute="href" content-attribute-aliases="xlink:href" content-attribute-reflects="1" content-attribute-value-syntax="url" name="href" read-only="1" type="SVGAnimatedString"/>
      </properties>
    </interface>
    <interface extends="Object" name="WindowBase64" no-interface-object="1">
      <methods>
        <method name="atob" tags="Editing" type="DOMString">
          <param name="encodedString" type="DOMString"/>
        </method>
        <method name="btoa" tags="Editing" type="DOMString">
          <param name="rawString" type="DOMString"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="WindowConsole" no-interface-object="1">
      <properties>
        <property name="console" read-only="1" replaceable="1" tags="Console" type="Console"/>
      </properties>
    </interface>
    <interface extends="Object" name="WindowLocalStorage" no-interface-object="1">
      <properties>
        <property name="localStorage" property-descriptor-not-configurable="1" read-only="1" tags="Offline" type="Storage" unforgeable="1"/>
      </properties>
    </interface>
    <interface extends="Object" name="WindowSessionStorage" no-interface-object="1">
      <properties>
        <property name="sessionStorage" property-descriptor-not-configurable="1" read-only="1" tags="Offline" type="Storage" unforgeable="1"/>
      </properties>
    </interface>
    <interface extends="Object" name="WindowTimers" no-interface-object="1" tags="Timers">
      <implements>WindowTimersExtension</implements>
      <methods>
        <method name="clearInterval" type="void">
          <param name="handle" type="long"/>
        </method>
        <method name="clearTimeout" type="void">
          <param name="handle" type="long"/>
        </method>
        <method name="setInterval" type="long">
          <param name="handler" type="any"/>
          <param name="timeout" optional="1" type="any"/>
          <param name="args" type="any" variadic="1"/>
        </method>
        <method name="setTimeout" type="long">
          <param name="handler" type="any"/>
          <param name="timeout" optional="1" type="any"/>
          <param name="args" type="any" variadic="1"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="WindowTimersExtension" no-interface-object="1">
      <methods>
        <method name="clearImmediate" tags="Timers" type="void">
          <param name="handle" type="long"/>
        </method>
        <method name="msClearImmediate" tags="Timers" type="void">
          <param name="handle" type="long"/>
        </method>
        <method name="msSetImmediate" tags="Timers" type="long">
          <param name="expression" type="any"/>
          <param name="args" type="any" variadic="1"/>
        </method>
        <method name="setImmediate" tags="Timers" type="long">
          <param name="expression" type="any"/>
          <param name="args" type="any" variadic="1"/>
        </method>
      </methods>
    </interface>
    <interface extends="Object" name="XMLHttpRequestEventTarget" no-interface-object="1">
      <properties>
        <property event-handler="abort" name="onabort" type="EventHandler"/>
        <property event-handler="error" name="onerror" type="EventHandler"/>
        <property event-handler="load" name="onload" type="EventHandler"/>
        <property event-handler="loadend" name="onloadend" type="EventHandler"/>
        <property event-handler="loadstart" name="onloadstart" type="EventHandler"/>
        <property event-handler="progress" name="onprogress" type="EventHandler"/>
        <property event-handler="timeout" name="ontimeout" type="EventHandler"/>
      </properties>
    </interface>
  </mixin-interfaces>
  <typedefs>
    <typedef new-type="AlgorithmIdentifier" type="(DOMString or Algorithm)"/>
    <typedef new-type="CryptoOperationData" type="ArrayBufferView"/>
    <typedef new-type="GLbitfield" type="unsigned long"/>
    <typedef new-type="GLboolean" type="boolean"/>
    <typedef new-type="GLbyte" type="byte"/>
    <typedef new-type="GLclampf" type="float"/>
    <typedef new-type="GLenum" type="unsigned long"/>
    <typedef new-type="GLfloat" type="float"/>
    <typedef new-type="GLint" type="long"/>
    <typedef new-type="GLintptr" type="signed long long"/>
    <typedef new-type="GLshort" type="short"/>
    <typedef new-type="GLsizei" type="long"/>
    <typedef new-type="GLsizeiptr" type="signed long long"/>
    <typedef new-type="GLubyte" type="octet"/>
    <typedef new-type="GLuint" type="unsigned long"/>
    <typedef new-type="GLushort" type="unsigned short"/>
    <typedef new-type="KeyFormat" type="DOMString"/>
    <typedef new-type="KeyType" type="DOMString"/>
    <typedef new-type="KeyUsage" type="DOMString"/>
  </typedefs>
</webidl-xml>